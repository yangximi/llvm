? 37
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i64*;NElems:<nil>;Typ:i64**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr |LocalIdent:{ 2};ElemType:[100 x i64];NElems:<nil>;Typ:[100 x i64]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 3};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64** %1 metadata !114 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !115];
[MOV] 5:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 4};ElemType:i64*;Src:i64** @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_45_goodG2BData;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !116];
[MOV] 6:ir.InstStore; ;|Src:i64* %4;Dst:i64** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !115];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i64]* %2 metadata !117 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !119];
[MOV] 8:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 5};From:[100 x i64]* %2;To:i8*;Metadata:[!dbg !119];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %5 i8 0 i64 800 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !119];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %3 metadata !120 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !122];
[MOV] 11:ir.InstStore; ;|Src:i64 0;Dst:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !123];
[MOV] 12:ir.TermBr; |Target:label %6;Successors:[label %6];Metadata:[!dbg !125];
[MOV] 13:ir.Block; label %6|
[MOV] 14:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 7};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !126];
[MOV] 15:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 8};Pred:ult;X:i64 %7;Y:i64 100;Typ:i1;Metadata:[!dbg !128];
[MOV] 16:ir.TermCondBr; ir.InstICmp|Cond:i1 %8;TargetTrue:label %9;TargetFalse:label %19;Successors:[label %9 label %19];Metadata:[!dbg !129];
[MOV] 17:ir.Block; label %9|
[MOV] 18:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 10};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !130];
[MOV] 19:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 11};ElemType:[100 x i64];Src:[100 x i64]* %2;Indices:[i64 0 i64 %10];Typ:i64*;InBounds:true;Metadata:[!dbg !132];
[MOV] 20:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 12};ElemType:i64;Src:i64* %11;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !132];
[MOV] 21:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 13};ElemType:i64*;Src:i64** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !133];
[MOV] 22:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 14};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !134];
[MOV] 23:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 15};ElemType:i64;Src:i64* %13;Indices:[i64 %14];Typ:i64*;InBounds:true;Metadata:[!dbg !133];
[MOV] 24:ir.InstStore; ;|Src:i64 %12;Dst:i64* %15;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !135];
[MOV] 25:ir.TermBr; |Target:label %16;Successors:[label %16];Metadata:[!dbg !136];
[MOV] 26:ir.Block; label %16|
[MOV] 27:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 17};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !137];
[MOV] 28:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 18};X:i64 %17;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !137];
[MOV] 29:ir.InstStore; ;|Src:i64 %18;Dst:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !137];
[MOV] 30:ir.TermBr; label %6|Target:label %6;Successors:[label %6];Metadata:[!dbg !138 !llvm.loop !139];
[MOV] 31:ir.Block; label %19|
[MOV] 32:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 20};ElemType:i64*;Src:i64** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !141];
[MOV] 33:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 21};ElemType:i64;Src:i64* %20;Indices:[i64 0];Typ:i64*;InBounds:true;Metadata:[!dbg !141];
[MOV] 34:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 22};ElemType:i64;Src:i64* %21;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !141];
[MOV] 35:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i64)* @printLongLongLine;Args:[i64 %22];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !142];
[MOV] 36:ir.TermRet; |X:<nil>;Metadata:[!dbg !143];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstLoad
4:ir.InstCall,3,5:ir.InstLoad
0:ir.Block,4,6:ir.InstStore
5:ir.InstLoad,3,6:ir.InstStore
0:ir.Block,4,7:ir.InstCall
6:ir.InstStore,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstBitCast
7:ir.InstCall,3,8:ir.InstBitCast
0:ir.Block,4,9:ir.InstCall
8:ir.InstBitCast,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstCall
9:ir.InstCall,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstStore
10:ir.InstCall,3,11:ir.InstStore
11:ir.InstStore,3,12:ir.TermBr
12:ir.TermBr,5,13:ir.Block
12:ir.TermBr,3,13:ir.Block
13:ir.Block,4,14:ir.InstLoad
13:ir.Block,3,14:ir.InstLoad
13:ir.Block,4,15:ir.InstICmp
14:ir.InstLoad,3,15:ir.InstICmp
15:ir.InstICmp,3,16:ir.TermCondBr
16:ir.TermCondBr,5,17:ir.Block
16:ir.TermCondBr,3,17:ir.Block
16:ir.TermCondBr,5,31:ir.Block
16:ir.TermCondBr,3,31:ir.Block
17:ir.Block,4,18:ir.InstLoad
17:ir.Block,3,18:ir.InstLoad
17:ir.Block,4,19:ir.InstGetElementPtr
18:ir.InstLoad,3,19:ir.InstGetElementPtr
17:ir.Block,4,20:ir.InstLoad
19:ir.InstGetElementPtr,3,20:ir.InstLoad
17:ir.Block,4,21:ir.InstLoad
20:ir.InstLoad,3,21:ir.InstLoad
17:ir.Block,4,22:ir.InstLoad
21:ir.InstLoad,3,22:ir.InstLoad
17:ir.Block,4,23:ir.InstGetElementPtr
22:ir.InstLoad,3,23:ir.InstGetElementPtr
17:ir.Block,4,24:ir.InstStore
23:ir.InstGetElementPtr,3,24:ir.InstStore
24:ir.InstStore,3,25:ir.TermBr
25:ir.TermBr,5,26:ir.Block
25:ir.TermBr,3,26:ir.Block
26:ir.Block,4,27:ir.InstLoad
26:ir.Block,3,27:ir.InstLoad
26:ir.Block,4,28:ir.InstAdd
27:ir.InstLoad,3,28:ir.InstAdd
26:ir.Block,4,29:ir.InstStore
28:ir.InstAdd,3,29:ir.InstStore
29:ir.InstStore,3,30:ir.TermBr
30:ir.TermBr,5,13:ir.Block
30:ir.TermBr,3,13:ir.Block
31:ir.Block,4,32:ir.InstLoad
31:ir.Block,3,32:ir.InstLoad
31:ir.Block,4,33:ir.InstGetElementPtr
32:ir.InstLoad,3,33:ir.InstGetElementPtr
31:ir.Block,4,34:ir.InstLoad
33:ir.InstGetElementPtr,3,34:ir.InstLoad
31:ir.Block,4,35:ir.InstCall
34:ir.InstLoad,3,35:ir.InstCall
35:ir.InstCall,3,36:ir.TermRet
21:ir.InstLoad,1,23:ir.InstGetElementPtr
23:ir.InstGetElementPtr,2,21:ir.InstLoad
20:ir.InstLoad,1,24:ir.InstStore
24:ir.InstStore,2,20:ir.InstLoad
23:ir.InstGetElementPtr,1,24:ir.InstStore
24:ir.InstStore,2,23:ir.InstGetElementPtr
27:ir.InstLoad,1,28:ir.InstAdd
28:ir.InstAdd,2,27:ir.InstLoad
34:ir.InstLoad,1,35:ir.InstCall
35:ir.InstCall,2,34:ir.InstLoad
5:ir.InstLoad,1,6:ir.InstStore
6:ir.InstStore,2,5:ir.InstLoad
2:ir.InstAlloca,1,8:ir.InstBitCast
8:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,19:ir.InstGetElementPtr
19:ir.InstGetElementPtr,2,2:ir.InstAlloca
19:ir.InstGetElementPtr,1,20:ir.InstLoad
20:ir.InstLoad,2,19:ir.InstGetElementPtr
32:ir.InstLoad,1,33:ir.InstGetElementPtr
33:ir.InstGetElementPtr,2,32:ir.InstLoad
33:ir.InstGetElementPtr,1,34:ir.InstLoad
34:ir.InstLoad,2,33:ir.InstGetElementPtr
1:ir.InstAlloca,1,6:ir.InstStore
6:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,1:ir.InstAlloca
8:ir.InstBitCast,1,9:ir.InstCall
9:ir.InstCall,2,8:ir.InstBitCast
28:ir.InstAdd,1,29:ir.InstStore
29:ir.InstStore,2,28:ir.InstAdd
3:ir.InstAlloca,1,11:ir.InstStore
11:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,14:ir.InstLoad
14:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,18:ir.InstLoad
18:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,22:ir.InstLoad
22:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,27:ir.InstLoad
27:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,29:ir.InstStore
29:ir.InstStore,2,3:ir.InstAlloca
14:ir.InstLoad,1,15:ir.InstICmp
15:ir.InstICmp,2,14:ir.InstLoad
16:ir.TermCondBr,2,15:ir.InstICmp
15:ir.InstICmp,1,16:ir.TermCondBr
