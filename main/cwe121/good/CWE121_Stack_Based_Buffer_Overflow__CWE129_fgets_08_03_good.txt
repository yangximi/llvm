? 59
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !250 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !251];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !252];
[MOV] 6:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 4};Callee:i32 ()* @staticReturnsFalse;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !253];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:ne;X:i32 %4;Y:i32 0;Typ:i1;Metadata:[!dbg !253];
[MOV] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %7;Successors:[label %6 label %7];Metadata:[!dbg !255];
[MOV] 9:ir.Block; label %6|
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !256];
[MOV] 11:ir.TermBr; |Target:label %8;Successors:[label %8];Metadata:[!dbg !258];
[MOV] 12:ir.Block; label %7|
[MOV] 13:ir.InstStore; ;|Src:i32 7;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !259];
[MOV] 14:ir.TermBr; |Target:label %8;Successors:[label %8];Metadata:[];
[MOV] 15:ir.Block; label %8|
[MOV] 16:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 9};Callee:i32 ()* @staticReturnsTrue;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !261];
[MOV] 17:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 10};Pred:ne;X:i32 %9;Y:i32 0;Typ:i1;Metadata:[!dbg !261];
[MOV] 18:ir.TermCondBr; ir.InstICmp|Cond:i1 %10;TargetTrue:label %11;TargetFalse:label %33;Successors:[label %11 label %33];Metadata:[!dbg !263];
[MOV] 19:ir.Block; label %11|
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !264 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !267];
[MOV] 21:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !268 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !269];
[MOV] 22:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 12};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !269];
[MOV] 23:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %12 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !269];
[MOV] 24:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 13};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !270];
[MOV] 25:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 14};Pred:sge;X:i32 %13;Y:i32 0;Typ:i1;Metadata:[!dbg !272];
[MOV] 26:ir.TermCondBr; ir.InstICmp|Cond:i1 %14;TargetTrue:label %15;TargetFalse:label %31;Successors:[label %15 label %31];Metadata:[!dbg !273];
[MOV] 27:ir.Block; label %15|
[MOV] 28:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 16};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !274];
[MOV] 29:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 17};From:i32 %16;To:i64;Metadata:[!dbg !276];
[MOV] 30:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 18};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %17];Typ:i32*;InBounds:true;Metadata:[!dbg !276];
[MOV] 31:ir.InstStore; ;|Src:i32 1;Dst:i32* %18;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !277];
[MOV] 32:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !278];
[MOV] 33:ir.TermBr; |Target:label %19;Successors:[label %19];Metadata:[!dbg !280];
[MOV] 34:ir.Block; label %19|
[MOV] 35:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 20};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !281];
[MOV] 36:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 21};Pred:slt;X:i32 %20;Y:i32 10;Typ:i1;Metadata:[!dbg !283];
[MOV] 37:ir.TermCondBr; ir.InstICmp|Cond:i1 %21;TargetTrue:label %22;TargetFalse:label %30;Successors:[label %22 label %30];Metadata:[!dbg !284];
[MOV] 38:ir.Block; label %22|
[MOV] 39:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 23};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !285];
[MOV] 40:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 24};From:i32 %23;To:i64;Metadata:[!dbg !287];
[MOV] 41:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 25};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %24];Typ:i32*;InBounds:true;Metadata:[!dbg !287];
[MOV] 42:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 26};ElemType:i32;Src:i32* %25;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !287];
[MOV] 43:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %26];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !288];
[MOV] 44:ir.TermBr; |Target:label %27;Successors:[label %27];Metadata:[!dbg !289];
[MOV] 45:ir.Block; label %27|
[MOV] 46:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 28};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !290];
[MOV] 47:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 29};X:i32 %28;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !290];
[MOV] 48:ir.InstStore; ;|Src:i32 %29;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !290];
[MOV] 49:ir.TermBr; label %19|Target:label %19;Successors:[label %19];Metadata:[!dbg !291 !llvm.loop !292];
[MOV] 50:ir.Block; label %30|
[MOV] 51:ir.TermBr; |Target:label %32;Successors:[label %32];Metadata:[!dbg !294];
[MOV] 52:ir.Block; label %31|
[MOV] 53:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !295];
[MOV] 54:ir.TermBr; |Target:label %32;Successors:[label %32];Metadata:[];
[MOV] 55:ir.Block; label %32|
[MOV] 56:ir.TermBr; |Target:label %33;Successors:[label %33];Metadata:[!dbg !297];
[MOV] 57:ir.Block; label %33|
[MOV] 58:ir.TermRet; |X:<nil>;Metadata:[!dbg !298];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstCall
5:ir.InstStore,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstICmp
6:ir.InstCall,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,12:ir.Block
8:ir.TermCondBr,3,12:ir.Block
9:ir.Block,4,10:ir.InstCall
9:ir.Block,3,10:ir.InstCall
10:ir.InstCall,3,11:ir.TermBr
11:ir.TermBr,5,15:ir.Block
11:ir.TermBr,3,15:ir.Block
12:ir.Block,4,13:ir.InstStore
12:ir.Block,3,13:ir.InstStore
13:ir.InstStore,3,14:ir.TermBr
14:ir.TermBr,5,15:ir.Block
14:ir.TermBr,3,15:ir.Block
15:ir.Block,4,16:ir.InstCall
15:ir.Block,3,16:ir.InstCall
15:ir.Block,4,17:ir.InstICmp
16:ir.InstCall,3,17:ir.InstICmp
17:ir.InstICmp,3,18:ir.TermCondBr
18:ir.TermCondBr,5,19:ir.Block
18:ir.TermCondBr,3,19:ir.Block
18:ir.TermCondBr,5,57:ir.Block
18:ir.TermCondBr,3,57:ir.Block
19:ir.Block,4,20:ir.InstCall
19:ir.Block,3,20:ir.InstCall
19:ir.Block,4,21:ir.InstCall
20:ir.InstCall,3,21:ir.InstCall
19:ir.Block,4,22:ir.InstBitCast
21:ir.InstCall,3,22:ir.InstBitCast
19:ir.Block,4,23:ir.InstCall
22:ir.InstBitCast,3,23:ir.InstCall
19:ir.Block,4,24:ir.InstLoad
23:ir.InstCall,3,24:ir.InstLoad
19:ir.Block,4,25:ir.InstICmp
24:ir.InstLoad,3,25:ir.InstICmp
25:ir.InstICmp,3,26:ir.TermCondBr
26:ir.TermCondBr,5,27:ir.Block
26:ir.TermCondBr,3,27:ir.Block
26:ir.TermCondBr,5,52:ir.Block
26:ir.TermCondBr,3,52:ir.Block
27:ir.Block,4,28:ir.InstLoad
27:ir.Block,3,28:ir.InstLoad
27:ir.Block,4,29:ir.InstSExt
28:ir.InstLoad,3,29:ir.InstSExt
27:ir.Block,4,30:ir.InstGetElementPtr
29:ir.InstSExt,3,30:ir.InstGetElementPtr
27:ir.Block,4,31:ir.InstStore
30:ir.InstGetElementPtr,3,31:ir.InstStore
27:ir.Block,4,32:ir.InstStore
31:ir.InstStore,3,32:ir.InstStore
32:ir.InstStore,3,33:ir.TermBr
33:ir.TermBr,5,34:ir.Block
33:ir.TermBr,3,34:ir.Block
34:ir.Block,4,35:ir.InstLoad
34:ir.Block,3,35:ir.InstLoad
34:ir.Block,4,36:ir.InstICmp
35:ir.InstLoad,3,36:ir.InstICmp
36:ir.InstICmp,3,37:ir.TermCondBr
37:ir.TermCondBr,5,38:ir.Block
37:ir.TermCondBr,3,38:ir.Block
37:ir.TermCondBr,5,50:ir.Block
37:ir.TermCondBr,3,50:ir.Block
38:ir.Block,4,39:ir.InstLoad
38:ir.Block,3,39:ir.InstLoad
38:ir.Block,4,40:ir.InstSExt
39:ir.InstLoad,3,40:ir.InstSExt
38:ir.Block,4,41:ir.InstGetElementPtr
40:ir.InstSExt,3,41:ir.InstGetElementPtr
38:ir.Block,4,42:ir.InstLoad
41:ir.InstGetElementPtr,3,42:ir.InstLoad
38:ir.Block,4,43:ir.InstCall
42:ir.InstLoad,3,43:ir.InstCall
43:ir.InstCall,3,44:ir.TermBr
44:ir.TermBr,5,45:ir.Block
44:ir.TermBr,3,45:ir.Block
45:ir.Block,4,46:ir.InstLoad
45:ir.Block,3,46:ir.InstLoad
45:ir.Block,4,47:ir.InstAdd
46:ir.InstLoad,3,47:ir.InstAdd
45:ir.Block,4,48:ir.InstStore
47:ir.InstAdd,3,48:ir.InstStore
48:ir.InstStore,3,49:ir.TermBr
49:ir.TermBr,5,34:ir.Block
49:ir.TermBr,3,34:ir.Block
50:ir.Block,3,51:ir.TermBr
51:ir.TermBr,5,55:ir.Block
51:ir.TermBr,3,55:ir.Block
52:ir.Block,4,53:ir.InstCall
52:ir.Block,3,53:ir.InstCall
53:ir.InstCall,3,54:ir.TermBr
54:ir.TermBr,5,55:ir.Block
54:ir.TermBr,3,55:ir.Block
55:ir.Block,3,56:ir.TermBr
56:ir.TermBr,5,57:ir.Block
56:ir.TermBr,3,57:ir.Block
57:ir.Block,3,58:ir.TermRet
16:ir.InstCall,1,17:ir.InstICmp
17:ir.InstICmp,2,16:ir.InstCall
3:ir.InstAlloca,1,22:ir.InstBitCast
22:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,30:ir.InstGetElementPtr
30:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,41:ir.InstGetElementPtr
41:ir.InstGetElementPtr,2,3:ir.InstAlloca
2:ir.InstAlloca,1,32:ir.InstStore
32:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,39:ir.InstLoad
39:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,46:ir.InstLoad
46:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,48:ir.InstStore
48:ir.InstStore,2,2:ir.InstAlloca
41:ir.InstGetElementPtr,1,42:ir.InstLoad
42:ir.InstLoad,2,41:ir.InstGetElementPtr
46:ir.InstLoad,1,47:ir.InstAdd
47:ir.InstAdd,2,46:ir.InstLoad
47:ir.InstAdd,1,48:ir.InstStore
48:ir.InstStore,2,47:ir.InstAdd
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstStore
13:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,24:ir.InstLoad
24:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,1:ir.InstAlloca
30:ir.InstGetElementPtr,1,31:ir.InstStore
31:ir.InstStore,2,30:ir.InstGetElementPtr
22:ir.InstBitCast,1,23:ir.InstCall
23:ir.InstCall,2,22:ir.InstBitCast
24:ir.InstLoad,1,25:ir.InstICmp
25:ir.InstICmp,2,24:ir.InstLoad
28:ir.InstLoad,1,29:ir.InstSExt
29:ir.InstSExt,2,28:ir.InstLoad
35:ir.InstLoad,1,36:ir.InstICmp
36:ir.InstICmp,2,35:ir.InstLoad
39:ir.InstLoad,1,40:ir.InstSExt
40:ir.InstSExt,2,39:ir.InstLoad
42:ir.InstLoad,1,43:ir.InstCall
43:ir.InstCall,2,42:ir.InstLoad
6:ir.InstCall,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstCall
37:ir.TermCondBr,2,36:ir.InstICmp
36:ir.InstICmp,1,37:ir.TermCondBr
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
18:ir.TermCondBr,2,17:ir.InstICmp
17:ir.InstICmp,1,18:ir.TermCondBr
26:ir.TermCondBr,2,25:ir.InstICmp
25:ir.InstICmp,1,26:ir.TermCondBr
