? 22
[MOV] 0:ir.Block; label %1|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstStore; ;|Src:i8* %0;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[];
[MOV] 3:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !101 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !102];
[MOV] 4:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 3};ElemType:i32;Src:i32* @goodG2B1Static;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !103];
[MOV] 5:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 4};Pred:ne;X:i32 %3;Y:i32 0;Typ:i1;Metadata:[!dbg !103];
[MOV] 6:ir.TermCondBr; ir.InstICmp|Cond:i1 %4;TargetTrue:label %5;TargetFalse:label %6;Successors:[label %5 label %6];Metadata:[!dbg !105];
[MOV] 7:ir.Block; label %5|
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !106];
[MOV] 9:ir.TermBr; |Target:label %13;Successors:[label %13];Metadata:[!dbg !108];
[MOV] 10:ir.Block; label %6|
[MOV] 11:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 7};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !109];
[MOV] 12:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 8};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !109];
[MOV] 13:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 9};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %8 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !109];
[MOV] 14:ir.InstCall; ir.InstCall ;|LocalIdent:{ 10};Callee:i8* (i8*, i32, i64, i64)* @__memset_chk;Args:[i8* %7 i32 65 i64 49 i64 %9];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !109];
[MOV] 15:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 11};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !111];
[MOV] 16:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 12};ElemType:i8;Src:i8* %11;Indices:[i64 49];Typ:i8*;InBounds:true;Metadata:[!dbg !111];
[MOV] 17:ir.InstStore; ;|Src:i8 0;Dst:i8* %12;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !112];
[MOV] 18:ir.TermBr; |Target:label %13;Successors:[label %13];Metadata:[];
[MOV] 19:ir.Block; label %13|
[MOV] 20:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 14};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !113];
[MOV] 21:ir.TermRet; ir.InstLoad|X:i8* %14;Metadata:[!dbg !114];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstStore
1:ir.InstAlloca,3,2:ir.InstStore
0:ir.Block,4,3:ir.InstCall
2:ir.InstStore,3,3:ir.InstCall
0:ir.Block,4,4:ir.InstLoad
3:ir.InstCall,3,4:ir.InstLoad
0:ir.Block,4,5:ir.InstICmp
4:ir.InstLoad,3,5:ir.InstICmp
5:ir.InstICmp,3,6:ir.TermCondBr
6:ir.TermCondBr,5,7:ir.Block
6:ir.TermCondBr,3,7:ir.Block
6:ir.TermCondBr,5,10:ir.Block
6:ir.TermCondBr,3,10:ir.Block
7:ir.Block,4,8:ir.InstCall
7:ir.Block,3,8:ir.InstCall
8:ir.InstCall,3,9:ir.TermBr
9:ir.TermBr,5,19:ir.Block
9:ir.TermBr,3,19:ir.Block
10:ir.Block,4,11:ir.InstLoad
10:ir.Block,3,11:ir.InstLoad
10:ir.Block,4,12:ir.InstLoad
11:ir.InstLoad,3,12:ir.InstLoad
10:ir.Block,4,13:ir.InstCall
12:ir.InstLoad,3,13:ir.InstCall
10:ir.Block,4,14:ir.InstCall
13:ir.InstCall,3,14:ir.InstCall
10:ir.Block,4,15:ir.InstLoad
14:ir.InstCall,3,15:ir.InstLoad
10:ir.Block,4,16:ir.InstGetElementPtr
15:ir.InstLoad,3,16:ir.InstGetElementPtr
10:ir.Block,4,17:ir.InstStore
16:ir.InstGetElementPtr,3,17:ir.InstStore
17:ir.InstStore,3,18:ir.TermBr
18:ir.TermBr,5,19:ir.Block
18:ir.TermBr,3,19:ir.Block
19:ir.Block,4,20:ir.InstLoad
19:ir.Block,3,20:ir.InstLoad
20:ir.InstLoad,3,21:ir.TermRet
1:ir.InstAlloca,1,2:ir.InstStore
2:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,11:ir.InstLoad
11:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,12:ir.InstLoad
12:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,1:ir.InstAlloca
4:ir.InstLoad,1,5:ir.InstICmp
5:ir.InstICmp,2,4:ir.InstLoad
12:ir.InstLoad,1,13:ir.InstCall
13:ir.InstCall,2,12:ir.InstLoad
11:ir.InstLoad,1,14:ir.InstCall
14:ir.InstCall,2,11:ir.InstLoad
13:ir.InstCall,1,14:ir.InstCall
14:ir.InstCall,2,13:ir.InstCall
15:ir.InstLoad,1,16:ir.InstGetElementPtr
16:ir.InstGetElementPtr,2,15:ir.InstLoad
16:ir.InstGetElementPtr,1,17:ir.InstStore
17:ir.InstStore,2,16:ir.InstGetElementPtr
6:ir.TermCondBr,2,5:ir.InstICmp
5:ir.InstICmp,1,6:ir.TermCondBr
21:ir.TermRet,2,20:ir.InstLoad
20:ir.InstLoad,1,21:ir.TermRet
