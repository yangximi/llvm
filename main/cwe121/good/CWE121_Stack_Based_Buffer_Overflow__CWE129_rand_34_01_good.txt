? 54
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstStore ir.InstBitCast ;ir.InstBitCast ir.InstBitCast |LocalIdent:{ 2};ElemType:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_34_unionType;NElems:<nil>;Typ:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_34_unionType*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !94 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !95];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %union.CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_34_unionType* %2 metadata !96 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !97];
[MOV] 8:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !98];
[MOV] 9:ir.InstStore; ;|Src:i32 7;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !99];
[MOV] 10:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 6};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !100];
[MOV] 11:ir.InstBitCast; ir.InstBitCast ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 7};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_34_unionType* %2;To:i32*;Metadata:[!dbg !101];
[MOV] 12:ir.InstStore; ;|Src:i32 %6;Dst:i32* %7;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !102];
[MOV] 13:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %3 metadata !103 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !105];
[MOV] 14:ir.InstBitCast; ir.InstBitCast ;ir.InstLoad |LocalIdent:{ 8};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_34_unionType* %2;To:i32*;Metadata:[!dbg !106];
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 9};ElemType:i32;Src:i32* %8;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !106];
[MOV] 16:ir.InstStore; ;|Src:i32 %9;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !105];
[MOV] 17:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !107 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !109];
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %5 metadata !110 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !111];
[MOV] 19:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 10};From:[10 x i32]* %5;To:i8*;Metadata:[!dbg !111];
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %10 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !111];
[MOV] 21:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 11};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !112];
[MOV] 22:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 12};Pred:sge;X:i32 %11;Y:i32 0;Typ:i1;Metadata:[!dbg !114];
[MOV] 23:ir.TermCondBr; ir.InstICmp|Cond:i1 %12;TargetTrue:label %13;TargetFalse:label %29;Successors:[label %13 label %29];Metadata:[!dbg !115];
[MOV] 24:ir.Block; label %13|
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 14};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !116];
[MOV] 26:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 15};From:i32 %14;To:i64;Metadata:[!dbg !118];
[MOV] 27:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 16};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %15];Typ:i32*;InBounds:true;Metadata:[!dbg !118];
[MOV] 28:ir.InstStore; ;|Src:i32 1;Dst:i32* %16;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !119];
[MOV] 29:ir.InstStore; ;|Src:i32 0;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !120];
[MOV] 30:ir.TermBr; |Target:label %17;Successors:[label %17];Metadata:[!dbg !122];
[MOV] 31:ir.Block; label %17|
[MOV] 32:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 18};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !123];
[MOV] 33:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 19};Pred:slt;X:i32 %18;Y:i32 10;Typ:i1;Metadata:[!dbg !125];
[MOV] 34:ir.TermCondBr; ir.InstICmp|Cond:i1 %19;TargetTrue:label %20;TargetFalse:label %28;Successors:[label %20 label %28];Metadata:[!dbg !126];
[MOV] 35:ir.Block; label %20|
[MOV] 36:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 21};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !127];
[MOV] 37:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 22};From:i32 %21;To:i64;Metadata:[!dbg !129];
[MOV] 38:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 23};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %22];Typ:i32*;InBounds:true;Metadata:[!dbg !129];
[MOV] 39:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 24};ElemType:i32;Src:i32* %23;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !129];
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %24];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !130];
[MOV] 41:ir.TermBr; |Target:label %25;Successors:[label %25];Metadata:[!dbg !131];
[MOV] 42:ir.Block; label %25|
[MOV] 43:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 26};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !132];
[MOV] 44:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 27};X:i32 %26;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !132];
[MOV] 45:ir.InstStore; ;|Src:i32 %27;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !132];
[MOV] 46:ir.TermBr; label %17|Target:label %17;Successors:[label %17];Metadata:[!dbg !133 !llvm.loop !134];
[MOV] 47:ir.Block; label %28|
[MOV] 48:ir.TermBr; |Target:label %30;Successors:[label %30];Metadata:[!dbg !136];
[MOV] 49:ir.Block; label %29|
[MOV] 50:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !137];
[MOV] 51:ir.TermBr; |Target:label %30;Successors:[label %30];Metadata:[];
[MOV] 52:ir.Block; label %30|
[MOV] 53:ir.TermRet; |X:<nil>;Metadata:[!dbg !139];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstStore
7:ir.InstCall,3,8:ir.InstStore
0:ir.Block,4,9:ir.InstStore
8:ir.InstStore,3,9:ir.InstStore
0:ir.Block,4,10:ir.InstLoad
9:ir.InstStore,3,10:ir.InstLoad
0:ir.Block,4,11:ir.InstBitCast
10:ir.InstLoad,3,11:ir.InstBitCast
0:ir.Block,4,12:ir.InstStore
11:ir.InstBitCast,3,12:ir.InstStore
0:ir.Block,4,13:ir.InstCall
12:ir.InstStore,3,13:ir.InstCall
0:ir.Block,4,14:ir.InstBitCast
13:ir.InstCall,3,14:ir.InstBitCast
0:ir.Block,4,15:ir.InstLoad
14:ir.InstBitCast,3,15:ir.InstLoad
0:ir.Block,4,16:ir.InstStore
15:ir.InstLoad,3,16:ir.InstStore
0:ir.Block,4,17:ir.InstCall
16:ir.InstStore,3,17:ir.InstCall
0:ir.Block,4,18:ir.InstCall
17:ir.InstCall,3,18:ir.InstCall
0:ir.Block,4,19:ir.InstBitCast
18:ir.InstCall,3,19:ir.InstBitCast
0:ir.Block,4,20:ir.InstCall
19:ir.InstBitCast,3,20:ir.InstCall
0:ir.Block,4,21:ir.InstLoad
20:ir.InstCall,3,21:ir.InstLoad
0:ir.Block,4,22:ir.InstICmp
21:ir.InstLoad,3,22:ir.InstICmp
22:ir.InstICmp,3,23:ir.TermCondBr
23:ir.TermCondBr,5,24:ir.Block
23:ir.TermCondBr,3,24:ir.Block
23:ir.TermCondBr,5,49:ir.Block
23:ir.TermCondBr,3,49:ir.Block
24:ir.Block,4,25:ir.InstLoad
24:ir.Block,3,25:ir.InstLoad
24:ir.Block,4,26:ir.InstSExt
25:ir.InstLoad,3,26:ir.InstSExt
24:ir.Block,4,27:ir.InstGetElementPtr
26:ir.InstSExt,3,27:ir.InstGetElementPtr
24:ir.Block,4,28:ir.InstStore
27:ir.InstGetElementPtr,3,28:ir.InstStore
24:ir.Block,4,29:ir.InstStore
28:ir.InstStore,3,29:ir.InstStore
29:ir.InstStore,3,30:ir.TermBr
30:ir.TermBr,5,31:ir.Block
30:ir.TermBr,3,31:ir.Block
31:ir.Block,4,32:ir.InstLoad
31:ir.Block,3,32:ir.InstLoad
31:ir.Block,4,33:ir.InstICmp
32:ir.InstLoad,3,33:ir.InstICmp
33:ir.InstICmp,3,34:ir.TermCondBr
34:ir.TermCondBr,5,35:ir.Block
34:ir.TermCondBr,3,35:ir.Block
34:ir.TermCondBr,5,47:ir.Block
34:ir.TermCondBr,3,47:ir.Block
35:ir.Block,4,36:ir.InstLoad
35:ir.Block,3,36:ir.InstLoad
35:ir.Block,4,37:ir.InstSExt
36:ir.InstLoad,3,37:ir.InstSExt
35:ir.Block,4,38:ir.InstGetElementPtr
37:ir.InstSExt,3,38:ir.InstGetElementPtr
35:ir.Block,4,39:ir.InstLoad
38:ir.InstGetElementPtr,3,39:ir.InstLoad
35:ir.Block,4,40:ir.InstCall
39:ir.InstLoad,3,40:ir.InstCall
40:ir.InstCall,3,41:ir.TermBr
41:ir.TermBr,5,42:ir.Block
41:ir.TermBr,3,42:ir.Block
42:ir.Block,4,43:ir.InstLoad
42:ir.Block,3,43:ir.InstLoad
42:ir.Block,4,44:ir.InstAdd
43:ir.InstLoad,3,44:ir.InstAdd
42:ir.Block,4,45:ir.InstStore
44:ir.InstAdd,3,45:ir.InstStore
45:ir.InstStore,3,46:ir.TermBr
46:ir.TermBr,5,31:ir.Block
46:ir.TermBr,3,31:ir.Block
47:ir.Block,3,48:ir.TermBr
48:ir.TermBr,5,52:ir.Block
48:ir.TermBr,3,52:ir.Block
49:ir.Block,4,50:ir.InstCall
49:ir.Block,3,50:ir.InstCall
50:ir.InstCall,3,51:ir.TermBr
51:ir.TermBr,5,52:ir.Block
51:ir.TermBr,3,52:ir.Block
52:ir.Block,3,53:ir.TermRet
2:ir.InstAlloca,1,11:ir.InstBitCast
11:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,14:ir.InstBitCast
14:ir.InstBitCast,2,2:ir.InstAlloca
11:ir.InstBitCast,1,12:ir.InstStore
12:ir.InstStore,2,11:ir.InstBitCast
15:ir.InstLoad,1,16:ir.InstStore
16:ir.InstStore,2,15:ir.InstLoad
5:ir.InstAlloca,1,19:ir.InstBitCast
19:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,27:ir.InstGetElementPtr
27:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,38:ir.InstGetElementPtr
38:ir.InstGetElementPtr,2,5:ir.InstAlloca
32:ir.InstLoad,1,33:ir.InstICmp
33:ir.InstICmp,2,32:ir.InstLoad
36:ir.InstLoad,1,37:ir.InstSExt
37:ir.InstSExt,2,36:ir.InstLoad
39:ir.InstLoad,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstLoad
43:ir.InstLoad,1,44:ir.InstAdd
44:ir.InstAdd,2,43:ir.InstLoad
10:ir.InstLoad,1,12:ir.InstStore
12:ir.InstStore,2,10:ir.InstLoad
14:ir.InstBitCast,1,15:ir.InstLoad
15:ir.InstLoad,2,14:ir.InstBitCast
3:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,3:ir.InstAlloca
25:ir.InstLoad,1,26:ir.InstSExt
26:ir.InstSExt,2,25:ir.InstLoad
38:ir.InstGetElementPtr,1,39:ir.InstLoad
39:ir.InstLoad,2,38:ir.InstGetElementPtr
44:ir.InstAdd,1,45:ir.InstStore
45:ir.InstStore,2,44:ir.InstAdd
1:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstLoad
10:ir.InstLoad,2,1:ir.InstAlloca
19:ir.InstBitCast,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstBitCast
4:ir.InstAlloca,1,29:ir.InstStore
29:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,36:ir.InstLoad
36:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,43:ir.InstLoad
43:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,45:ir.InstStore
45:ir.InstStore,2,4:ir.InstAlloca
21:ir.InstLoad,1,22:ir.InstICmp
22:ir.InstICmp,2,21:ir.InstLoad
27:ir.InstGetElementPtr,1,28:ir.InstStore
28:ir.InstStore,2,27:ir.InstGetElementPtr
23:ir.TermCondBr,2,22:ir.InstICmp
22:ir.InstICmp,1,23:ir.TermCondBr
34:ir.TermCondBr,2,33:ir.InstICmp
33:ir.InstICmp,1,34:ir.TermCondBr
