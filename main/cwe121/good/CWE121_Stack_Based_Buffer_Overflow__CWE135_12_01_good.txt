? 65
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 2};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 4};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 5};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !95 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !96];
[MOV] 7:ir.InstStore; ;|Src:i8* null;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !97];
[MOV] 8:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 6};Callee:i32 (...)* @globalReturnsTrueOrFalse;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !98];
[MOV] 9:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 7};Pred:ne;X:i32 %6;Y:i32 0;Typ:i1;Metadata:[!dbg !98];
[MOV] 10:ir.TermCondBr; ir.InstICmp|Cond:i1 %7;TargetTrue:label %8;TargetFalse:label %9;Successors:[label %8 label %9];Metadata:[!dbg !100];
[MOV] 11:ir.Block; label %8|
[MOV] 12:ir.InstStore; ;|Src:i8* bitcast ([43 x i32]* @.str to i8*);Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !101];
[MOV] 13:ir.TermBr; |Target:label %10;Successors:[label %10];Metadata:[!dbg !103];
[MOV] 14:ir.Block; label %9|
[MOV] 15:ir.InstStore; ;|Src:i8* bitcast ([43 x i32]* @.str to i8*);Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !104];
[MOV] 16:ir.TermBr; |Target:label %10;Successors:[label %10];Metadata:[];
[MOV] 17:ir.Block; label %10|
[MOV] 18:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 11};Callee:i32 (...)* @globalReturnsTrueOrFalse;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !106];
[MOV] 19:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 12};Pred:ne;X:i32 %11;Y:i32 0;Typ:i1;Metadata:[!dbg !106];
[MOV] 20:ir.TermCondBr; ir.InstICmp|Cond:i1 %12;TargetTrue:label %13;TargetFalse:label %28;Successors:[label %13 label %28];Metadata:[!dbg !108];
[MOV] 21:ir.Block; label %13|
[MOV] 22:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %2 metadata !109 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !112];
[MOV] 23:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 14};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !113];
[MOV] 24:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 15};From:i8* %14;To:i32*;Metadata:[!dbg !114];
[MOV] 25:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 16};Callee:i64 (i32*)* @wcslen;Args:[i32* %15];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !115];
[MOV] 26:ir.InstStore; ;|Src:i64 %16;Dst:i64* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !112];
[MOV] 27:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %3 metadata !116 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !117];
[MOV] 28:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 17};ElemType:i64;Src:i64* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !118];
[MOV] 29:ir.InstAdd; ir.InstAdd ;ir.InstMul |LocalIdent:{ 18};X:i64 %17;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !118];
[MOV] 30:ir.InstMul; ir.InstMul ;|LocalIdent:{ 19};X:i64 %18;Y:i64 4;Typ:i64;OverflowFlags:[];Metadata:[!dbg !118];
[MOV] 31:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 20};ElemType:i8;NElems:i64 %19;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !118];
[MOV] 32:ir.InstStore; ;|Src:i8* %20;Dst:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !117];
[MOV] 33:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 21};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !119];
[MOV] 34:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 22};From:i8* %21;To:i32*;Metadata:[!dbg !119];
[MOV] 35:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 23};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !120];
[MOV] 36:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 24};From:i8* %23;To:i32*;Metadata:[!dbg !120];
[MOV] 37:ir.InstCall; ir.InstCall ;|LocalIdent:{ 25};Callee:i32* (i32*, i32*)* @wcscpy;Args:[i32* %22 i32* %24];Typ:i32*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !121];
[MOV] 38:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 26};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !122];
[MOV] 39:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 27};From:i8* %26;To:i32*;Metadata:[!dbg !123];
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32*)* @printWLine;Args:[i32* %27];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !124];
[MOV] 41:ir.TermBr; |Target:label %43;Successors:[label %43];Metadata:[!dbg !125];
[MOV] 42:ir.Block; label %28|
[MOV] 43:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %4 metadata !126 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !129];
[MOV] 44:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 29};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !130];
[MOV] 45:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 30};From:i8* %29;To:i32*;Metadata:[!dbg !131];
[MOV] 46:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 31};Callee:i64 (i32*)* @wcslen;Args:[i32* %30];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !132];
[MOV] 47:ir.InstStore; ;|Src:i64 %31;Dst:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !129];
[MOV] 48:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %5 metadata !133 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !134];
[MOV] 49:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 32};ElemType:i64;Src:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !135];
[MOV] 50:ir.InstAdd; ir.InstAdd ;ir.InstMul |LocalIdent:{ 33};X:i64 %32;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 51:ir.InstMul; ir.InstMul ;|LocalIdent:{ 34};X:i64 %33;Y:i64 4;Typ:i64;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 52:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 35};ElemType:i8;NElems:i64 %34;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !135];
[MOV] 53:ir.InstStore; ;|Src:i8* %35;Dst:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !134];
[MOV] 54:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 36};ElemType:i8*;Src:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !136];
[MOV] 55:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 37};From:i8* %36;To:i32*;Metadata:[!dbg !136];
[MOV] 56:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 38};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !137];
[MOV] 57:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 39};From:i8* %38;To:i32*;Metadata:[!dbg !137];
[MOV] 58:ir.InstCall; ir.InstCall ;|LocalIdent:{ 40};Callee:i32* (i32*, i32*)* @wcscpy;Args:[i32* %37 i32* %39];Typ:i32*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !138];
[MOV] 59:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 41};ElemType:i8*;Src:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !139];
[MOV] 60:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 42};From:i8* %41;To:i32*;Metadata:[!dbg !140];
[MOV] 61:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32*)* @printWLine;Args:[i32* %42];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !141];
[MOV] 62:ir.TermBr; |Target:label %43;Successors:[label %43];Metadata:[];
[MOV] 63:ir.Block; label %43|
[MOV] 64:ir.TermRet; |X:<nil>;Metadata:[!dbg !142];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstStore
6:ir.InstCall,3,7:ir.InstStore
0:ir.Block,4,8:ir.InstCall
7:ir.InstStore,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstICmp
8:ir.InstCall,3,9:ir.InstICmp
9:ir.InstICmp,3,10:ir.TermCondBr
10:ir.TermCondBr,5,11:ir.Block
10:ir.TermCondBr,3,11:ir.Block
10:ir.TermCondBr,5,14:ir.Block
10:ir.TermCondBr,3,14:ir.Block
11:ir.Block,4,12:ir.InstStore
11:ir.Block,3,12:ir.InstStore
12:ir.InstStore,3,13:ir.TermBr
13:ir.TermBr,5,17:ir.Block
13:ir.TermBr,3,17:ir.Block
14:ir.Block,4,15:ir.InstStore
14:ir.Block,3,15:ir.InstStore
15:ir.InstStore,3,16:ir.TermBr
16:ir.TermBr,5,17:ir.Block
16:ir.TermBr,3,17:ir.Block
17:ir.Block,4,18:ir.InstCall
17:ir.Block,3,18:ir.InstCall
17:ir.Block,4,19:ir.InstICmp
18:ir.InstCall,3,19:ir.InstICmp
19:ir.InstICmp,3,20:ir.TermCondBr
20:ir.TermCondBr,5,21:ir.Block
20:ir.TermCondBr,3,21:ir.Block
20:ir.TermCondBr,5,42:ir.Block
20:ir.TermCondBr,3,42:ir.Block
21:ir.Block,4,22:ir.InstCall
21:ir.Block,3,22:ir.InstCall
21:ir.Block,4,23:ir.InstLoad
22:ir.InstCall,3,23:ir.InstLoad
21:ir.Block,4,24:ir.InstBitCast
23:ir.InstLoad,3,24:ir.InstBitCast
21:ir.Block,4,25:ir.InstCall
24:ir.InstBitCast,3,25:ir.InstCall
21:ir.Block,4,26:ir.InstStore
25:ir.InstCall,3,26:ir.InstStore
21:ir.Block,4,27:ir.InstCall
26:ir.InstStore,3,27:ir.InstCall
21:ir.Block,4,28:ir.InstLoad
27:ir.InstCall,3,28:ir.InstLoad
21:ir.Block,4,29:ir.InstAdd
28:ir.InstLoad,3,29:ir.InstAdd
21:ir.Block,4,30:ir.InstMul
29:ir.InstAdd,3,30:ir.InstMul
21:ir.Block,4,31:ir.InstAlloca
30:ir.InstMul,3,31:ir.InstAlloca
21:ir.Block,4,32:ir.InstStore
31:ir.InstAlloca,3,32:ir.InstStore
21:ir.Block,4,33:ir.InstLoad
32:ir.InstStore,3,33:ir.InstLoad
21:ir.Block,4,34:ir.InstBitCast
33:ir.InstLoad,3,34:ir.InstBitCast
21:ir.Block,4,35:ir.InstLoad
34:ir.InstBitCast,3,35:ir.InstLoad
21:ir.Block,4,36:ir.InstBitCast
35:ir.InstLoad,3,36:ir.InstBitCast
21:ir.Block,4,37:ir.InstCall
36:ir.InstBitCast,3,37:ir.InstCall
21:ir.Block,4,38:ir.InstLoad
37:ir.InstCall,3,38:ir.InstLoad
21:ir.Block,4,39:ir.InstBitCast
38:ir.InstLoad,3,39:ir.InstBitCast
21:ir.Block,4,40:ir.InstCall
39:ir.InstBitCast,3,40:ir.InstCall
40:ir.InstCall,3,41:ir.TermBr
41:ir.TermBr,5,63:ir.Block
41:ir.TermBr,3,63:ir.Block
42:ir.Block,4,43:ir.InstCall
42:ir.Block,3,43:ir.InstCall
42:ir.Block,4,44:ir.InstLoad
43:ir.InstCall,3,44:ir.InstLoad
42:ir.Block,4,45:ir.InstBitCast
44:ir.InstLoad,3,45:ir.InstBitCast
42:ir.Block,4,46:ir.InstCall
45:ir.InstBitCast,3,46:ir.InstCall
42:ir.Block,4,47:ir.InstStore
46:ir.InstCall,3,47:ir.InstStore
42:ir.Block,4,48:ir.InstCall
47:ir.InstStore,3,48:ir.InstCall
42:ir.Block,4,49:ir.InstLoad
48:ir.InstCall,3,49:ir.InstLoad
42:ir.Block,4,50:ir.InstAdd
49:ir.InstLoad,3,50:ir.InstAdd
42:ir.Block,4,51:ir.InstMul
50:ir.InstAdd,3,51:ir.InstMul
42:ir.Block,4,52:ir.InstAlloca
51:ir.InstMul,3,52:ir.InstAlloca
42:ir.Block,4,53:ir.InstStore
52:ir.InstAlloca,3,53:ir.InstStore
42:ir.Block,4,54:ir.InstLoad
53:ir.InstStore,3,54:ir.InstLoad
42:ir.Block,4,55:ir.InstBitCast
54:ir.InstLoad,3,55:ir.InstBitCast
42:ir.Block,4,56:ir.InstLoad
55:ir.InstBitCast,3,56:ir.InstLoad
42:ir.Block,4,57:ir.InstBitCast
56:ir.InstLoad,3,57:ir.InstBitCast
42:ir.Block,4,58:ir.InstCall
57:ir.InstBitCast,3,58:ir.InstCall
42:ir.Block,4,59:ir.InstLoad
58:ir.InstCall,3,59:ir.InstLoad
42:ir.Block,4,60:ir.InstBitCast
59:ir.InstLoad,3,60:ir.InstBitCast
42:ir.Block,4,61:ir.InstCall
60:ir.InstBitCast,3,61:ir.InstCall
61:ir.InstCall,3,62:ir.TermBr
62:ir.TermBr,5,63:ir.Block
62:ir.TermBr,3,63:ir.Block
63:ir.Block,3,64:ir.TermRet
24:ir.InstBitCast,1,25:ir.InstCall
25:ir.InstCall,2,24:ir.InstBitCast
29:ir.InstAdd,1,30:ir.InstMul
30:ir.InstMul,2,29:ir.InstAdd
33:ir.InstLoad,1,34:ir.InstBitCast
34:ir.InstBitCast,2,33:ir.InstLoad
45:ir.InstBitCast,1,46:ir.InstCall
46:ir.InstCall,2,45:ir.InstBitCast
44:ir.InstLoad,1,45:ir.InstBitCast
45:ir.InstBitCast,2,44:ir.InstLoad
55:ir.InstBitCast,1,58:ir.InstCall
58:ir.InstCall,2,55:ir.InstBitCast
2:ir.InstAlloca,1,26:ir.InstStore
26:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,2:ir.InstAlloca
28:ir.InstLoad,1,29:ir.InstAdd
29:ir.InstAdd,2,28:ir.InstLoad
35:ir.InstLoad,1,36:ir.InstBitCast
36:ir.InstBitCast,2,35:ir.InstLoad
49:ir.InstLoad,1,50:ir.InstAdd
50:ir.InstAdd,2,49:ir.InstLoad
5:ir.InstAlloca,1,53:ir.InstStore
53:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,54:ir.InstLoad
54:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,59:ir.InstLoad
59:ir.InstLoad,2,5:ir.InstAlloca
56:ir.InstLoad,1,57:ir.InstBitCast
57:ir.InstBitCast,2,56:ir.InstLoad
36:ir.InstBitCast,1,37:ir.InstCall
37:ir.InstCall,2,36:ir.InstBitCast
4:ir.InstAlloca,1,47:ir.InstStore
47:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,49:ir.InstLoad
49:ir.InstLoad,2,4:ir.InstAlloca
52:ir.InstAlloca,1,53:ir.InstStore
53:ir.InstStore,2,52:ir.InstAlloca
60:ir.InstBitCast,1,61:ir.InstCall
61:ir.InstCall,2,60:ir.InstBitCast
3:ir.InstAlloca,1,32:ir.InstStore
32:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,38:ir.InstLoad
38:ir.InstLoad,2,3:ir.InstAlloca
34:ir.InstBitCast,1,37:ir.InstCall
37:ir.InstCall,2,34:ir.InstBitCast
38:ir.InstLoad,1,39:ir.InstBitCast
39:ir.InstBitCast,2,38:ir.InstLoad
54:ir.InstLoad,1,55:ir.InstBitCast
55:ir.InstBitCast,2,54:ir.InstLoad
25:ir.InstCall,1,26:ir.InstStore
26:ir.InstStore,2,25:ir.InstCall
57:ir.InstBitCast,1,58:ir.InstCall
58:ir.InstCall,2,57:ir.InstBitCast
46:ir.InstCall,1,47:ir.InstStore
47:ir.InstStore,2,46:ir.InstCall
1:ir.InstAlloca,1,7:ir.InstStore
7:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,15:ir.InstStore
15:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,23:ir.InstLoad
23:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,44:ir.InstLoad
44:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,56:ir.InstLoad
56:ir.InstLoad,2,1:ir.InstAlloca
8:ir.InstCall,1,9:ir.InstICmp
9:ir.InstICmp,2,8:ir.InstCall
18:ir.InstCall,1,19:ir.InstICmp
19:ir.InstICmp,2,18:ir.InstCall
23:ir.InstLoad,1,24:ir.InstBitCast
24:ir.InstBitCast,2,23:ir.InstLoad
31:ir.InstAlloca,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstAlloca
39:ir.InstBitCast,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstBitCast
50:ir.InstAdd,1,51:ir.InstMul
51:ir.InstMul,2,50:ir.InstAdd
59:ir.InstLoad,1,60:ir.InstBitCast
60:ir.InstBitCast,2,59:ir.InstLoad
10:ir.TermCondBr,2,9:ir.InstICmp
9:ir.InstICmp,1,10:ir.TermCondBr
20:ir.TermCondBr,2,19:ir.InstICmp
19:ir.InstICmp,1,20:ir.TermCondBr
