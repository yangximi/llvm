? 35
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstPhi ;ir.InstStore ir.InstStore ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !141 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !142];
[MOV] 3:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !143];
[MOV] 4:ir.InstCall; ir.InstCall ;ir.InstAnd |LocalIdent:{ 2};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 5:ir.InstAnd; ir.InstAnd ;ir.InstICmp |LocalIdent:{ 3};X:i32 %2;Y:i32 1;Typ:i32;Metadata:[!dbg !144];
[MOV] 6:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 4};Pred:ne;X:i32 %3;Y:i32 0;Typ:i1;Metadata:[!dbg !144];
[MOV] 7:ir.TermCondBr; ir.InstICmp|Cond:i1 %4;TargetTrue:label %5;TargetFalse:label %13;Successors:[label %5 label %13];Metadata:[!dbg !144];
[MOV] 8:ir.Block; label %5|
[MOV] 9:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 6};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 10:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 7};X:i32 %6;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !144];
[MOV] 11:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 8};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 12:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 9};X:i32 %8;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !144];
[MOV] 13:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 10};X:i32 %7;Y:i32 %9;Typ:i32;Metadata:[!dbg !144];
[MOV] 14:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 11};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 15:ir.InstXor; ir.InstXor ;ir.InstPhi |LocalIdent:{ 12};X:i32 %10;Y:i32 %11;Typ:i32;Metadata:[!dbg !144];
[MOV] 16:ir.TermBr; |Target:label %23;Successors:[label %23];Metadata:[!dbg !144];
[MOV] 17:ir.Block; label %13|
[MOV] 18:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 14};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 19:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 15};X:i32 %14;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !144];
[MOV] 20:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 16};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 21:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 17};X:i32 %16;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !144];
[MOV] 22:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 18};X:i32 %15;Y:i32 %17;Typ:i32;Metadata:[!dbg !144];
[MOV] 23:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 19};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 24:ir.InstXor; ir.InstXor ;ir.InstSub |LocalIdent:{ 20};X:i32 %18;Y:i32 %19;Typ:i32;Metadata:[!dbg !144];
[MOV] 25:ir.InstSub; ir.InstSub ;ir.InstSub |LocalIdent:{ 21};X:i32 0;Y:i32 %20;Typ:i32;OverflowFlags:[];Metadata:[!dbg !144];
[MOV] 26:ir.InstSub; ir.InstSub ;ir.InstPhi |LocalIdent:{ 22};X:i32 %21;Y:i32 1;Typ:i32;OverflowFlags:[];Metadata:[!dbg !144];
[MOV] 27:ir.TermBr; |Target:label %23;Successors:[label %23];Metadata:[!dbg !144];
[MOV] 28:ir.Block; label %23|
[MOV] 29:ir.InstPhi; ir.InstPhi ;ir.InstStore |LocalIdent:{ 24};Incs:[[ %12, %5 ] [ %22, %13 ]];Typ:i32;FastMathFlags:[];Metadata:[!dbg !144];
[MOV] 30:ir.InstStore; ;|Src:i32 %24;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !145];
[MOV] 31:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 25};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !146];
[MOV] 32:ir.InstStore; ;|Src:i32 %25;Dst:i32* @CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_45_goodB2GData;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !147];
[MOV] 33:ir.InstCall; ;|LocalIdent:{ 0};Callee:void ()* @goodB2GSink;Args:[];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !148];
[MOV] 34:ir.TermRet; |X:<nil>;Metadata:[!dbg !149];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstCall
1:ir.InstAlloca,3,2:ir.InstCall
0:ir.Block,4,3:ir.InstStore
2:ir.InstCall,3,3:ir.InstStore
0:ir.Block,4,4:ir.InstCall
3:ir.InstStore,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstAnd
4:ir.InstCall,3,5:ir.InstAnd
0:ir.Block,4,6:ir.InstICmp
5:ir.InstAnd,3,6:ir.InstICmp
6:ir.InstICmp,3,7:ir.TermCondBr
7:ir.TermCondBr,5,8:ir.Block
7:ir.TermCondBr,3,8:ir.Block
7:ir.TermCondBr,5,17:ir.Block
7:ir.TermCondBr,3,17:ir.Block
8:ir.Block,4,9:ir.InstCall
8:ir.Block,3,9:ir.InstCall
8:ir.Block,4,10:ir.InstShl
9:ir.InstCall,3,10:ir.InstShl
8:ir.Block,4,11:ir.InstCall
10:ir.InstShl,3,11:ir.InstCall
8:ir.Block,4,12:ir.InstShl
11:ir.InstCall,3,12:ir.InstShl
8:ir.Block,4,13:ir.InstXor
12:ir.InstShl,3,13:ir.InstXor
8:ir.Block,4,14:ir.InstCall
13:ir.InstXor,3,14:ir.InstCall
8:ir.Block,4,15:ir.InstXor
14:ir.InstCall,3,15:ir.InstXor
15:ir.InstXor,3,16:ir.TermBr
16:ir.TermBr,5,28:ir.Block
16:ir.TermBr,3,28:ir.Block
17:ir.Block,4,18:ir.InstCall
17:ir.Block,3,18:ir.InstCall
17:ir.Block,4,19:ir.InstShl
18:ir.InstCall,3,19:ir.InstShl
17:ir.Block,4,20:ir.InstCall
19:ir.InstShl,3,20:ir.InstCall
17:ir.Block,4,21:ir.InstShl
20:ir.InstCall,3,21:ir.InstShl
17:ir.Block,4,22:ir.InstXor
21:ir.InstShl,3,22:ir.InstXor
17:ir.Block,4,23:ir.InstCall
22:ir.InstXor,3,23:ir.InstCall
17:ir.Block,4,24:ir.InstXor
23:ir.InstCall,3,24:ir.InstXor
17:ir.Block,4,25:ir.InstSub
24:ir.InstXor,3,25:ir.InstSub
17:ir.Block,4,26:ir.InstSub
25:ir.InstSub,3,26:ir.InstSub
26:ir.InstSub,3,27:ir.TermBr
27:ir.TermBr,5,28:ir.Block
27:ir.TermBr,3,28:ir.Block
28:ir.Block,4,29:ir.InstPhi
28:ir.Block,3,29:ir.InstPhi
28:ir.Block,4,30:ir.InstStore
29:ir.InstPhi,3,30:ir.InstStore
28:ir.Block,4,31:ir.InstLoad
30:ir.InstStore,3,31:ir.InstLoad
28:ir.Block,4,32:ir.InstStore
31:ir.InstLoad,3,32:ir.InstStore
28:ir.Block,4,33:ir.InstCall
32:ir.InstStore,3,33:ir.InstCall
33:ir.InstCall,3,34:ir.TermRet
19:ir.InstShl,1,22:ir.InstXor
22:ir.InstXor,2,19:ir.InstShl
21:ir.InstShl,1,22:ir.InstXor
22:ir.InstXor,2,21:ir.InstShl
23:ir.InstCall,1,24:ir.InstXor
24:ir.InstXor,2,23:ir.InstCall
1:ir.InstAlloca,1,3:ir.InstStore
3:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,30:ir.InstStore
30:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,31:ir.InstLoad
31:ir.InstLoad,2,1:ir.InstAlloca
13:ir.InstXor,1,15:ir.InstXor
15:ir.InstXor,2,13:ir.InstXor
15:ir.InstXor,1,29:ir.InstPhi
29:ir.InstPhi,2,15:ir.InstXor
26:ir.InstSub,1,29:ir.InstPhi
29:ir.InstPhi,2,26:ir.InstSub
31:ir.InstLoad,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstLoad
20:ir.InstCall,1,21:ir.InstShl
21:ir.InstShl,2,20:ir.InstCall
22:ir.InstXor,1,24:ir.InstXor
24:ir.InstXor,2,22:ir.InstXor
10:ir.InstShl,1,13:ir.InstXor
13:ir.InstXor,2,10:ir.InstShl
14:ir.InstCall,1,15:ir.InstXor
15:ir.InstXor,2,14:ir.InstCall
24:ir.InstXor,1,25:ir.InstSub
25:ir.InstSub,2,24:ir.InstXor
25:ir.InstSub,1,26:ir.InstSub
26:ir.InstSub,2,25:ir.InstSub
29:ir.InstPhi,1,30:ir.InstStore
30:ir.InstStore,2,29:ir.InstPhi
9:ir.InstCall,1,10:ir.InstShl
10:ir.InstShl,2,9:ir.InstCall
11:ir.InstCall,1,12:ir.InstShl
12:ir.InstShl,2,11:ir.InstCall
12:ir.InstShl,1,13:ir.InstXor
13:ir.InstXor,2,12:ir.InstShl
18:ir.InstCall,1,19:ir.InstShl
19:ir.InstShl,2,18:ir.InstCall
4:ir.InstCall,1,5:ir.InstAnd
5:ir.InstAnd,2,4:ir.InstCall
5:ir.InstAnd,1,6:ir.InstICmp
6:ir.InstICmp,2,5:ir.InstAnd
7:ir.TermCondBr,2,6:ir.InstICmp
6:ir.InstICmp,1,7:ir.TermCondBr
