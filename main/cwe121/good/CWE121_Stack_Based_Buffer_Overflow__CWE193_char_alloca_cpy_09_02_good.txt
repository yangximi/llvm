? 34
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ;ir.InstStore |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ;ir.InstBitCast ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[11 x i8];NElems:<nil>;Typ:[11 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !93 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !94];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !95 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !96];
[MOV] 7:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 5};ElemType:i8;NElems:i64 10;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !97];
[MOV] 8:ir.InstStore; ;|Src:i8* %5;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !96];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %3 metadata !98 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !99];
[MOV] 10:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 6};ElemType:i8;NElems:i64 11;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !100];
[MOV] 11:ir.InstStore; ;|Src:i8* %6;Dst:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !99];
[MOV] 12:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 7};ElemType:i32;Src:i32* @GLOBAL_CONST_TRUE;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !101];
[MOV] 13:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 8};Pred:ne;X:i32 %7;Y:i32 0;Typ:i1;Metadata:[!dbg !101];
[MOV] 14:ir.TermCondBr; ir.InstICmp|Cond:i1 %8;TargetTrue:label %9;TargetFalse:label %13;Successors:[label %9 label %13];Metadata:[!dbg !103];
[MOV] 15:ir.Block; label %9|
[MOV] 16:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 10};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !104];
[MOV] 17:ir.InstStore; ;|Src:i8* %10;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !106];
[MOV] 18:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 11};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !107];
[MOV] 19:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 12};ElemType:i8;Src:i8* %11;Indices:[i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !107];
[MOV] 20:ir.InstStore; ;|Src:i8 0;Dst:i8* %12;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !108];
[MOV] 21:ir.TermBr; |Target:label %13;Successors:[label %13];Metadata:[!dbg !109];
[MOV] 22:ir.Block; label %13|
[MOV] 23:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [11 x i8]* %4 metadata !110 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !112];
[MOV] 24:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 14};From:[11 x i8]* %4;To:i8*;Metadata:[!dbg !112];
[MOV] 25:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8*, i64, i1)* @llvm.memcpy.p0i8.p0i8.i64;Args:[i8* align 1 %14 i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @__const.goodG2B2.source, i32 0, i32 0) i64 11 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !112];
[MOV] 26:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 15};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !113];
[MOV] 27:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 16};ElemType:[11 x i8];Src:[11 x i8]* %4;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !113];
[MOV] 28:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 17};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !113];
[MOV] 29:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 18};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %17 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !113];
[MOV] 30:ir.InstCall; ir.InstCall ;|LocalIdent:{ 19};Callee:i8* (i8*, i8*, i64)* @__strcpy_chk;Args:[i8* %15 i8* %16 i64 %18];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !113];
[MOV] 31:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 20};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !114];
[MOV] 32:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %20];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !115];
[MOV] 33:ir.TermRet; |X:<nil>;Metadata:[!dbg !116];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstCall
4:ir.InstAlloca,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstCall
5:ir.InstCall,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstAlloca
6:ir.InstCall,3,7:ir.InstAlloca
0:ir.Block,4,8:ir.InstStore
7:ir.InstAlloca,3,8:ir.InstStore
0:ir.Block,4,9:ir.InstCall
8:ir.InstStore,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstAlloca
9:ir.InstCall,3,10:ir.InstAlloca
0:ir.Block,4,11:ir.InstStore
10:ir.InstAlloca,3,11:ir.InstStore
0:ir.Block,4,12:ir.InstLoad
11:ir.InstStore,3,12:ir.InstLoad
0:ir.Block,4,13:ir.InstICmp
12:ir.InstLoad,3,13:ir.InstICmp
13:ir.InstICmp,3,14:ir.TermCondBr
14:ir.TermCondBr,5,15:ir.Block
14:ir.TermCondBr,3,15:ir.Block
14:ir.TermCondBr,5,22:ir.Block
14:ir.TermCondBr,3,22:ir.Block
15:ir.Block,4,16:ir.InstLoad
15:ir.Block,3,16:ir.InstLoad
15:ir.Block,4,17:ir.InstStore
16:ir.InstLoad,3,17:ir.InstStore
15:ir.Block,4,18:ir.InstLoad
17:ir.InstStore,3,18:ir.InstLoad
15:ir.Block,4,19:ir.InstGetElementPtr
18:ir.InstLoad,3,19:ir.InstGetElementPtr
15:ir.Block,4,20:ir.InstStore
19:ir.InstGetElementPtr,3,20:ir.InstStore
20:ir.InstStore,3,21:ir.TermBr
21:ir.TermBr,5,22:ir.Block
21:ir.TermBr,3,22:ir.Block
22:ir.Block,4,23:ir.InstCall
22:ir.Block,3,23:ir.InstCall
22:ir.Block,4,24:ir.InstBitCast
23:ir.InstCall,3,24:ir.InstBitCast
22:ir.Block,4,25:ir.InstCall
24:ir.InstBitCast,3,25:ir.InstCall
22:ir.Block,4,26:ir.InstLoad
25:ir.InstCall,3,26:ir.InstLoad
22:ir.Block,4,27:ir.InstGetElementPtr
26:ir.InstLoad,3,27:ir.InstGetElementPtr
22:ir.Block,4,28:ir.InstLoad
27:ir.InstGetElementPtr,3,28:ir.InstLoad
22:ir.Block,4,29:ir.InstCall
28:ir.InstLoad,3,29:ir.InstCall
22:ir.Block,4,30:ir.InstCall
29:ir.InstCall,3,30:ir.InstCall
22:ir.Block,4,31:ir.InstLoad
30:ir.InstCall,3,31:ir.InstLoad
22:ir.Block,4,32:ir.InstCall
31:ir.InstLoad,3,32:ir.InstCall
32:ir.InstCall,3,33:ir.TermRet
26:ir.InstLoad,1,30:ir.InstCall
30:ir.InstCall,2,26:ir.InstLoad
27:ir.InstGetElementPtr,1,30:ir.InstCall
30:ir.InstCall,2,27:ir.InstGetElementPtr
1:ir.InstAlloca,1,17:ir.InstStore
17:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,18:ir.InstLoad
18:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,26:ir.InstLoad
26:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,31:ir.InstLoad
31:ir.InstLoad,2,1:ir.InstAlloca
16:ir.InstLoad,1,17:ir.InstStore
17:ir.InstStore,2,16:ir.InstLoad
24:ir.InstBitCast,1,25:ir.InstCall
25:ir.InstCall,2,24:ir.InstBitCast
10:ir.InstAlloca,1,11:ir.InstStore
11:ir.InstStore,2,10:ir.InstAlloca
2:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,2:ir.InstAlloca
12:ir.InstLoad,1,13:ir.InstICmp
13:ir.InstICmp,2,12:ir.InstLoad
18:ir.InstLoad,1,19:ir.InstGetElementPtr
19:ir.InstGetElementPtr,2,18:ir.InstLoad
19:ir.InstGetElementPtr,1,20:ir.InstStore
20:ir.InstStore,2,19:ir.InstGetElementPtr
28:ir.InstLoad,1,29:ir.InstCall
29:ir.InstCall,2,28:ir.InstLoad
29:ir.InstCall,1,30:ir.InstCall
30:ir.InstCall,2,29:ir.InstCall
31:ir.InstLoad,1,32:ir.InstCall
32:ir.InstCall,2,31:ir.InstLoad
7:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,7:ir.InstAlloca
4:ir.InstAlloca,1,24:ir.InstBitCast
24:ir.InstBitCast,2,4:ir.InstAlloca
4:ir.InstAlloca,1,27:ir.InstGetElementPtr
27:ir.InstGetElementPtr,2,4:ir.InstAlloca
3:ir.InstAlloca,1,11:ir.InstStore
11:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,16:ir.InstLoad
16:ir.InstLoad,2,3:ir.InstAlloca
14:ir.TermCondBr,2,13:ir.InstICmp
13:ir.InstICmp,1,14:ir.TermCondBr
