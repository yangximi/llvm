? 36
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstGetElementPtr ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstStore ir.InstBitCast ;ir.InstBitCast ir.InstBitCast |LocalIdent:{ 2};ElemType:%union.CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType;NElems:<nil>;Typ:%union.CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ;|LocalIdent:{ 3};ElemType:[50 x i8];NElems:<nil>;Typ:[50 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[100 x i8];NElems:<nil>;Typ:[100 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 5};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ir.InstCall ;ir.InstGetElementPtr ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 6};ElemType:[100 x i8];NElems:<nil>;Typ:[100 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !78 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !79];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %union.CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType* %2 metadata !80 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !81];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [50 x i8]* %3 metadata !82 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !83];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i8]* %4 metadata !84 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !85];
[MOV] 11:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstStore |LocalIdent:{ 7};ElemType:[100 x i8];Src:[100 x i8]* %4;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !86];
[MOV] 12:ir.InstStore; ;|Src:i8* %7;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !87];
[MOV] 13:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 8};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !88];
[MOV] 14:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 9};ElemType:i8;Src:i8* %8;Indices:[i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !88];
[MOV] 15:ir.InstStore; ;|Src:i8 0;Dst:i8* %9;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !89];
[MOV] 16:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 10};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !90];
[MOV] 17:ir.InstBitCast; ir.InstBitCast ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 11};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType* %2;To:i8**;Metadata:[!dbg !91];
[MOV] 18:ir.InstStore; ;|Src:i8* %10;Dst:i8** %11;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !92];
[MOV] 19:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %5 metadata !93 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !95];
[MOV] 20:ir.InstBitCast; ir.InstBitCast ir.InstLoad ;ir.InstLoad |LocalIdent:{ 12};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType* %2;To:i8**;Metadata:[!dbg !96];
[MOV] 21:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 13};ElemType:i8*;Src:i8** %12;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !96];
[MOV] 22:ir.InstStore; ;|Src:i8* %13;Dst:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !95];
[MOV] 23:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i8]* %6 metadata !97 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !99];
[MOV] 24:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 14};ElemType:[100 x i8];Src:[100 x i8]* %6;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !100];
[MOV] 25:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %14 i8 67 i64 99 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !100];
[MOV] 26:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 15};ElemType:[100 x i8];Src:[100 x i8]* %6;Indices:[i64 0 i64 99];Typ:i8*;InBounds:true;Metadata:[!dbg !101];
[MOV] 27:ir.InstStore; ;|Src:i8 0;Dst:i8* %15;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !102];
[MOV] 28:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 16};ElemType:i8*;Src:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !103];
[MOV] 29:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 17};ElemType:i8*;Src:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !103];
[MOV] 30:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 18};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %17 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !103];
[MOV] 31:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 19};ElemType:[100 x i8];Src:[100 x i8]* %6;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !103];
[MOV] 32:ir.InstCall; ir.InstCall ;|LocalIdent:{ 20};Callee:i32 (i8*, i64, i32, i64, i8*, ...)* @__snprintf_chk;Args:[i8* %16 i64 100 i32 0 i64 %18 i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0) i8* %19];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !103];
[MOV] 33:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 21};ElemType:i8*;Src:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !104];
[MOV] 34:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %21];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !105];
[MOV] 35:ir.TermRet; |X:<nil>;Metadata:[!dbg !106];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstCall
6:ir.InstAlloca,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstCall
9:ir.InstCall,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstGetElementPtr
10:ir.InstCall,3,11:ir.InstGetElementPtr
0:ir.Block,4,12:ir.InstStore
11:ir.InstGetElementPtr,3,12:ir.InstStore
0:ir.Block,4,13:ir.InstLoad
12:ir.InstStore,3,13:ir.InstLoad
0:ir.Block,4,14:ir.InstGetElementPtr
13:ir.InstLoad,3,14:ir.InstGetElementPtr
0:ir.Block,4,15:ir.InstStore
14:ir.InstGetElementPtr,3,15:ir.InstStore
0:ir.Block,4,16:ir.InstLoad
15:ir.InstStore,3,16:ir.InstLoad
0:ir.Block,4,17:ir.InstBitCast
16:ir.InstLoad,3,17:ir.InstBitCast
0:ir.Block,4,18:ir.InstStore
17:ir.InstBitCast,3,18:ir.InstStore
0:ir.Block,4,19:ir.InstCall
18:ir.InstStore,3,19:ir.InstCall
0:ir.Block,4,20:ir.InstBitCast
19:ir.InstCall,3,20:ir.InstBitCast
0:ir.Block,4,21:ir.InstLoad
20:ir.InstBitCast,3,21:ir.InstLoad
0:ir.Block,4,22:ir.InstStore
21:ir.InstLoad,3,22:ir.InstStore
0:ir.Block,4,23:ir.InstCall
22:ir.InstStore,3,23:ir.InstCall
0:ir.Block,4,24:ir.InstGetElementPtr
23:ir.InstCall,3,24:ir.InstGetElementPtr
0:ir.Block,4,25:ir.InstCall
24:ir.InstGetElementPtr,3,25:ir.InstCall
0:ir.Block,4,26:ir.InstGetElementPtr
25:ir.InstCall,3,26:ir.InstGetElementPtr
0:ir.Block,4,27:ir.InstStore
26:ir.InstGetElementPtr,3,27:ir.InstStore
0:ir.Block,4,28:ir.InstLoad
27:ir.InstStore,3,28:ir.InstLoad
0:ir.Block,4,29:ir.InstLoad
28:ir.InstLoad,3,29:ir.InstLoad
0:ir.Block,4,30:ir.InstCall
29:ir.InstLoad,3,30:ir.InstCall
0:ir.Block,4,31:ir.InstGetElementPtr
30:ir.InstCall,3,31:ir.InstGetElementPtr
0:ir.Block,4,32:ir.InstCall
31:ir.InstGetElementPtr,3,32:ir.InstCall
0:ir.Block,4,33:ir.InstLoad
32:ir.InstCall,3,33:ir.InstLoad
0:ir.Block,4,34:ir.InstCall
33:ir.InstLoad,3,34:ir.InstCall
34:ir.InstCall,3,35:ir.TermRet
11:ir.InstGetElementPtr,1,12:ir.InstStore
12:ir.InstStore,2,11:ir.InstGetElementPtr
13:ir.InstLoad,1,14:ir.InstGetElementPtr
14:ir.InstGetElementPtr,2,13:ir.InstLoad
14:ir.InstGetElementPtr,1,15:ir.InstStore
15:ir.InstStore,2,14:ir.InstGetElementPtr
20:ir.InstBitCast,1,21:ir.InstLoad
21:ir.InstLoad,2,20:ir.InstBitCast
21:ir.InstLoad,1,22:ir.InstStore
22:ir.InstStore,2,21:ir.InstLoad
16:ir.InstLoad,1,18:ir.InstStore
18:ir.InstStore,2,16:ir.InstLoad
17:ir.InstBitCast,1,18:ir.InstStore
18:ir.InstStore,2,17:ir.InstBitCast
6:ir.InstAlloca,1,24:ir.InstGetElementPtr
24:ir.InstGetElementPtr,2,6:ir.InstAlloca
6:ir.InstAlloca,1,26:ir.InstGetElementPtr
26:ir.InstGetElementPtr,2,6:ir.InstAlloca
6:ir.InstAlloca,1,31:ir.InstGetElementPtr
31:ir.InstGetElementPtr,2,6:ir.InstAlloca
31:ir.InstGetElementPtr,1,32:ir.InstCall
32:ir.InstCall,2,31:ir.InstGetElementPtr
1:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstLoad
13:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,16:ir.InstLoad
16:ir.InstLoad,2,1:ir.InstAlloca
24:ir.InstGetElementPtr,1,25:ir.InstCall
25:ir.InstCall,2,24:ir.InstGetElementPtr
26:ir.InstGetElementPtr,1,27:ir.InstStore
27:ir.InstStore,2,26:ir.InstGetElementPtr
29:ir.InstLoad,1,30:ir.InstCall
30:ir.InstCall,2,29:ir.InstLoad
4:ir.InstAlloca,1,11:ir.InstGetElementPtr
11:ir.InstGetElementPtr,2,4:ir.InstAlloca
2:ir.InstAlloca,1,17:ir.InstBitCast
17:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,20:ir.InstBitCast
20:ir.InstBitCast,2,2:ir.InstAlloca
5:ir.InstAlloca,1,22:ir.InstStore
22:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,5:ir.InstAlloca
28:ir.InstLoad,1,32:ir.InstCall
32:ir.InstCall,2,28:ir.InstLoad
30:ir.InstCall,1,32:ir.InstCall
32:ir.InstCall,2,30:ir.InstCall
33:ir.InstLoad,1,34:ir.InstCall
34:ir.InstCall,2,33:ir.InstLoad
