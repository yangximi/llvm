? 47
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ir.InstStore ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[50 x i8];NElems:<nil>;Typ:[50 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !75 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !76];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !77 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !78];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %3 metadata !79 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !80];
[MOV] 8:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 5};ElemType:i8;NElems:i64 100;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !81];
[MOV] 9:ir.InstStore; ;|Src:i8* %5;Dst:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !80];
[MOV] 10:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 6};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !82];
[MOV] 11:ir.InstStore; ;|Src:i8* %6;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !83];
[MOV] 12:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !84];
[MOV] 13:ir.TermBr; |Target:label %7;Successors:[label %7];Metadata:[!dbg !86];
[MOV] 14:ir.Block; label %7|
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 8};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !87];
[MOV] 16:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:slt;X:i32 %8;Y:i32 1;Typ:i1;Metadata:[!dbg !89];
[MOV] 17:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %20;Successors:[label %10 label %20];Metadata:[!dbg !90];
[MOV] 18:ir.Block; label %10|
[MOV] 19:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 11};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !91];
[MOV] 20:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 12};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !91];
[MOV] 21:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 13};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %12 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !91];
[MOV] 22:ir.InstCall; ir.InstCall ;|LocalIdent:{ 14};Callee:i8* (i8*, i32, i64, i64)* @__memset_chk;Args:[i8* %11 i32 65 i64 49 i64 %13];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !91];
[MOV] 23:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 15};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !93];
[MOV] 24:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 16};ElemType:i8;Src:i8* %15;Indices:[i64 49];Typ:i8*;InBounds:true;Metadata:[!dbg !93];
[MOV] 25:ir.InstStore; ;|Src:i8 0;Dst:i8* %16;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !94];
[MOV] 26:ir.TermBr; |Target:label %17;Successors:[label %17];Metadata:[!dbg !95];
[MOV] 27:ir.Block; label %17|
[MOV] 28:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 18};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !96];
[MOV] 29:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 19};X:i32 %18;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !96];
[MOV] 30:ir.InstStore; ;|Src:i32 %19;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !96];
[MOV] 31:ir.TermBr; label %7|Target:label %7;Successors:[label %7];Metadata:[!dbg !97 !llvm.loop !98];
[MOV] 32:ir.Block; label %20|
[MOV] 33:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [50 x i8]* %4 metadata !100 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !102];
[MOV] 34:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 21};From:[50 x i8]* %4;To:i8*;Metadata:[!dbg !102];
[MOV] 35:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %21 i8 0 i64 50 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !102];
[MOV] 36:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 22};ElemType:[50 x i8];Src:[50 x i8]* %4;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !103];
[MOV] 37:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 23};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !103];
[MOV] 38:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 24};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !103];
[MOV] 39:ir.InstCall; ir.InstCall ;ir.InstMul |LocalIdent:{ 25};Callee:i64 (i8*)* @strlen;Args:[i8* %24];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !103];
[MOV] 40:ir.InstMul; ir.InstMul ir.InstCall ;ir.InstCall |LocalIdent:{ 26};X:i64 %25;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !103];
[MOV] 41:ir.InstCall; ir.InstCall ;|LocalIdent:{ 27};Callee:i8* (i8*, i8*, i64, i64)* @__memcpy_chk;Args:[i8* %22 i8* %23 i64 %26 i64 50];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !103];
[MOV] 42:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 28};ElemType:[50 x i8];Src:[50 x i8]* %4;Indices:[i64 0 i64 49];Typ:i8*;InBounds:true;Metadata:[!dbg !104];
[MOV] 43:ir.InstStore; ;|Src:i8 0;Dst:i8* %28;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !105];
[MOV] 44:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 29};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !106];
[MOV] 45:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %29];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !107];
[MOV] 46:ir.TermRet; |X:<nil>;Metadata:[!dbg !108];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstCall
4:ir.InstAlloca,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstCall
5:ir.InstCall,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstAlloca
7:ir.InstCall,3,8:ir.InstAlloca
0:ir.Block,4,9:ir.InstStore
8:ir.InstAlloca,3,9:ir.InstStore
0:ir.Block,4,10:ir.InstLoad
9:ir.InstStore,3,10:ir.InstLoad
0:ir.Block,4,11:ir.InstStore
10:ir.InstLoad,3,11:ir.InstStore
0:ir.Block,4,12:ir.InstStore
11:ir.InstStore,3,12:ir.InstStore
12:ir.InstStore,3,13:ir.TermBr
13:ir.TermBr,5,14:ir.Block
13:ir.TermBr,3,14:ir.Block
14:ir.Block,4,15:ir.InstLoad
14:ir.Block,3,15:ir.InstLoad
14:ir.Block,4,16:ir.InstICmp
15:ir.InstLoad,3,16:ir.InstICmp
16:ir.InstICmp,3,17:ir.TermCondBr
17:ir.TermCondBr,5,18:ir.Block
17:ir.TermCondBr,3,18:ir.Block
17:ir.TermCondBr,5,32:ir.Block
17:ir.TermCondBr,3,32:ir.Block
18:ir.Block,4,19:ir.InstLoad
18:ir.Block,3,19:ir.InstLoad
18:ir.Block,4,20:ir.InstLoad
19:ir.InstLoad,3,20:ir.InstLoad
18:ir.Block,4,21:ir.InstCall
20:ir.InstLoad,3,21:ir.InstCall
18:ir.Block,4,22:ir.InstCall
21:ir.InstCall,3,22:ir.InstCall
18:ir.Block,4,23:ir.InstLoad
22:ir.InstCall,3,23:ir.InstLoad
18:ir.Block,4,24:ir.InstGetElementPtr
23:ir.InstLoad,3,24:ir.InstGetElementPtr
18:ir.Block,4,25:ir.InstStore
24:ir.InstGetElementPtr,3,25:ir.InstStore
25:ir.InstStore,3,26:ir.TermBr
26:ir.TermBr,5,27:ir.Block
26:ir.TermBr,3,27:ir.Block
27:ir.Block,4,28:ir.InstLoad
27:ir.Block,3,28:ir.InstLoad
27:ir.Block,4,29:ir.InstAdd
28:ir.InstLoad,3,29:ir.InstAdd
27:ir.Block,4,30:ir.InstStore
29:ir.InstAdd,3,30:ir.InstStore
30:ir.InstStore,3,31:ir.TermBr
31:ir.TermBr,5,14:ir.Block
31:ir.TermBr,3,14:ir.Block
32:ir.Block,4,33:ir.InstCall
32:ir.Block,3,33:ir.InstCall
32:ir.Block,4,34:ir.InstBitCast
33:ir.InstCall,3,34:ir.InstBitCast
32:ir.Block,4,35:ir.InstCall
34:ir.InstBitCast,3,35:ir.InstCall
32:ir.Block,4,36:ir.InstGetElementPtr
35:ir.InstCall,3,36:ir.InstGetElementPtr
32:ir.Block,4,37:ir.InstLoad
36:ir.InstGetElementPtr,3,37:ir.InstLoad
32:ir.Block,4,38:ir.InstLoad
37:ir.InstLoad,3,38:ir.InstLoad
32:ir.Block,4,39:ir.InstCall
38:ir.InstLoad,3,39:ir.InstCall
32:ir.Block,4,40:ir.InstMul
39:ir.InstCall,3,40:ir.InstMul
32:ir.Block,4,41:ir.InstCall
40:ir.InstMul,3,41:ir.InstCall
32:ir.Block,4,42:ir.InstGetElementPtr
41:ir.InstCall,3,42:ir.InstGetElementPtr
32:ir.Block,4,43:ir.InstStore
42:ir.InstGetElementPtr,3,43:ir.InstStore
32:ir.Block,4,44:ir.InstLoad
43:ir.InstStore,3,44:ir.InstLoad
32:ir.Block,4,45:ir.InstCall
44:ir.InstLoad,3,45:ir.InstCall
45:ir.InstCall,3,46:ir.TermRet
10:ir.InstLoad,1,11:ir.InstStore
11:ir.InstStore,2,10:ir.InstLoad
1:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,30:ir.InstStore
30:ir.InstStore,2,1:ir.InstAlloca
4:ir.InstAlloca,1,34:ir.InstBitCast
34:ir.InstBitCast,2,4:ir.InstAlloca
4:ir.InstAlloca,1,36:ir.InstGetElementPtr
36:ir.InstGetElementPtr,2,4:ir.InstAlloca
4:ir.InstAlloca,1,42:ir.InstGetElementPtr
42:ir.InstGetElementPtr,2,4:ir.InstAlloca
37:ir.InstLoad,1,41:ir.InstCall
41:ir.InstCall,2,37:ir.InstLoad
40:ir.InstMul,1,41:ir.InstCall
41:ir.InstCall,2,40:ir.InstMul
23:ir.InstLoad,1,24:ir.InstGetElementPtr
24:ir.InstGetElementPtr,2,23:ir.InstLoad
28:ir.InstLoad,1,29:ir.InstAdd
29:ir.InstAdd,2,28:ir.InstLoad
34:ir.InstBitCast,1,35:ir.InstCall
35:ir.InstCall,2,34:ir.InstBitCast
38:ir.InstLoad,1,39:ir.InstCall
39:ir.InstCall,2,38:ir.InstLoad
3:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,10:ir.InstLoad
10:ir.InstLoad,2,3:ir.InstAlloca
20:ir.InstLoad,1,21:ir.InstCall
21:ir.InstCall,2,20:ir.InstLoad
24:ir.InstGetElementPtr,1,25:ir.InstStore
25:ir.InstStore,2,24:ir.InstGetElementPtr
39:ir.InstCall,1,40:ir.InstMul
40:ir.InstMul,2,39:ir.InstCall
36:ir.InstGetElementPtr,1,41:ir.InstCall
41:ir.InstCall,2,36:ir.InstGetElementPtr
44:ir.InstLoad,1,45:ir.InstCall
45:ir.InstCall,2,44:ir.InstLoad
42:ir.InstGetElementPtr,1,43:ir.InstStore
43:ir.InstStore,2,42:ir.InstGetElementPtr
8:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,8:ir.InstAlloca
2:ir.InstAlloca,1,11:ir.InstStore
11:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,23:ir.InstLoad
23:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,38:ir.InstLoad
38:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,44:ir.InstLoad
44:ir.InstLoad,2,2:ir.InstAlloca
15:ir.InstLoad,1,16:ir.InstICmp
16:ir.InstICmp,2,15:ir.InstLoad
19:ir.InstLoad,1,22:ir.InstCall
22:ir.InstCall,2,19:ir.InstLoad
21:ir.InstCall,1,22:ir.InstCall
22:ir.InstCall,2,21:ir.InstCall
29:ir.InstAdd,1,30:ir.InstStore
30:ir.InstStore,2,29:ir.InstAdd
17:ir.TermCondBr,2,16:ir.InstICmp
16:ir.InstICmp,1,17:ir.TermCondBr
