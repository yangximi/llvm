? 40
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstGetElementPtr ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ;|LocalIdent:{ 2};ElemType:[4 x i8];NElems:<nil>;Typ:[4 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[8 x i8];NElems:<nil>;Typ:[8 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstBitCast ir.InstLoad ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 4};ElemType:%class.TwoIntsClass*;NElems:<nil>;Typ:%class.TwoIntsClass**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !340 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !341];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [4 x i8]* %2 metadata !342 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !343];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [8 x i8]* %3 metadata !344 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !345];
[MOV] 8:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 5};Callee:i32 ()* @_ZL18staticReturnsFalsev;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !346];
[MOV] 9:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 6};Pred:ne;X:i32 %5;Y:i32 0;Typ:i1;Metadata:[!dbg !346];
[MOV] 10:ir.TermCondBr; ir.InstICmp|Cond:i1 %6;TargetTrue:label %7;TargetFalse:label %8;Successors:[label %7 label %8];Metadata:[!dbg !348];
[MOV] 11:ir.Block; label %7|
[MOV] 12:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !349];
[MOV] 13:ir.TermBr; |Target:label %10;Successors:[label %10];Metadata:[!dbg !351];
[MOV] 14:ir.Block; label %8|
[MOV] 15:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstStore |LocalIdent:{ 9};ElemType:[8 x i8];Src:[8 x i8]* %3;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !352];
[MOV] 16:ir.InstStore; ;|Src:i8* %9;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !354];
[MOV] 17:ir.TermBr; |Target:label %10;Successors:[label %10];Metadata:[];
[MOV] 18:ir.Block; label %10|
[MOV] 19:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 11};Callee:i32 ()* @_ZL17staticReturnsTruev;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !355];
[MOV] 20:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 12};Pred:ne;X:i32 %11;Y:i32 0;Typ:i1;Metadata:[!dbg !355];
[MOV] 21:ir.TermCondBr; ir.InstICmp|Cond:i1 %12;TargetTrue:label %13;TargetFalse:label %23;Successors:[label %13 label %23];Metadata:[!dbg !357];
[MOV] 22:ir.Block; label %13|
[MOV] 23:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %class.TwoIntsClass** %4 metadata !358 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !361];
[MOV] 24:ir.InstLoad; ir.InstLoad ir.InstBitCast ;ir.InstBitCast |LocalIdent:{ 14};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !362];
[MOV] 25:ir.InstBitCast; ir.InstBitCast ;ir.InstStore |LocalIdent:{ 15};From:i8* %14;To:%class.TwoIntsClass*;Metadata:[!dbg !363];
[MOV] 26:ir.InstStore; ;|Src:%class.TwoIntsClass* %15;Dst:%class.TwoIntsClass** %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !361];
[MOV] 27:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 16};ElemType:%class.TwoIntsClass*;Src:%class.TwoIntsClass** %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !364];
[MOV] 28:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 17};ElemType:%class.TwoIntsClass;Src:%class.TwoIntsClass* %16;Indices:[i32 0 i32 0];Typ:i32*;InBounds:true;Metadata:[!dbg !365];
[MOV] 29:ir.InstStore; ;|Src:i32 5;Dst:i32* %17;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !366];
[MOV] 30:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 18};ElemType:%class.TwoIntsClass*;Src:%class.TwoIntsClass** %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !367];
[MOV] 31:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 19};ElemType:%class.TwoIntsClass;Src:%class.TwoIntsClass* %18;Indices:[i32 0 i32 1];Typ:i32*;InBounds:true;Metadata:[!dbg !368];
[MOV] 32:ir.InstStore; ;|Src:i32 10;Dst:i32* %19;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !369];
[MOV] 33:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 20};ElemType:%class.TwoIntsClass*;Src:%class.TwoIntsClass** %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !370];
[MOV] 34:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 21};ElemType:%class.TwoIntsClass;Src:%class.TwoIntsClass* %20;Indices:[i32 0 i32 0];Typ:i32*;InBounds:true;Metadata:[!dbg !371];
[MOV] 35:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 22};ElemType:i32;Src:i32* %21;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !371];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %22];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !372];
[MOV] 37:ir.TermBr; |Target:label %23;Successors:[label %23];Metadata:[!dbg !373];
[MOV] 38:ir.Block; label %23|
[MOV] 39:ir.TermRet; |X:<nil>;Metadata:[!dbg !374];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstCall
4:ir.InstAlloca,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstCall
5:ir.InstCall,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstICmp
8:ir.InstCall,3,9:ir.InstICmp
9:ir.InstICmp,3,10:ir.TermCondBr
10:ir.TermCondBr,5,11:ir.Block
10:ir.TermCondBr,3,11:ir.Block
10:ir.TermCondBr,5,14:ir.Block
10:ir.TermCondBr,3,14:ir.Block
11:ir.Block,4,12:ir.InstCall
11:ir.Block,3,12:ir.InstCall
12:ir.InstCall,3,13:ir.TermBr
13:ir.TermBr,5,18:ir.Block
13:ir.TermBr,3,18:ir.Block
14:ir.Block,4,15:ir.InstGetElementPtr
14:ir.Block,3,15:ir.InstGetElementPtr
14:ir.Block,4,16:ir.InstStore
15:ir.InstGetElementPtr,3,16:ir.InstStore
16:ir.InstStore,3,17:ir.TermBr
17:ir.TermBr,5,18:ir.Block
17:ir.TermBr,3,18:ir.Block
18:ir.Block,4,19:ir.InstCall
18:ir.Block,3,19:ir.InstCall
18:ir.Block,4,20:ir.InstICmp
19:ir.InstCall,3,20:ir.InstICmp
20:ir.InstICmp,3,21:ir.TermCondBr
21:ir.TermCondBr,5,22:ir.Block
21:ir.TermCondBr,3,22:ir.Block
21:ir.TermCondBr,5,38:ir.Block
21:ir.TermCondBr,3,38:ir.Block
22:ir.Block,4,23:ir.InstCall
22:ir.Block,3,23:ir.InstCall
22:ir.Block,4,24:ir.InstLoad
23:ir.InstCall,3,24:ir.InstLoad
22:ir.Block,4,25:ir.InstBitCast
24:ir.InstLoad,3,25:ir.InstBitCast
22:ir.Block,4,26:ir.InstStore
25:ir.InstBitCast,3,26:ir.InstStore
22:ir.Block,4,27:ir.InstLoad
26:ir.InstStore,3,27:ir.InstLoad
22:ir.Block,4,28:ir.InstGetElementPtr
27:ir.InstLoad,3,28:ir.InstGetElementPtr
22:ir.Block,4,29:ir.InstStore
28:ir.InstGetElementPtr,3,29:ir.InstStore
22:ir.Block,4,30:ir.InstLoad
29:ir.InstStore,3,30:ir.InstLoad
22:ir.Block,4,31:ir.InstGetElementPtr
30:ir.InstLoad,3,31:ir.InstGetElementPtr
22:ir.Block,4,32:ir.InstStore
31:ir.InstGetElementPtr,3,32:ir.InstStore
22:ir.Block,4,33:ir.InstLoad
32:ir.InstStore,3,33:ir.InstLoad
22:ir.Block,4,34:ir.InstGetElementPtr
33:ir.InstLoad,3,34:ir.InstGetElementPtr
22:ir.Block,4,35:ir.InstLoad
34:ir.InstGetElementPtr,3,35:ir.InstLoad
22:ir.Block,4,36:ir.InstCall
35:ir.InstLoad,3,36:ir.InstCall
36:ir.InstCall,3,37:ir.TermBr
37:ir.TermBr,5,38:ir.Block
37:ir.TermBr,3,38:ir.Block
38:ir.Block,3,39:ir.TermRet
19:ir.InstCall,1,20:ir.InstICmp
20:ir.InstICmp,2,19:ir.InstCall
28:ir.InstGetElementPtr,1,29:ir.InstStore
29:ir.InstStore,2,28:ir.InstGetElementPtr
33:ir.InstLoad,1,34:ir.InstGetElementPtr
34:ir.InstGetElementPtr,2,33:ir.InstLoad
34:ir.InstGetElementPtr,1,35:ir.InstLoad
35:ir.InstLoad,2,34:ir.InstGetElementPtr
15:ir.InstGetElementPtr,1,16:ir.InstStore
16:ir.InstStore,2,15:ir.InstGetElementPtr
35:ir.InstLoad,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstLoad
27:ir.InstLoad,1,28:ir.InstGetElementPtr
28:ir.InstGetElementPtr,2,27:ir.InstLoad
30:ir.InstLoad,1,31:ir.InstGetElementPtr
31:ir.InstGetElementPtr,2,30:ir.InstLoad
31:ir.InstGetElementPtr,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstGetElementPtr
24:ir.InstLoad,1,25:ir.InstBitCast
25:ir.InstBitCast,2,24:ir.InstLoad
3:ir.InstAlloca,1,15:ir.InstGetElementPtr
15:ir.InstGetElementPtr,2,3:ir.InstAlloca
1:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,24:ir.InstLoad
24:ir.InstLoad,2,1:ir.InstAlloca
25:ir.InstBitCast,1,26:ir.InstStore
26:ir.InstStore,2,25:ir.InstBitCast
4:ir.InstAlloca,1,26:ir.InstStore
26:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,27:ir.InstLoad
27:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,30:ir.InstLoad
30:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,4:ir.InstAlloca
8:ir.InstCall,1,9:ir.InstICmp
9:ir.InstICmp,2,8:ir.InstCall
10:ir.TermCondBr,2,9:ir.InstICmp
9:ir.InstICmp,1,10:ir.TermCondBr
21:ir.TermCondBr,2,20:ir.InstICmp
20:ir.InstICmp,1,21:ir.TermCondBr
