? 56
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !299 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !300];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !301];
[MOV] 6:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 4};ElemType:i32;Src:i32* @staticTrue;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !302];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:ne;X:i32 %4;Y:i32 0;Typ:i1;Metadata:[!dbg !302];
[MOV] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %7;Successors:[label %6 label %7];Metadata:[!dbg !304];
[MOV] 9:ir.Block; label %6|
[MOV] 10:ir.InstStore; ;|Src:i32 7;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !305];
[MOV] 11:ir.TermBr; |Target:label %7;Successors:[label %7];Metadata:[!dbg !307];
[MOV] 12:ir.Block; label %7|
[MOV] 13:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 8};ElemType:i32;Src:i32* @staticTrue;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !308];
[MOV] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:ne;X:i32 %8;Y:i32 0;Typ:i1;Metadata:[!dbg !308];
[MOV] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %32;Successors:[label %10 label %32];Metadata:[!dbg !310];
[MOV] 16:ir.Block; label %10|
[MOV] 17:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !311 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !314];
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !315 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !316];
[MOV] 19:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 11};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !316];
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %11 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !316];
[MOV] 21:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 12};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !317];
[MOV] 22:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 13};Pred:sge;X:i32 %12;Y:i32 0;Typ:i1;Metadata:[!dbg !319];
[MOV] 23:ir.TermCondBr; ir.InstICmp|Cond:i1 %13;TargetTrue:label %14;TargetFalse:label %30;Successors:[label %14 label %30];Metadata:[!dbg !320];
[MOV] 24:ir.Block; label %14|
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 15};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !321];
[MOV] 26:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 16};From:i32 %15;To:i64;Metadata:[!dbg !323];
[MOV] 27:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 17};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %16];Typ:i32*;InBounds:true;Metadata:[!dbg !323];
[MOV] 28:ir.InstStore; ;|Src:i32 1;Dst:i32* %17;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !324];
[MOV] 29:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !325];
[MOV] 30:ir.TermBr; |Target:label %18;Successors:[label %18];Metadata:[!dbg !327];
[MOV] 31:ir.Block; label %18|
[MOV] 32:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 19};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !328];
[MOV] 33:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 20};Pred:slt;X:i32 %19;Y:i32 10;Typ:i1;Metadata:[!dbg !330];
[MOV] 34:ir.TermCondBr; ir.InstICmp|Cond:i1 %20;TargetTrue:label %21;TargetFalse:label %29;Successors:[label %21 label %29];Metadata:[!dbg !331];
[MOV] 35:ir.Block; label %21|
[MOV] 36:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 22};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !332];
[MOV] 37:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 23};From:i32 %22;To:i64;Metadata:[!dbg !334];
[MOV] 38:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 24};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %23];Typ:i32*;InBounds:true;Metadata:[!dbg !334];
[MOV] 39:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 25};ElemType:i32;Src:i32* %24;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !334];
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %25];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !335];
[MOV] 41:ir.TermBr; |Target:label %26;Successors:[label %26];Metadata:[!dbg !336];
[MOV] 42:ir.Block; label %26|
[MOV] 43:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 27};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !337];
[MOV] 44:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 28};X:i32 %27;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !337];
[MOV] 45:ir.InstStore; ;|Src:i32 %28;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !337];
[MOV] 46:ir.TermBr; label %18|Target:label %18;Successors:[label %18];Metadata:[!dbg !338 !llvm.loop !339];
[MOV] 47:ir.Block; label %29|
[MOV] 48:ir.TermBr; |Target:label %31;Successors:[label %31];Metadata:[!dbg !341];
[MOV] 49:ir.Block; label %30|
[MOV] 50:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !342];
[MOV] 51:ir.TermBr; |Target:label %31;Successors:[label %31];Metadata:[];
[MOV] 52:ir.Block; label %31|
[MOV] 53:ir.TermBr; |Target:label %32;Successors:[label %32];Metadata:[!dbg !344];
[MOV] 54:ir.Block; label %32|
[MOV] 55:ir.TermRet; |X:<nil>;Metadata:[!dbg !345];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstLoad
5:ir.InstStore,3,6:ir.InstLoad
0:ir.Block,4,7:ir.InstICmp
6:ir.InstLoad,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,12:ir.Block
8:ir.TermCondBr,3,12:ir.Block
9:ir.Block,4,10:ir.InstStore
9:ir.Block,3,10:ir.InstStore
10:ir.InstStore,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstLoad
12:ir.Block,3,13:ir.InstLoad
12:ir.Block,4,14:ir.InstICmp
13:ir.InstLoad,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,54:ir.Block
15:ir.TermCondBr,3,54:ir.Block
16:ir.Block,4,17:ir.InstCall
16:ir.Block,3,17:ir.InstCall
16:ir.Block,4,18:ir.InstCall
17:ir.InstCall,3,18:ir.InstCall
16:ir.Block,4,19:ir.InstBitCast
18:ir.InstCall,3,19:ir.InstBitCast
16:ir.Block,4,20:ir.InstCall
19:ir.InstBitCast,3,20:ir.InstCall
16:ir.Block,4,21:ir.InstLoad
20:ir.InstCall,3,21:ir.InstLoad
16:ir.Block,4,22:ir.InstICmp
21:ir.InstLoad,3,22:ir.InstICmp
22:ir.InstICmp,3,23:ir.TermCondBr
23:ir.TermCondBr,5,24:ir.Block
23:ir.TermCondBr,3,24:ir.Block
23:ir.TermCondBr,5,49:ir.Block
23:ir.TermCondBr,3,49:ir.Block
24:ir.Block,4,25:ir.InstLoad
24:ir.Block,3,25:ir.InstLoad
24:ir.Block,4,26:ir.InstSExt
25:ir.InstLoad,3,26:ir.InstSExt
24:ir.Block,4,27:ir.InstGetElementPtr
26:ir.InstSExt,3,27:ir.InstGetElementPtr
24:ir.Block,4,28:ir.InstStore
27:ir.InstGetElementPtr,3,28:ir.InstStore
24:ir.Block,4,29:ir.InstStore
28:ir.InstStore,3,29:ir.InstStore
29:ir.InstStore,3,30:ir.TermBr
30:ir.TermBr,5,31:ir.Block
30:ir.TermBr,3,31:ir.Block
31:ir.Block,4,32:ir.InstLoad
31:ir.Block,3,32:ir.InstLoad
31:ir.Block,4,33:ir.InstICmp
32:ir.InstLoad,3,33:ir.InstICmp
33:ir.InstICmp,3,34:ir.TermCondBr
34:ir.TermCondBr,5,35:ir.Block
34:ir.TermCondBr,3,35:ir.Block
34:ir.TermCondBr,5,47:ir.Block
34:ir.TermCondBr,3,47:ir.Block
35:ir.Block,4,36:ir.InstLoad
35:ir.Block,3,36:ir.InstLoad
35:ir.Block,4,37:ir.InstSExt
36:ir.InstLoad,3,37:ir.InstSExt
35:ir.Block,4,38:ir.InstGetElementPtr
37:ir.InstSExt,3,38:ir.InstGetElementPtr
35:ir.Block,4,39:ir.InstLoad
38:ir.InstGetElementPtr,3,39:ir.InstLoad
35:ir.Block,4,40:ir.InstCall
39:ir.InstLoad,3,40:ir.InstCall
40:ir.InstCall,3,41:ir.TermBr
41:ir.TermBr,5,42:ir.Block
41:ir.TermBr,3,42:ir.Block
42:ir.Block,4,43:ir.InstLoad
42:ir.Block,3,43:ir.InstLoad
42:ir.Block,4,44:ir.InstAdd
43:ir.InstLoad,3,44:ir.InstAdd
42:ir.Block,4,45:ir.InstStore
44:ir.InstAdd,3,45:ir.InstStore
45:ir.InstStore,3,46:ir.TermBr
46:ir.TermBr,5,31:ir.Block
46:ir.TermBr,3,31:ir.Block
47:ir.Block,3,48:ir.TermBr
48:ir.TermBr,5,52:ir.Block
48:ir.TermBr,3,52:ir.Block
49:ir.Block,4,50:ir.InstCall
49:ir.Block,3,50:ir.InstCall
50:ir.InstCall,3,51:ir.TermBr
51:ir.TermBr,5,52:ir.Block
51:ir.TermBr,3,52:ir.Block
52:ir.Block,3,53:ir.TermBr
53:ir.TermBr,5,54:ir.Block
53:ir.TermBr,3,54:ir.Block
54:ir.Block,3,55:ir.TermRet
13:ir.InstLoad,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstLoad
32:ir.InstLoad,1,33:ir.InstICmp
33:ir.InstICmp,2,32:ir.InstLoad
36:ir.InstLoad,1,37:ir.InstSExt
37:ir.InstSExt,2,36:ir.InstLoad
6:ir.InstLoad,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstLoad
43:ir.InstLoad,1,44:ir.InstAdd
44:ir.InstAdd,2,43:ir.InstLoad
3:ir.InstAlloca,1,19:ir.InstBitCast
19:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,27:ir.InstGetElementPtr
27:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,38:ir.InstGetElementPtr
38:ir.InstGetElementPtr,2,3:ir.InstAlloca
19:ir.InstBitCast,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstBitCast
21:ir.InstLoad,1,22:ir.InstICmp
22:ir.InstICmp,2,21:ir.InstLoad
25:ir.InstLoad,1,26:ir.InstSExt
26:ir.InstSExt,2,25:ir.InstLoad
27:ir.InstGetElementPtr,1,28:ir.InstStore
28:ir.InstStore,2,27:ir.InstGetElementPtr
2:ir.InstAlloca,1,29:ir.InstStore
29:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,36:ir.InstLoad
36:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,43:ir.InstLoad
43:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,45:ir.InstStore
45:ir.InstStore,2,2:ir.InstAlloca
39:ir.InstLoad,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstLoad
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,1:ir.InstAlloca
44:ir.InstAdd,1,45:ir.InstStore
45:ir.InstStore,2,44:ir.InstAdd
38:ir.InstGetElementPtr,1,39:ir.InstLoad
39:ir.InstLoad,2,38:ir.InstGetElementPtr
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
23:ir.TermCondBr,2,22:ir.InstICmp
22:ir.InstICmp,1,23:ir.TermCondBr
34:ir.TermCondBr,2,33:ir.InstICmp
33:ir.InstICmp,1,34:ir.TermCondBr
