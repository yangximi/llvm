? 74
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstPhi ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !132 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !133];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !134];
[MOV] 6:ir.InstCall; ir.InstCall ;ir.InstAnd |LocalIdent:{ 4};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 7:ir.InstAnd; ir.InstAnd ;ir.InstICmp |LocalIdent:{ 5};X:i32 %4;Y:i32 1;Typ:i32;Metadata:[!dbg !135];
[MOV] 8:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 6};Pred:ne;X:i32 %5;Y:i32 0;Typ:i1;Metadata:[!dbg !135];
[MOV] 9:ir.TermCondBr; ir.InstICmp|Cond:i1 %6;TargetTrue:label %7;TargetFalse:label %15;Successors:[label %7 label %15];Metadata:[!dbg !135];
[MOV] 10:ir.Block; label %7|
[MOV] 11:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 8};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 12:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 9};X:i32 %8;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 13:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 10};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 14:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 11};X:i32 %10;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 15:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 12};X:i32 %9;Y:i32 %11;Typ:i32;Metadata:[!dbg !135];
[MOV] 16:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 13};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 17:ir.InstXor; ir.InstXor ;ir.InstPhi |LocalIdent:{ 14};X:i32 %12;Y:i32 %13;Typ:i32;Metadata:[!dbg !135];
[MOV] 18:ir.TermBr; |Target:label %25;Successors:[label %25];Metadata:[!dbg !135];
[MOV] 19:ir.Block; label %15|
[MOV] 20:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 16};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 21:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 17};X:i32 %16;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 22:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 18};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 23:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 19};X:i32 %18;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 24:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 20};X:i32 %17;Y:i32 %19;Typ:i32;Metadata:[!dbg !135];
[MOV] 25:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 21};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 26:ir.InstXor; ir.InstXor ;ir.InstSub |LocalIdent:{ 22};X:i32 %20;Y:i32 %21;Typ:i32;Metadata:[!dbg !135];
[MOV] 27:ir.InstSub; ir.InstSub ;ir.InstSub |LocalIdent:{ 23};X:i32 0;Y:i32 %22;Typ:i32;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 28:ir.InstSub; ir.InstSub ;ir.InstPhi |LocalIdent:{ 24};X:i32 %23;Y:i32 1;Typ:i32;OverflowFlags:[];Metadata:[!dbg !135];
[MOV] 29:ir.TermBr; |Target:label %25;Successors:[label %25];Metadata:[!dbg !135];
[MOV] 30:ir.Block; label %25|
[MOV] 31:ir.InstPhi; ir.InstPhi ;ir.InstStore |LocalIdent:{ 26};Incs:[[ %14, %7 ] [ %24, %15 ]];Typ:i32;FastMathFlags:[];Metadata:[!dbg !135];
[MOV] 32:ir.InstStore; ;|Src:i32 %26;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !138];
[MOV] 33:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !139 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !143];
[MOV] 34:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !144 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !145];
[MOV] 35:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 27};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !145];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %27 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !145];
[MOV] 37:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 28};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !146];
[MOV] 38:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 29};Pred:sge;X:i32 %28;Y:i32 0;Typ:i1;Metadata:[!dbg !148];
[MOV] 39:ir.TermCondBr; ir.InstICmp|Cond:i1 %29;TargetTrue:label %30;TargetFalse:label %49;Successors:[label %30 label %49];Metadata:[!dbg !149];
[MOV] 40:ir.Block; label %30|
[MOV] 41:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 31};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !150];
[MOV] 42:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 32};Pred:slt;X:i32 %31;Y:i32 10;Typ:i1;Metadata:[!dbg !151];
[MOV] 43:ir.TermCondBr; ir.InstICmp|Cond:i1 %32;TargetTrue:label %33;TargetFalse:label %49;Successors:[label %33 label %49];Metadata:[!dbg !152];
[MOV] 44:ir.Block; label %33|
[MOV] 45:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 34};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !153];
[MOV] 46:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 35};From:i32 %34;To:i64;Metadata:[!dbg !155];
[MOV] 47:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 36};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %35];Typ:i32*;InBounds:true;Metadata:[!dbg !155];
[MOV] 48:ir.InstStore; ;|Src:i32 1;Dst:i32* %36;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !156];
[MOV] 49:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !157];
[MOV] 50:ir.TermBr; |Target:label %37;Successors:[label %37];Metadata:[!dbg !159];
[MOV] 51:ir.Block; label %37|
[MOV] 52:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 38};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !160];
[MOV] 53:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 39};Pred:slt;X:i32 %38;Y:i32 10;Typ:i1;Metadata:[!dbg !162];
[MOV] 54:ir.TermCondBr; ir.InstICmp|Cond:i1 %39;TargetTrue:label %40;TargetFalse:label %48;Successors:[label %40 label %48];Metadata:[!dbg !163];
[MOV] 55:ir.Block; label %40|
[MOV] 56:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 41};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !164];
[MOV] 57:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 42};From:i32 %41;To:i64;Metadata:[!dbg !166];
[MOV] 58:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 43};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %42];Typ:i32*;InBounds:true;Metadata:[!dbg !166];
[MOV] 59:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 44};ElemType:i32;Src:i32* %43;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !166];
[MOV] 60:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %44];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !167];
[MOV] 61:ir.TermBr; |Target:label %45;Successors:[label %45];Metadata:[!dbg !168];
[MOV] 62:ir.Block; label %45|
[MOV] 63:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 46};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !169];
[MOV] 64:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 47};X:i32 %46;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !169];
[MOV] 65:ir.InstStore; ;|Src:i32 %47;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !169];
[MOV] 66:ir.TermBr; label %37|Target:label %37;Successors:[label %37];Metadata:[!dbg !170 !llvm.loop !171];
[MOV] 67:ir.Block; label %48|
[MOV] 68:ir.TermBr; |Target:label %50;Successors:[label %50];Metadata:[!dbg !173];
[MOV] 69:ir.Block; label %49|
[MOV] 70:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !174];
[MOV] 71:ir.TermBr; |Target:label %50;Successors:[label %50];Metadata:[];
[MOV] 72:ir.Block; label %50|
[MOV] 73:ir.TermRet; |X:<nil>;Metadata:[!dbg !176];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstCall
5:ir.InstStore,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstAnd
6:ir.InstCall,3,7:ir.InstAnd
0:ir.Block,4,8:ir.InstICmp
7:ir.InstAnd,3,8:ir.InstICmp
8:ir.InstICmp,3,9:ir.TermCondBr
9:ir.TermCondBr,5,10:ir.Block
9:ir.TermCondBr,3,10:ir.Block
9:ir.TermCondBr,5,19:ir.Block
9:ir.TermCondBr,3,19:ir.Block
10:ir.Block,4,11:ir.InstCall
10:ir.Block,3,11:ir.InstCall
10:ir.Block,4,12:ir.InstShl
11:ir.InstCall,3,12:ir.InstShl
10:ir.Block,4,13:ir.InstCall
12:ir.InstShl,3,13:ir.InstCall
10:ir.Block,4,14:ir.InstShl
13:ir.InstCall,3,14:ir.InstShl
10:ir.Block,4,15:ir.InstXor
14:ir.InstShl,3,15:ir.InstXor
10:ir.Block,4,16:ir.InstCall
15:ir.InstXor,3,16:ir.InstCall
10:ir.Block,4,17:ir.InstXor
16:ir.InstCall,3,17:ir.InstXor
17:ir.InstXor,3,18:ir.TermBr
18:ir.TermBr,5,30:ir.Block
18:ir.TermBr,3,30:ir.Block
19:ir.Block,4,20:ir.InstCall
19:ir.Block,3,20:ir.InstCall
19:ir.Block,4,21:ir.InstShl
20:ir.InstCall,3,21:ir.InstShl
19:ir.Block,4,22:ir.InstCall
21:ir.InstShl,3,22:ir.InstCall
19:ir.Block,4,23:ir.InstShl
22:ir.InstCall,3,23:ir.InstShl
19:ir.Block,4,24:ir.InstXor
23:ir.InstShl,3,24:ir.InstXor
19:ir.Block,4,25:ir.InstCall
24:ir.InstXor,3,25:ir.InstCall
19:ir.Block,4,26:ir.InstXor
25:ir.InstCall,3,26:ir.InstXor
19:ir.Block,4,27:ir.InstSub
26:ir.InstXor,3,27:ir.InstSub
19:ir.Block,4,28:ir.InstSub
27:ir.InstSub,3,28:ir.InstSub
28:ir.InstSub,3,29:ir.TermBr
29:ir.TermBr,5,30:ir.Block
29:ir.TermBr,3,30:ir.Block
30:ir.Block,4,31:ir.InstPhi
30:ir.Block,3,31:ir.InstPhi
30:ir.Block,4,32:ir.InstStore
31:ir.InstPhi,3,32:ir.InstStore
30:ir.Block,4,33:ir.InstCall
32:ir.InstStore,3,33:ir.InstCall
30:ir.Block,4,34:ir.InstCall
33:ir.InstCall,3,34:ir.InstCall
30:ir.Block,4,35:ir.InstBitCast
34:ir.InstCall,3,35:ir.InstBitCast
30:ir.Block,4,36:ir.InstCall
35:ir.InstBitCast,3,36:ir.InstCall
30:ir.Block,4,37:ir.InstLoad
36:ir.InstCall,3,37:ir.InstLoad
30:ir.Block,4,38:ir.InstICmp
37:ir.InstLoad,3,38:ir.InstICmp
38:ir.InstICmp,3,39:ir.TermCondBr
39:ir.TermCondBr,5,40:ir.Block
39:ir.TermCondBr,3,40:ir.Block
39:ir.TermCondBr,5,69:ir.Block
39:ir.TermCondBr,3,69:ir.Block
40:ir.Block,4,41:ir.InstLoad
40:ir.Block,3,41:ir.InstLoad
40:ir.Block,4,42:ir.InstICmp
41:ir.InstLoad,3,42:ir.InstICmp
42:ir.InstICmp,3,43:ir.TermCondBr
43:ir.TermCondBr,5,44:ir.Block
43:ir.TermCondBr,3,44:ir.Block
43:ir.TermCondBr,5,69:ir.Block
43:ir.TermCondBr,3,69:ir.Block
44:ir.Block,4,45:ir.InstLoad
44:ir.Block,3,45:ir.InstLoad
44:ir.Block,4,46:ir.InstSExt
45:ir.InstLoad,3,46:ir.InstSExt
44:ir.Block,4,47:ir.InstGetElementPtr
46:ir.InstSExt,3,47:ir.InstGetElementPtr
44:ir.Block,4,48:ir.InstStore
47:ir.InstGetElementPtr,3,48:ir.InstStore
44:ir.Block,4,49:ir.InstStore
48:ir.InstStore,3,49:ir.InstStore
49:ir.InstStore,3,50:ir.TermBr
50:ir.TermBr,5,51:ir.Block
50:ir.TermBr,3,51:ir.Block
51:ir.Block,4,52:ir.InstLoad
51:ir.Block,3,52:ir.InstLoad
51:ir.Block,4,53:ir.InstICmp
52:ir.InstLoad,3,53:ir.InstICmp
53:ir.InstICmp,3,54:ir.TermCondBr
54:ir.TermCondBr,5,55:ir.Block
54:ir.TermCondBr,3,55:ir.Block
54:ir.TermCondBr,5,67:ir.Block
54:ir.TermCondBr,3,67:ir.Block
55:ir.Block,4,56:ir.InstLoad
55:ir.Block,3,56:ir.InstLoad
55:ir.Block,4,57:ir.InstSExt
56:ir.InstLoad,3,57:ir.InstSExt
55:ir.Block,4,58:ir.InstGetElementPtr
57:ir.InstSExt,3,58:ir.InstGetElementPtr
55:ir.Block,4,59:ir.InstLoad
58:ir.InstGetElementPtr,3,59:ir.InstLoad
55:ir.Block,4,60:ir.InstCall
59:ir.InstLoad,3,60:ir.InstCall
60:ir.InstCall,3,61:ir.TermBr
61:ir.TermBr,5,62:ir.Block
61:ir.TermBr,3,62:ir.Block
62:ir.Block,4,63:ir.InstLoad
62:ir.Block,3,63:ir.InstLoad
62:ir.Block,4,64:ir.InstAdd
63:ir.InstLoad,3,64:ir.InstAdd
62:ir.Block,4,65:ir.InstStore
64:ir.InstAdd,3,65:ir.InstStore
65:ir.InstStore,3,66:ir.TermBr
66:ir.TermBr,5,51:ir.Block
66:ir.TermBr,3,51:ir.Block
67:ir.Block,3,68:ir.TermBr
68:ir.TermBr,5,72:ir.Block
68:ir.TermBr,3,72:ir.Block
69:ir.Block,4,70:ir.InstCall
69:ir.Block,3,70:ir.InstCall
70:ir.InstCall,3,71:ir.TermBr
71:ir.TermBr,5,72:ir.Block
71:ir.TermBr,3,72:ir.Block
72:ir.Block,3,73:ir.TermRet
6:ir.InstCall,1,7:ir.InstAnd
7:ir.InstAnd,2,6:ir.InstCall
13:ir.InstCall,1,14:ir.InstShl
14:ir.InstShl,2,13:ir.InstCall
22:ir.InstCall,1,23:ir.InstShl
23:ir.InstShl,2,22:ir.InstCall
47:ir.InstGetElementPtr,1,48:ir.InstStore
48:ir.InstStore,2,47:ir.InstGetElementPtr
27:ir.InstSub,1,28:ir.InstSub
28:ir.InstSub,2,27:ir.InstSub
3:ir.InstAlloca,1,35:ir.InstBitCast
35:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,47:ir.InstGetElementPtr
47:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,58:ir.InstGetElementPtr
58:ir.InstGetElementPtr,2,3:ir.InstAlloca
41:ir.InstLoad,1,42:ir.InstICmp
42:ir.InstICmp,2,41:ir.InstLoad
12:ir.InstShl,1,15:ir.InstXor
15:ir.InstXor,2,12:ir.InstShl
23:ir.InstShl,1,24:ir.InstXor
24:ir.InstXor,2,23:ir.InstShl
24:ir.InstXor,1,26:ir.InstXor
26:ir.InstXor,2,24:ir.InstXor
25:ir.InstCall,1,26:ir.InstXor
26:ir.InstXor,2,25:ir.InstCall
28:ir.InstSub,1,31:ir.InstPhi
31:ir.InstPhi,2,28:ir.InstSub
7:ir.InstAnd,1,8:ir.InstICmp
8:ir.InstICmp,2,7:ir.InstAnd
37:ir.InstLoad,1,38:ir.InstICmp
38:ir.InstICmp,2,37:ir.InstLoad
63:ir.InstLoad,1,64:ir.InstAdd
64:ir.InstAdd,2,63:ir.InstLoad
11:ir.InstCall,1,12:ir.InstShl
12:ir.InstShl,2,11:ir.InstCall
16:ir.InstCall,1,17:ir.InstXor
17:ir.InstXor,2,16:ir.InstCall
45:ir.InstLoad,1,46:ir.InstSExt
46:ir.InstSExt,2,45:ir.InstLoad
52:ir.InstLoad,1,53:ir.InstICmp
53:ir.InstICmp,2,52:ir.InstLoad
35:ir.InstBitCast,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstBitCast
2:ir.InstAlloca,1,49:ir.InstStore
49:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,52:ir.InstLoad
52:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,56:ir.InstLoad
56:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,63:ir.InstLoad
63:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,65:ir.InstStore
65:ir.InstStore,2,2:ir.InstAlloca
64:ir.InstAdd,1,65:ir.InstStore
65:ir.InstStore,2,64:ir.InstAdd
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,32:ir.InstStore
32:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,45:ir.InstLoad
45:ir.InstLoad,2,1:ir.InstAlloca
14:ir.InstShl,1,15:ir.InstXor
15:ir.InstXor,2,14:ir.InstShl
15:ir.InstXor,1,17:ir.InstXor
17:ir.InstXor,2,15:ir.InstXor
26:ir.InstXor,1,27:ir.InstSub
27:ir.InstSub,2,26:ir.InstXor
17:ir.InstXor,1,31:ir.InstPhi
31:ir.InstPhi,2,17:ir.InstXor
58:ir.InstGetElementPtr,1,59:ir.InstLoad
59:ir.InstLoad,2,58:ir.InstGetElementPtr
59:ir.InstLoad,1,60:ir.InstCall
60:ir.InstCall,2,59:ir.InstLoad
20:ir.InstCall,1,21:ir.InstShl
21:ir.InstShl,2,20:ir.InstCall
21:ir.InstShl,1,24:ir.InstXor
24:ir.InstXor,2,21:ir.InstShl
31:ir.InstPhi,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstPhi
56:ir.InstLoad,1,57:ir.InstSExt
57:ir.InstSExt,2,56:ir.InstLoad
9:ir.TermCondBr,2,8:ir.InstICmp
8:ir.InstICmp,1,9:ir.TermCondBr
39:ir.TermCondBr,2,38:ir.InstICmp
38:ir.InstICmp,1,39:ir.TermCondBr
43:ir.TermCondBr,2,42:ir.InstICmp
42:ir.InstICmp,1,43:ir.TermCondBr
54:ir.TermCondBr,2,53:ir.InstICmp
53:ir.InstICmp,1,54:ir.TermCondBr
