? 52
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !134 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !136];
[MOV] 6:ir.TermBr; |Target:label %4;Successors:[label %4];Metadata:[!dbg !137];
[MOV] 7:ir.Block; label %4|
[MOV] 8:ir.InstStore; ;|Src:i32 7;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !138];
[MOV] 9:ir.TermBr; |Target:label %5;Successors:[label %5];Metadata:[!dbg !140];
[MOV] 10:ir.Block; label %5|
[MOV] 11:ir.TermBr; |Target:label %6;Successors:[label %6];Metadata:[!dbg !141];
[MOV] 12:ir.Block; label %6|
[MOV] 13:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !142 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !145];
[MOV] 14:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !146 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !147];
[MOV] 15:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 7};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !147];
[MOV] 16:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %7 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !147];
[MOV] 17:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 8};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !148];
[MOV] 18:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:sge;X:i32 %8;Y:i32 0;Typ:i1;Metadata:[!dbg !150];
[MOV] 19:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %26;Successors:[label %10 label %26];Metadata:[!dbg !151];
[MOV] 20:ir.Block; label %10|
[MOV] 21:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 11};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !152];
[MOV] 22:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 12};From:i32 %11;To:i64;Metadata:[!dbg !154];
[MOV] 23:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 13};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %12];Typ:i32*;InBounds:true;Metadata:[!dbg !154];
[MOV] 24:ir.InstStore; ;|Src:i32 1;Dst:i32* %13;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !155];
[MOV] 25:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !156];
[MOV] 26:ir.TermBr; |Target:label %14;Successors:[label %14];Metadata:[!dbg !158];
[MOV] 27:ir.Block; label %14|
[MOV] 28:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 15};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !159];
[MOV] 29:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 16};Pred:slt;X:i32 %15;Y:i32 10;Typ:i1;Metadata:[!dbg !161];
[MOV] 30:ir.TermCondBr; ir.InstICmp|Cond:i1 %16;TargetTrue:label %17;TargetFalse:label %25;Successors:[label %17 label %25];Metadata:[!dbg !162];
[MOV] 31:ir.Block; label %17|
[MOV] 32:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 18};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !163];
[MOV] 33:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 19};From:i32 %18;To:i64;Metadata:[!dbg !165];
[MOV] 34:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 20};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %19];Typ:i32*;InBounds:true;Metadata:[!dbg !165];
[MOV] 35:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 21};ElemType:i32;Src:i32* %20;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !165];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %21];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !166];
[MOV] 37:ir.TermBr; |Target:label %22;Successors:[label %22];Metadata:[!dbg !167];
[MOV] 38:ir.Block; label %22|
[MOV] 39:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 23};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !168];
[MOV] 40:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 24};X:i32 %23;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !168];
[MOV] 41:ir.InstStore; ;|Src:i32 %24;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !168];
[MOV] 42:ir.TermBr; label %14|Target:label %14;Successors:[label %14];Metadata:[!dbg !169 !llvm.loop !170];
[MOV] 43:ir.Block; label %25|
[MOV] 44:ir.TermBr; |Target:label %27;Successors:[label %27];Metadata:[!dbg !172];
[MOV] 45:ir.Block; label %26|
[MOV] 46:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !173];
[MOV] 47:ir.TermBr; |Target:label %27;Successors:[label %27];Metadata:[];
[MOV] 48:ir.Block; label %27|
[MOV] 49:ir.TermBr; |Target:label %28;Successors:[label %28];Metadata:[!dbg !175];
[MOV] 50:ir.Block; label %28|
[MOV] 51:ir.TermRet; |X:<nil>;Metadata:[!dbg !176];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
5:ir.InstStore,3,6:ir.TermBr
6:ir.TermBr,5,7:ir.Block
6:ir.TermBr,3,7:ir.Block
7:ir.Block,4,8:ir.InstStore
7:ir.Block,3,8:ir.InstStore
8:ir.InstStore,3,9:ir.TermBr
9:ir.TermBr,5,10:ir.Block
9:ir.TermBr,3,10:ir.Block
10:ir.Block,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstCall
12:ir.Block,3,13:ir.InstCall
12:ir.Block,4,14:ir.InstCall
13:ir.InstCall,3,14:ir.InstCall
12:ir.Block,4,15:ir.InstBitCast
14:ir.InstCall,3,15:ir.InstBitCast
12:ir.Block,4,16:ir.InstCall
15:ir.InstBitCast,3,16:ir.InstCall
12:ir.Block,4,17:ir.InstLoad
16:ir.InstCall,3,17:ir.InstLoad
12:ir.Block,4,18:ir.InstICmp
17:ir.InstLoad,3,18:ir.InstICmp
18:ir.InstICmp,3,19:ir.TermCondBr
19:ir.TermCondBr,5,20:ir.Block
19:ir.TermCondBr,3,20:ir.Block
19:ir.TermCondBr,5,45:ir.Block
19:ir.TermCondBr,3,45:ir.Block
20:ir.Block,4,21:ir.InstLoad
20:ir.Block,3,21:ir.InstLoad
20:ir.Block,4,22:ir.InstSExt
21:ir.InstLoad,3,22:ir.InstSExt
20:ir.Block,4,23:ir.InstGetElementPtr
22:ir.InstSExt,3,23:ir.InstGetElementPtr
20:ir.Block,4,24:ir.InstStore
23:ir.InstGetElementPtr,3,24:ir.InstStore
20:ir.Block,4,25:ir.InstStore
24:ir.InstStore,3,25:ir.InstStore
25:ir.InstStore,3,26:ir.TermBr
26:ir.TermBr,5,27:ir.Block
26:ir.TermBr,3,27:ir.Block
27:ir.Block,4,28:ir.InstLoad
27:ir.Block,3,28:ir.InstLoad
27:ir.Block,4,29:ir.InstICmp
28:ir.InstLoad,3,29:ir.InstICmp
29:ir.InstICmp,3,30:ir.TermCondBr
30:ir.TermCondBr,5,31:ir.Block
30:ir.TermCondBr,3,31:ir.Block
30:ir.TermCondBr,5,43:ir.Block
30:ir.TermCondBr,3,43:ir.Block
31:ir.Block,4,32:ir.InstLoad
31:ir.Block,3,32:ir.InstLoad
31:ir.Block,4,33:ir.InstSExt
32:ir.InstLoad,3,33:ir.InstSExt
31:ir.Block,4,34:ir.InstGetElementPtr
33:ir.InstSExt,3,34:ir.InstGetElementPtr
31:ir.Block,4,35:ir.InstLoad
34:ir.InstGetElementPtr,3,35:ir.InstLoad
31:ir.Block,4,36:ir.InstCall
35:ir.InstLoad,3,36:ir.InstCall
36:ir.InstCall,3,37:ir.TermBr
37:ir.TermBr,5,38:ir.Block
37:ir.TermBr,3,38:ir.Block
38:ir.Block,4,39:ir.InstLoad
38:ir.Block,3,39:ir.InstLoad
38:ir.Block,4,40:ir.InstAdd
39:ir.InstLoad,3,40:ir.InstAdd
38:ir.Block,4,41:ir.InstStore
40:ir.InstAdd,3,41:ir.InstStore
41:ir.InstStore,3,42:ir.TermBr
42:ir.TermBr,5,27:ir.Block
42:ir.TermBr,3,27:ir.Block
43:ir.Block,3,44:ir.TermBr
44:ir.TermBr,5,48:ir.Block
44:ir.TermBr,3,48:ir.Block
45:ir.Block,4,46:ir.InstCall
45:ir.Block,3,46:ir.InstCall
46:ir.InstCall,3,47:ir.TermBr
47:ir.TermBr,5,48:ir.Block
47:ir.TermBr,3,48:ir.Block
48:ir.Block,3,49:ir.TermBr
49:ir.TermBr,5,50:ir.Block
49:ir.TermBr,3,50:ir.Block
50:ir.Block,3,51:ir.TermRet
35:ir.InstLoad,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstLoad
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,17:ir.InstLoad
17:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,1:ir.InstAlloca
3:ir.InstAlloca,1,15:ir.InstBitCast
15:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,23:ir.InstGetElementPtr
23:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,34:ir.InstGetElementPtr
34:ir.InstGetElementPtr,2,3:ir.InstAlloca
15:ir.InstBitCast,1,16:ir.InstCall
16:ir.InstCall,2,15:ir.InstBitCast
23:ir.InstGetElementPtr,1,24:ir.InstStore
24:ir.InstStore,2,23:ir.InstGetElementPtr
2:ir.InstAlloca,1,25:ir.InstStore
25:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,39:ir.InstLoad
39:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,41:ir.InstStore
41:ir.InstStore,2,2:ir.InstAlloca
28:ir.InstLoad,1,29:ir.InstICmp
29:ir.InstICmp,2,28:ir.InstLoad
17:ir.InstLoad,1,18:ir.InstICmp
18:ir.InstICmp,2,17:ir.InstLoad
21:ir.InstLoad,1,22:ir.InstSExt
22:ir.InstSExt,2,21:ir.InstLoad
32:ir.InstLoad,1,33:ir.InstSExt
33:ir.InstSExt,2,32:ir.InstLoad
34:ir.InstGetElementPtr,1,35:ir.InstLoad
35:ir.InstLoad,2,34:ir.InstGetElementPtr
39:ir.InstLoad,1,40:ir.InstAdd
40:ir.InstAdd,2,39:ir.InstLoad
40:ir.InstAdd,1,41:ir.InstStore
41:ir.InstStore,2,40:ir.InstAdd
19:ir.TermCondBr,2,18:ir.InstICmp
18:ir.InstICmp,1,19:ir.TermCondBr
30:ir.TermCondBr,2,29:ir.InstICmp
29:ir.InstICmp,1,30:ir.TermCondBr
