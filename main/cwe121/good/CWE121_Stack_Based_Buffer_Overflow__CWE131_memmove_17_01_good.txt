? 40
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstBitCast ir.InstLoad ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !70 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !71];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %2 metadata !72 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !73];
[MOV] 6:ir.InstStore; ;|Src:i32* null;Dst:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !74];
[MOV] 7:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !75];
[MOV] 8:ir.TermBr; |Target:label %4;Successors:[label %4];Metadata:[!dbg !77];
[MOV] 9:ir.Block; label %4|
[MOV] 10:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 5};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !78];
[MOV] 11:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 6};Pred:slt;X:i32 %5;Y:i32 1;Typ:i1;Metadata:[!dbg !80];
[MOV] 12:ir.TermCondBr; ir.InstICmp|Cond:i1 %6;TargetTrue:label %7;TargetFalse:label %13;Successors:[label %7 label %13];Metadata:[!dbg !81];
[MOV] 13:ir.Block; label %7|
[MOV] 14:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ;ir.InstBitCast |LocalIdent:{ 8};ElemType:i8;NElems:i64 40;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !82];
[MOV] 15:ir.InstBitCast; ir.InstBitCast ;ir.InstStore |LocalIdent:{ 9};From:i8* %8;To:i32*;Metadata:[!dbg !84];
[MOV] 16:ir.InstStore; ;|Src:i32* %9;Dst:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !85];
[MOV] 17:ir.TermBr; |Target:label %10;Successors:[label %10];Metadata:[!dbg !86];
[MOV] 18:ir.Block; label %10|
[MOV] 19:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 11};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !87];
[MOV] 20:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 12};X:i32 %11;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !87];
[MOV] 21:ir.InstStore; ;|Src:i32 %12;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !87];
[MOV] 22:ir.TermBr; label %4|Target:label %4;Successors:[label %4];Metadata:[!dbg !88 !llvm.loop !89];
[MOV] 23:ir.Block; label %13|
[MOV] 24:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !91 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !93];
[MOV] 25:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 14};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !93];
[MOV] 26:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %14 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !93];
[MOV] 27:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 15};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !94];
[MOV] 28:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 16};From:i32* %15;To:i8*;Metadata:[!dbg !94];
[MOV] 29:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 17};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 0];Typ:i32*;InBounds:true;Metadata:[!dbg !94];
[MOV] 30:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 18};From:i32* %17;To:i8*;Metadata:[!dbg !94];
[MOV] 31:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 19};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !94];
[MOV] 32:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 20};From:i32* %19;To:i8*;Metadata:[!dbg !94];
[MOV] 33:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 21};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %20 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !94];
[MOV] 34:ir.InstCall; ir.InstCall ;|LocalIdent:{ 22};Callee:i8* (i8*, i8*, i64, i64)* @__memmove_chk;Args:[i8* %16 i8* %18 i64 40 i64 %21];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !94];
[MOV] 35:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 23};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !95];
[MOV] 36:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 24};ElemType:i32;Src:i32* %23;Indices:[i64 0];Typ:i32*;InBounds:true;Metadata:[!dbg !95];
[MOV] 37:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 25};ElemType:i32;Src:i32* %24;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !95];
[MOV] 38:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %25];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !96];
[MOV] 39:ir.TermRet; |X:<nil>;Metadata:[!dbg !97];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstCall
4:ir.InstCall,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstStore
5:ir.InstCall,3,6:ir.InstStore
0:ir.Block,4,7:ir.InstStore
6:ir.InstStore,3,7:ir.InstStore
7:ir.InstStore,3,8:ir.TermBr
8:ir.TermBr,5,9:ir.Block
8:ir.TermBr,3,9:ir.Block
9:ir.Block,4,10:ir.InstLoad
9:ir.Block,3,10:ir.InstLoad
9:ir.Block,4,11:ir.InstICmp
10:ir.InstLoad,3,11:ir.InstICmp
11:ir.InstICmp,3,12:ir.TermCondBr
12:ir.TermCondBr,5,13:ir.Block
12:ir.TermCondBr,3,13:ir.Block
12:ir.TermCondBr,5,23:ir.Block
12:ir.TermCondBr,3,23:ir.Block
13:ir.Block,4,14:ir.InstAlloca
13:ir.Block,3,14:ir.InstAlloca
13:ir.Block,4,15:ir.InstBitCast
14:ir.InstAlloca,3,15:ir.InstBitCast
13:ir.Block,4,16:ir.InstStore
15:ir.InstBitCast,3,16:ir.InstStore
16:ir.InstStore,3,17:ir.TermBr
17:ir.TermBr,5,18:ir.Block
17:ir.TermBr,3,18:ir.Block
18:ir.Block,4,19:ir.InstLoad
18:ir.Block,3,19:ir.InstLoad
18:ir.Block,4,20:ir.InstAdd
19:ir.InstLoad,3,20:ir.InstAdd
18:ir.Block,4,21:ir.InstStore
20:ir.InstAdd,3,21:ir.InstStore
21:ir.InstStore,3,22:ir.TermBr
22:ir.TermBr,5,9:ir.Block
22:ir.TermBr,3,9:ir.Block
23:ir.Block,4,24:ir.InstCall
23:ir.Block,3,24:ir.InstCall
23:ir.Block,4,25:ir.InstBitCast
24:ir.InstCall,3,25:ir.InstBitCast
23:ir.Block,4,26:ir.InstCall
25:ir.InstBitCast,3,26:ir.InstCall
23:ir.Block,4,27:ir.InstLoad
26:ir.InstCall,3,27:ir.InstLoad
23:ir.Block,4,28:ir.InstBitCast
27:ir.InstLoad,3,28:ir.InstBitCast
23:ir.Block,4,29:ir.InstGetElementPtr
28:ir.InstBitCast,3,29:ir.InstGetElementPtr
23:ir.Block,4,30:ir.InstBitCast
29:ir.InstGetElementPtr,3,30:ir.InstBitCast
23:ir.Block,4,31:ir.InstLoad
30:ir.InstBitCast,3,31:ir.InstLoad
23:ir.Block,4,32:ir.InstBitCast
31:ir.InstLoad,3,32:ir.InstBitCast
23:ir.Block,4,33:ir.InstCall
32:ir.InstBitCast,3,33:ir.InstCall
23:ir.Block,4,34:ir.InstCall
33:ir.InstCall,3,34:ir.InstCall
23:ir.Block,4,35:ir.InstLoad
34:ir.InstCall,3,35:ir.InstLoad
23:ir.Block,4,36:ir.InstGetElementPtr
35:ir.InstLoad,3,36:ir.InstGetElementPtr
23:ir.Block,4,37:ir.InstLoad
36:ir.InstGetElementPtr,3,37:ir.InstLoad
23:ir.Block,4,38:ir.InstCall
37:ir.InstLoad,3,38:ir.InstCall
38:ir.InstCall,3,39:ir.TermRet
2:ir.InstAlloca,1,6:ir.InstStore
6:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,27:ir.InstLoad
27:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,31:ir.InstLoad
31:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,2:ir.InstAlloca
27:ir.InstLoad,1,28:ir.InstBitCast
28:ir.InstBitCast,2,27:ir.InstLoad
33:ir.InstCall,1,34:ir.InstCall
34:ir.InstCall,2,33:ir.InstCall
35:ir.InstLoad,1,36:ir.InstGetElementPtr
36:ir.InstGetElementPtr,2,35:ir.InstLoad
37:ir.InstLoad,1,38:ir.InstCall
38:ir.InstCall,2,37:ir.InstLoad
15:ir.InstBitCast,1,16:ir.InstStore
16:ir.InstStore,2,15:ir.InstBitCast
20:ir.InstAdd,1,21:ir.InstStore
21:ir.InstStore,2,20:ir.InstAdd
3:ir.InstAlloca,1,25:ir.InstBitCast
25:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,29:ir.InstGetElementPtr
29:ir.InstGetElementPtr,2,3:ir.InstAlloca
28:ir.InstBitCast,1,34:ir.InstCall
34:ir.InstCall,2,28:ir.InstBitCast
30:ir.InstBitCast,1,34:ir.InstCall
34:ir.InstCall,2,30:ir.InstBitCast
36:ir.InstGetElementPtr,1,37:ir.InstLoad
37:ir.InstLoad,2,36:ir.InstGetElementPtr
14:ir.InstAlloca,1,15:ir.InstBitCast
15:ir.InstBitCast,2,14:ir.InstAlloca
19:ir.InstLoad,1,20:ir.InstAdd
20:ir.InstAdd,2,19:ir.InstLoad
25:ir.InstBitCast,1,26:ir.InstCall
26:ir.InstCall,2,25:ir.InstBitCast
29:ir.InstGetElementPtr,1,30:ir.InstBitCast
30:ir.InstBitCast,2,29:ir.InstGetElementPtr
32:ir.InstBitCast,1,33:ir.InstCall
33:ir.InstCall,2,32:ir.InstBitCast
1:ir.InstAlloca,1,7:ir.InstStore
7:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstLoad
10:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstStore
21:ir.InstStore,2,1:ir.InstAlloca
10:ir.InstLoad,1,11:ir.InstICmp
11:ir.InstICmp,2,10:ir.InstLoad
31:ir.InstLoad,1,32:ir.InstBitCast
32:ir.InstBitCast,2,31:ir.InstLoad
12:ir.TermCondBr,2,11:ir.InstICmp
11:ir.InstICmp,1,12:ir.TermCondBr
