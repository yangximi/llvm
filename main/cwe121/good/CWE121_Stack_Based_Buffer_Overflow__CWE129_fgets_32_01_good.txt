? 63
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ;ir.InstStore ir.InstStore ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstLoad ;ir.InstStore ir.InstStore ir.InstLoad |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 5};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 6};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 7};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !116 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !117];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %2 metadata !118 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !119];
[MOV] 10:ir.InstStore; ;|Src:i32* %1;Dst:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !119];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %3 metadata !120 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !121];
[MOV] 12:ir.InstStore; ;|Src:i32* %1;Dst:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !121];
[MOV] 13:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !122];
[MOV] 14:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !123 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !125];
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstLoad |LocalIdent:{ 8};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !126];
[MOV] 16:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 9};ElemType:i32;Src:i32* %8;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !127];
[MOV] 17:ir.InstStore; ;|Src:i32 %9;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !125];
[MOV] 18:ir.InstStore; ;|Src:i32 7;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !128];
[MOV] 19:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 10};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !129];
[MOV] 20:ir.InstLoad; ir.InstLoad ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 11};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !130];
[MOV] 21:ir.InstStore; ;|Src:i32 %10;Dst:i32* %11;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !131];
[MOV] 22:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %5 metadata !132 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !134];
[MOV] 23:ir.InstLoad; ir.InstLoad ;ir.InstLoad |LocalIdent:{ 12};ElemType:i32*;Src:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !135];
[MOV] 24:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 13};ElemType:i32;Src:i32* %12;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !136];
[MOV] 25:ir.InstStore; ;|Src:i32 %13;Dst:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !134];
[MOV] 26:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %6 metadata !137 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !139];
[MOV] 27:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %7 metadata !140 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !141];
[MOV] 28:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 14};From:[10 x i32]* %7;To:i8*;Metadata:[!dbg !141];
[MOV] 29:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %14 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !141];
[MOV] 30:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 15};ElemType:i32;Src:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !142];
[MOV] 31:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 16};Pred:sge;X:i32 %15;Y:i32 0;Typ:i1;Metadata:[!dbg !144];
[MOV] 32:ir.TermCondBr; ir.InstICmp|Cond:i1 %16;TargetTrue:label %17;TargetFalse:label %33;Successors:[label %17 label %33];Metadata:[!dbg !145];
[MOV] 33:ir.Block; label %17|
[MOV] 34:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 18};ElemType:i32;Src:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !146];
[MOV] 35:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 19};From:i32 %18;To:i64;Metadata:[!dbg !148];
[MOV] 36:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 20};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %19];Typ:i32*;InBounds:true;Metadata:[!dbg !148];
[MOV] 37:ir.InstStore; ;|Src:i32 1;Dst:i32* %20;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !149];
[MOV] 38:ir.InstStore; ;|Src:i32 0;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !150];
[MOV] 39:ir.TermBr; |Target:label %21;Successors:[label %21];Metadata:[!dbg !152];
[MOV] 40:ir.Block; label %21|
[MOV] 41:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 22};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !153];
[MOV] 42:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 23};Pred:slt;X:i32 %22;Y:i32 10;Typ:i1;Metadata:[!dbg !155];
[MOV] 43:ir.TermCondBr; ir.InstICmp|Cond:i1 %23;TargetTrue:label %24;TargetFalse:label %32;Successors:[label %24 label %32];Metadata:[!dbg !156];
[MOV] 44:ir.Block; label %24|
[MOV] 45:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 25};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !157];
[MOV] 46:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 26};From:i32 %25;To:i64;Metadata:[!dbg !159];
[MOV] 47:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 27};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %26];Typ:i32*;InBounds:true;Metadata:[!dbg !159];
[MOV] 48:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 28};ElemType:i32;Src:i32* %27;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !159];
[MOV] 49:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %28];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !160];
[MOV] 50:ir.TermBr; |Target:label %29;Successors:[label %29];Metadata:[!dbg !161];
[MOV] 51:ir.Block; label %29|
[MOV] 52:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 30};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !162];
[MOV] 53:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 31};X:i32 %30;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !162];
[MOV] 54:ir.InstStore; ;|Src:i32 %31;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !162];
[MOV] 55:ir.TermBr; label %21|Target:label %21;Successors:[label %21];Metadata:[!dbg !163 !llvm.loop !164];
[MOV] 56:ir.Block; label %32|
[MOV] 57:ir.TermBr; |Target:label %34;Successors:[label %34];Metadata:[!dbg !166];
[MOV] 58:ir.Block; label %33|
[MOV] 59:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !167];
[MOV] 60:ir.TermBr; |Target:label %34;Successors:[label %34];Metadata:[];
[MOV] 61:ir.Block; label %34|
[MOV] 62:ir.TermRet; |X:<nil>;Metadata:[!dbg !169];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstAlloca
6:ir.InstAlloca,3,7:ir.InstAlloca
0:ir.Block,4,8:ir.InstCall
7:ir.InstAlloca,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstStore
9:ir.InstCall,3,10:ir.InstStore
0:ir.Block,4,11:ir.InstCall
10:ir.InstStore,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstStore
11:ir.InstCall,3,12:ir.InstStore
0:ir.Block,4,13:ir.InstStore
12:ir.InstStore,3,13:ir.InstStore
0:ir.Block,4,14:ir.InstCall
13:ir.InstStore,3,14:ir.InstCall
0:ir.Block,4,15:ir.InstLoad
14:ir.InstCall,3,15:ir.InstLoad
0:ir.Block,4,16:ir.InstLoad
15:ir.InstLoad,3,16:ir.InstLoad
0:ir.Block,4,17:ir.InstStore
16:ir.InstLoad,3,17:ir.InstStore
0:ir.Block,4,18:ir.InstStore
17:ir.InstStore,3,18:ir.InstStore
0:ir.Block,4,19:ir.InstLoad
18:ir.InstStore,3,19:ir.InstLoad
0:ir.Block,4,20:ir.InstLoad
19:ir.InstLoad,3,20:ir.InstLoad
0:ir.Block,4,21:ir.InstStore
20:ir.InstLoad,3,21:ir.InstStore
0:ir.Block,4,22:ir.InstCall
21:ir.InstStore,3,22:ir.InstCall
0:ir.Block,4,23:ir.InstLoad
22:ir.InstCall,3,23:ir.InstLoad
0:ir.Block,4,24:ir.InstLoad
23:ir.InstLoad,3,24:ir.InstLoad
0:ir.Block,4,25:ir.InstStore
24:ir.InstLoad,3,25:ir.InstStore
0:ir.Block,4,26:ir.InstCall
25:ir.InstStore,3,26:ir.InstCall
0:ir.Block,4,27:ir.InstCall
26:ir.InstCall,3,27:ir.InstCall
0:ir.Block,4,28:ir.InstBitCast
27:ir.InstCall,3,28:ir.InstBitCast
0:ir.Block,4,29:ir.InstCall
28:ir.InstBitCast,3,29:ir.InstCall
0:ir.Block,4,30:ir.InstLoad
29:ir.InstCall,3,30:ir.InstLoad
0:ir.Block,4,31:ir.InstICmp
30:ir.InstLoad,3,31:ir.InstICmp
31:ir.InstICmp,3,32:ir.TermCondBr
32:ir.TermCondBr,5,33:ir.Block
32:ir.TermCondBr,3,33:ir.Block
32:ir.TermCondBr,5,58:ir.Block
32:ir.TermCondBr,3,58:ir.Block
33:ir.Block,4,34:ir.InstLoad
33:ir.Block,3,34:ir.InstLoad
33:ir.Block,4,35:ir.InstSExt
34:ir.InstLoad,3,35:ir.InstSExt
33:ir.Block,4,36:ir.InstGetElementPtr
35:ir.InstSExt,3,36:ir.InstGetElementPtr
33:ir.Block,4,37:ir.InstStore
36:ir.InstGetElementPtr,3,37:ir.InstStore
33:ir.Block,4,38:ir.InstStore
37:ir.InstStore,3,38:ir.InstStore
38:ir.InstStore,3,39:ir.TermBr
39:ir.TermBr,5,40:ir.Block
39:ir.TermBr,3,40:ir.Block
40:ir.Block,4,41:ir.InstLoad
40:ir.Block,3,41:ir.InstLoad
40:ir.Block,4,42:ir.InstICmp
41:ir.InstLoad,3,42:ir.InstICmp
42:ir.InstICmp,3,43:ir.TermCondBr
43:ir.TermCondBr,5,44:ir.Block
43:ir.TermCondBr,3,44:ir.Block
43:ir.TermCondBr,5,56:ir.Block
43:ir.TermCondBr,3,56:ir.Block
44:ir.Block,4,45:ir.InstLoad
44:ir.Block,3,45:ir.InstLoad
44:ir.Block,4,46:ir.InstSExt
45:ir.InstLoad,3,46:ir.InstSExt
44:ir.Block,4,47:ir.InstGetElementPtr
46:ir.InstSExt,3,47:ir.InstGetElementPtr
44:ir.Block,4,48:ir.InstLoad
47:ir.InstGetElementPtr,3,48:ir.InstLoad
44:ir.Block,4,49:ir.InstCall
48:ir.InstLoad,3,49:ir.InstCall
49:ir.InstCall,3,50:ir.TermBr
50:ir.TermBr,5,51:ir.Block
50:ir.TermBr,3,51:ir.Block
51:ir.Block,4,52:ir.InstLoad
51:ir.Block,3,52:ir.InstLoad
51:ir.Block,4,53:ir.InstAdd
52:ir.InstLoad,3,53:ir.InstAdd
51:ir.Block,4,54:ir.InstStore
53:ir.InstAdd,3,54:ir.InstStore
54:ir.InstStore,3,55:ir.TermBr
55:ir.TermBr,5,40:ir.Block
55:ir.TermBr,3,40:ir.Block
56:ir.Block,3,57:ir.TermBr
57:ir.TermBr,5,61:ir.Block
57:ir.TermBr,3,61:ir.Block
58:ir.Block,4,59:ir.InstCall
58:ir.Block,3,59:ir.InstCall
59:ir.InstCall,3,60:ir.TermBr
60:ir.TermBr,5,61:ir.Block
60:ir.TermBr,3,61:ir.Block
61:ir.Block,3,62:ir.TermRet
2:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,2:ir.InstAlloca
15:ir.InstLoad,1,16:ir.InstLoad
16:ir.InstLoad,2,15:ir.InstLoad
19:ir.InstLoad,1,21:ir.InstStore
21:ir.InstStore,2,19:ir.InstLoad
6:ir.InstAlloca,1,38:ir.InstStore
38:ir.InstStore,2,6:ir.InstAlloca
6:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,45:ir.InstLoad
45:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,52:ir.InstLoad
52:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,54:ir.InstStore
54:ir.InstStore,2,6:ir.InstAlloca
41:ir.InstLoad,1,42:ir.InstICmp
42:ir.InstICmp,2,41:ir.InstLoad
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstStore
13:ir.InstStore,2,1:ir.InstAlloca
3:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,23:ir.InstLoad
23:ir.InstLoad,2,3:ir.InstAlloca
16:ir.InstLoad,1,17:ir.InstStore
17:ir.InstStore,2,16:ir.InstLoad
4:ir.InstAlloca,1,17:ir.InstStore
17:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,18:ir.InstStore
18:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,4:ir.InstAlloca
23:ir.InstLoad,1,24:ir.InstLoad
24:ir.InstLoad,2,23:ir.InstLoad
24:ir.InstLoad,1,25:ir.InstStore
25:ir.InstStore,2,24:ir.InstLoad
45:ir.InstLoad,1,46:ir.InstSExt
46:ir.InstSExt,2,45:ir.InstLoad
5:ir.InstAlloca,1,25:ir.InstStore
25:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,30:ir.InstLoad
30:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,34:ir.InstLoad
34:ir.InstLoad,2,5:ir.InstAlloca
7:ir.InstAlloca,1,28:ir.InstBitCast
28:ir.InstBitCast,2,7:ir.InstAlloca
7:ir.InstAlloca,1,36:ir.InstGetElementPtr
36:ir.InstGetElementPtr,2,7:ir.InstAlloca
7:ir.InstAlloca,1,47:ir.InstGetElementPtr
47:ir.InstGetElementPtr,2,7:ir.InstAlloca
30:ir.InstLoad,1,31:ir.InstICmp
31:ir.InstICmp,2,30:ir.InstLoad
36:ir.InstGetElementPtr,1,37:ir.InstStore
37:ir.InstStore,2,36:ir.InstGetElementPtr
48:ir.InstLoad,1,49:ir.InstCall
49:ir.InstCall,2,48:ir.InstLoad
20:ir.InstLoad,1,21:ir.InstStore
21:ir.InstStore,2,20:ir.InstLoad
28:ir.InstBitCast,1,29:ir.InstCall
29:ir.InstCall,2,28:ir.InstBitCast
34:ir.InstLoad,1,35:ir.InstSExt
35:ir.InstSExt,2,34:ir.InstLoad
47:ir.InstGetElementPtr,1,48:ir.InstLoad
48:ir.InstLoad,2,47:ir.InstGetElementPtr
52:ir.InstLoad,1,53:ir.InstAdd
53:ir.InstAdd,2,52:ir.InstLoad
53:ir.InstAdd,1,54:ir.InstStore
54:ir.InstStore,2,53:ir.InstAdd
32:ir.TermCondBr,2,31:ir.InstICmp
31:ir.InstICmp,1,32:ir.TermCondBr
43:ir.TermCondBr,2,42:ir.InstICmp
42:ir.InstICmp,1,43:ir.TermCondBr
