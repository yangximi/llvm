? 61
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstCall ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !146 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !147];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !148];
[MOV] 6:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 4};ElemType:i32;Src:i32* @GLOBAL_CONST_TRUE;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !149];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:ne;X:i32 %4;Y:i32 0;Typ:i1;Metadata:[!dbg !149];
[MOV] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %9;Successors:[label %6 label %9];Metadata:[!dbg !151];
[MOV] 9:ir.Block; label %6|
[MOV] 10:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 7};ElemType:%struct.__sFILE*;Src:%struct.__sFILE** @__stdinp;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !152];
[MOV] 11:ir.InstCall; ir.InstCall ;|LocalIdent:{ 8};Callee:i32 (%struct.__sFILE*, i8*, ...)* @fscanf;Args:[%struct.__sFILE* %7 i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0) i32* %1];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !154];
[MOV] 12:ir.TermBr; |Target:label %9;Successors:[label %9];Metadata:[!dbg !155];
[MOV] 13:ir.Block; label %9|
[MOV] 14:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 10};ElemType:i32;Src:i32* @GLOBAL_CONST_TRUE;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !156];
[MOV] 15:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 11};Pred:ne;X:i32 %10;Y:i32 0;Typ:i1;Metadata:[!dbg !156];
[MOV] 16:ir.TermCondBr; ir.InstICmp|Cond:i1 %11;TargetTrue:label %12;TargetFalse:label %37;Successors:[label %12 label %37];Metadata:[!dbg !158];
[MOV] 17:ir.Block; label %12|
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !159 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !162];
[MOV] 19:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !163 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !164];
[MOV] 20:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 13};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !164];
[MOV] 21:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %13 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !164];
[MOV] 22:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 14};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !165];
[MOV] 23:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 15};Pred:sge;X:i32 %14;Y:i32 0;Typ:i1;Metadata:[!dbg !167];
[MOV] 24:ir.TermCondBr; ir.InstICmp|Cond:i1 %15;TargetTrue:label %16;TargetFalse:label %35;Successors:[label %16 label %35];Metadata:[!dbg !168];
[MOV] 25:ir.Block; label %16|
[MOV] 26:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 17};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !169];
[MOV] 27:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 18};Pred:slt;X:i32 %17;Y:i32 10;Typ:i1;Metadata:[!dbg !170];
[MOV] 28:ir.TermCondBr; ir.InstICmp|Cond:i1 %18;TargetTrue:label %19;TargetFalse:label %35;Successors:[label %19 label %35];Metadata:[!dbg !171];
[MOV] 29:ir.Block; label %19|
[MOV] 30:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 20};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !172];
[MOV] 31:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 21};From:i32 %20;To:i64;Metadata:[!dbg !174];
[MOV] 32:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 22};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %21];Typ:i32*;InBounds:true;Metadata:[!dbg !174];
[MOV] 33:ir.InstStore; ;|Src:i32 1;Dst:i32* %22;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !175];
[MOV] 34:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !176];
[MOV] 35:ir.TermBr; |Target:label %23;Successors:[label %23];Metadata:[!dbg !178];
[MOV] 36:ir.Block; label %23|
[MOV] 37:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 24};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !179];
[MOV] 38:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 25};Pred:slt;X:i32 %24;Y:i32 10;Typ:i1;Metadata:[!dbg !181];
[MOV] 39:ir.TermCondBr; ir.InstICmp|Cond:i1 %25;TargetTrue:label %26;TargetFalse:label %34;Successors:[label %26 label %34];Metadata:[!dbg !182];
[MOV] 40:ir.Block; label %26|
[MOV] 41:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 27};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !183];
[MOV] 42:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 28};From:i32 %27;To:i64;Metadata:[!dbg !185];
[MOV] 43:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 29};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %28];Typ:i32*;InBounds:true;Metadata:[!dbg !185];
[MOV] 44:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 30};ElemType:i32;Src:i32* %29;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !185];
[MOV] 45:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %30];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !186];
[MOV] 46:ir.TermBr; |Target:label %31;Successors:[label %31];Metadata:[!dbg !187];
[MOV] 47:ir.Block; label %31|
[MOV] 48:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 32};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !188];
[MOV] 49:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 33};X:i32 %32;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !188];
[MOV] 50:ir.InstStore; ;|Src:i32 %33;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !188];
[MOV] 51:ir.TermBr; label %23|Target:label %23;Successors:[label %23];Metadata:[!dbg !189 !llvm.loop !190];
[MOV] 52:ir.Block; label %34|
[MOV] 53:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[!dbg !192];
[MOV] 54:ir.Block; label %35|
[MOV] 55:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !193];
[MOV] 56:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[];
[MOV] 57:ir.Block; label %36|
[MOV] 58:ir.TermBr; |Target:label %37;Successors:[label %37];Metadata:[!dbg !195];
[MOV] 59:ir.Block; label %37|
[MOV] 60:ir.TermRet; |X:<nil>;Metadata:[!dbg !196];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstLoad
5:ir.InstStore,3,6:ir.InstLoad
0:ir.Block,4,7:ir.InstICmp
6:ir.InstLoad,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,13:ir.Block
8:ir.TermCondBr,3,13:ir.Block
9:ir.Block,4,10:ir.InstLoad
9:ir.Block,3,10:ir.InstLoad
9:ir.Block,4,11:ir.InstCall
10:ir.InstLoad,3,11:ir.InstCall
11:ir.InstCall,3,12:ir.TermBr
12:ir.TermBr,5,13:ir.Block
12:ir.TermBr,3,13:ir.Block
13:ir.Block,4,14:ir.InstLoad
13:ir.Block,3,14:ir.InstLoad
13:ir.Block,4,15:ir.InstICmp
14:ir.InstLoad,3,15:ir.InstICmp
15:ir.InstICmp,3,16:ir.TermCondBr
16:ir.TermCondBr,5,17:ir.Block
16:ir.TermCondBr,3,17:ir.Block
16:ir.TermCondBr,5,59:ir.Block
16:ir.TermCondBr,3,59:ir.Block
17:ir.Block,4,18:ir.InstCall
17:ir.Block,3,18:ir.InstCall
17:ir.Block,4,19:ir.InstCall
18:ir.InstCall,3,19:ir.InstCall
17:ir.Block,4,20:ir.InstBitCast
19:ir.InstCall,3,20:ir.InstBitCast
17:ir.Block,4,21:ir.InstCall
20:ir.InstBitCast,3,21:ir.InstCall
17:ir.Block,4,22:ir.InstLoad
21:ir.InstCall,3,22:ir.InstLoad
17:ir.Block,4,23:ir.InstICmp
22:ir.InstLoad,3,23:ir.InstICmp
23:ir.InstICmp,3,24:ir.TermCondBr
24:ir.TermCondBr,5,25:ir.Block
24:ir.TermCondBr,3,25:ir.Block
24:ir.TermCondBr,5,54:ir.Block
24:ir.TermCondBr,3,54:ir.Block
25:ir.Block,4,26:ir.InstLoad
25:ir.Block,3,26:ir.InstLoad
25:ir.Block,4,27:ir.InstICmp
26:ir.InstLoad,3,27:ir.InstICmp
27:ir.InstICmp,3,28:ir.TermCondBr
28:ir.TermCondBr,5,29:ir.Block
28:ir.TermCondBr,3,29:ir.Block
28:ir.TermCondBr,5,54:ir.Block
28:ir.TermCondBr,3,54:ir.Block
29:ir.Block,4,30:ir.InstLoad
29:ir.Block,3,30:ir.InstLoad
29:ir.Block,4,31:ir.InstSExt
30:ir.InstLoad,3,31:ir.InstSExt
29:ir.Block,4,32:ir.InstGetElementPtr
31:ir.InstSExt,3,32:ir.InstGetElementPtr
29:ir.Block,4,33:ir.InstStore
32:ir.InstGetElementPtr,3,33:ir.InstStore
29:ir.Block,4,34:ir.InstStore
33:ir.InstStore,3,34:ir.InstStore
34:ir.InstStore,3,35:ir.TermBr
35:ir.TermBr,5,36:ir.Block
35:ir.TermBr,3,36:ir.Block
36:ir.Block,4,37:ir.InstLoad
36:ir.Block,3,37:ir.InstLoad
36:ir.Block,4,38:ir.InstICmp
37:ir.InstLoad,3,38:ir.InstICmp
38:ir.InstICmp,3,39:ir.TermCondBr
39:ir.TermCondBr,5,40:ir.Block
39:ir.TermCondBr,3,40:ir.Block
39:ir.TermCondBr,5,52:ir.Block
39:ir.TermCondBr,3,52:ir.Block
40:ir.Block,4,41:ir.InstLoad
40:ir.Block,3,41:ir.InstLoad
40:ir.Block,4,42:ir.InstSExt
41:ir.InstLoad,3,42:ir.InstSExt
40:ir.Block,4,43:ir.InstGetElementPtr
42:ir.InstSExt,3,43:ir.InstGetElementPtr
40:ir.Block,4,44:ir.InstLoad
43:ir.InstGetElementPtr,3,44:ir.InstLoad
40:ir.Block,4,45:ir.InstCall
44:ir.InstLoad,3,45:ir.InstCall
45:ir.InstCall,3,46:ir.TermBr
46:ir.TermBr,5,47:ir.Block
46:ir.TermBr,3,47:ir.Block
47:ir.Block,4,48:ir.InstLoad
47:ir.Block,3,48:ir.InstLoad
47:ir.Block,4,49:ir.InstAdd
48:ir.InstLoad,3,49:ir.InstAdd
47:ir.Block,4,50:ir.InstStore
49:ir.InstAdd,3,50:ir.InstStore
50:ir.InstStore,3,51:ir.TermBr
51:ir.TermBr,5,36:ir.Block
51:ir.TermBr,3,36:ir.Block
52:ir.Block,3,53:ir.TermBr
53:ir.TermBr,5,57:ir.Block
53:ir.TermBr,3,57:ir.Block
54:ir.Block,4,55:ir.InstCall
54:ir.Block,3,55:ir.InstCall
55:ir.InstCall,3,56:ir.TermBr
56:ir.TermBr,5,57:ir.Block
56:ir.TermBr,3,57:ir.Block
57:ir.Block,3,58:ir.TermBr
58:ir.TermBr,5,59:ir.Block
58:ir.TermBr,3,59:ir.Block
59:ir.Block,3,60:ir.TermRet
10:ir.InstLoad,1,11:ir.InstCall
11:ir.InstCall,2,10:ir.InstLoad
20:ir.InstBitCast,1,21:ir.InstCall
21:ir.InstCall,2,20:ir.InstBitCast
41:ir.InstLoad,1,42:ir.InstSExt
42:ir.InstSExt,2,41:ir.InstLoad
44:ir.InstLoad,1,45:ir.InstCall
45:ir.InstCall,2,44:ir.InstLoad
3:ir.InstAlloca,1,20:ir.InstBitCast
20:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,32:ir.InstGetElementPtr
32:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,43:ir.InstGetElementPtr
43:ir.InstGetElementPtr,2,3:ir.InstAlloca
32:ir.InstGetElementPtr,1,33:ir.InstStore
33:ir.InstStore,2,32:ir.InstGetElementPtr
2:ir.InstAlloca,1,34:ir.InstStore
34:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,48:ir.InstLoad
48:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,50:ir.InstStore
50:ir.InstStore,2,2:ir.InstAlloca
48:ir.InstLoad,1,49:ir.InstAdd
49:ir.InstAdd,2,48:ir.InstLoad
49:ir.InstAdd,1,50:ir.InstStore
50:ir.InstStore,2,49:ir.InstAdd
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,11:ir.InstCall
11:ir.InstCall,2,1:ir.InstAlloca
1:ir.InstAlloca,1,22:ir.InstLoad
22:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,26:ir.InstLoad
26:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,30:ir.InstLoad
30:ir.InstLoad,2,1:ir.InstAlloca
6:ir.InstLoad,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstLoad
14:ir.InstLoad,1,15:ir.InstICmp
15:ir.InstICmp,2,14:ir.InstLoad
22:ir.InstLoad,1,23:ir.InstICmp
23:ir.InstICmp,2,22:ir.InstLoad
30:ir.InstLoad,1,31:ir.InstSExt
31:ir.InstSExt,2,30:ir.InstLoad
26:ir.InstLoad,1,27:ir.InstICmp
27:ir.InstICmp,2,26:ir.InstLoad
37:ir.InstLoad,1,38:ir.InstICmp
38:ir.InstICmp,2,37:ir.InstLoad
43:ir.InstGetElementPtr,1,44:ir.InstLoad
44:ir.InstLoad,2,43:ir.InstGetElementPtr
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
16:ir.TermCondBr,2,15:ir.InstICmp
15:ir.InstICmp,1,16:ir.TermCondBr
24:ir.TermCondBr,2,23:ir.InstICmp
23:ir.InstICmp,1,24:ir.TermCondBr
28:ir.TermCondBr,2,27:ir.InstICmp
27:ir.InstICmp,1,28:ir.TermCondBr
39:ir.TermCondBr,2,38:ir.InstICmp
38:ir.InstICmp,1,39:ir.TermCondBr
