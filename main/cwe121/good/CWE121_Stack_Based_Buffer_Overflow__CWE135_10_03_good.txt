? 40
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 2};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !143 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !144];
[MOV] 5:ir.InstStore; ;|Src:i8* null;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !145];
[MOV] 6:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 4};ElemType:i32;Src:i32* @globalFalse;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !146];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:ne;X:i32 %4;Y:i32 0;Typ:i1;Metadata:[!dbg !146];
[MOV] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %7;Successors:[label %6 label %7];Metadata:[!dbg !148];
[MOV] 9:ir.Block; label %6|
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !149];
[MOV] 11:ir.TermBr; |Target:label %8;Successors:[label %8];Metadata:[!dbg !151];
[MOV] 12:ir.Block; label %7|
[MOV] 13:ir.InstStore; ;|Src:i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0);Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !152];
[MOV] 14:ir.TermBr; |Target:label %8;Successors:[label %8];Metadata:[];
[MOV] 15:ir.Block; label %8|
[MOV] 16:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 9};ElemType:i32;Src:i32* @globalTrue;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !154];
[MOV] 17:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 10};Pred:ne;X:i32 %9;Y:i32 0;Typ:i1;Metadata:[!dbg !154];
[MOV] 18:ir.TermCondBr; ir.InstICmp|Cond:i1 %10;TargetTrue:label %11;TargetFalse:label %24;Successors:[label %11 label %24];Metadata:[!dbg !156];
[MOV] 19:ir.Block; label %11|
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %2 metadata !157 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !160];
[MOV] 21:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 12};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !161];
[MOV] 22:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 13};Callee:i64 (i8*)* @strlen;Args:[i8* %12];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !162];
[MOV] 23:ir.InstStore; ;|Src:i64 %13;Dst:i64* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !160];
[MOV] 24:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %3 metadata !163 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !164];
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 14};ElemType:i64;Src:i64* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !165];
[MOV] 26:ir.InstAdd; ir.InstAdd ;ir.InstMul |LocalIdent:{ 15};X:i64 %14;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !165];
[MOV] 27:ir.InstMul; ir.InstMul ;|LocalIdent:{ 16};X:i64 %15;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !165];
[MOV] 28:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 17};ElemType:i8;NElems:i64 %16;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !165];
[MOV] 29:ir.InstStore; ;|Src:i8* %17;Dst:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !164];
[MOV] 30:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 18};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !166];
[MOV] 31:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 19};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !166];
[MOV] 32:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 20};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !166];
[MOV] 33:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 21};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %20 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !166];
[MOV] 34:ir.InstCall; ir.InstCall ;|LocalIdent:{ 22};Callee:i8* (i8*, i8*, i64)* @__strcpy_chk;Args:[i8* %18 i8* %19 i64 %21];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#4];OperandBundles:[];Metadata:[!dbg !166];
[MOV] 35:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 23};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !167];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %23];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !168];
[MOV] 37:ir.TermBr; |Target:label %24;Successors:[label %24];Metadata:[!dbg !169];
[MOV] 38:ir.Block; label %24|
[MOV] 39:ir.TermRet; |X:<nil>;Metadata:[!dbg !170];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstLoad
5:ir.InstStore,3,6:ir.InstLoad
0:ir.Block,4,7:ir.InstICmp
6:ir.InstLoad,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,12:ir.Block
8:ir.TermCondBr,3,12:ir.Block
9:ir.Block,4,10:ir.InstCall
9:ir.Block,3,10:ir.InstCall
10:ir.InstCall,3,11:ir.TermBr
11:ir.TermBr,5,15:ir.Block
11:ir.TermBr,3,15:ir.Block
12:ir.Block,4,13:ir.InstStore
12:ir.Block,3,13:ir.InstStore
13:ir.InstStore,3,14:ir.TermBr
14:ir.TermBr,5,15:ir.Block
14:ir.TermBr,3,15:ir.Block
15:ir.Block,4,16:ir.InstLoad
15:ir.Block,3,16:ir.InstLoad
15:ir.Block,4,17:ir.InstICmp
16:ir.InstLoad,3,17:ir.InstICmp
17:ir.InstICmp,3,18:ir.TermCondBr
18:ir.TermCondBr,5,19:ir.Block
18:ir.TermCondBr,3,19:ir.Block
18:ir.TermCondBr,5,38:ir.Block
18:ir.TermCondBr,3,38:ir.Block
19:ir.Block,4,20:ir.InstCall
19:ir.Block,3,20:ir.InstCall
19:ir.Block,4,21:ir.InstLoad
20:ir.InstCall,3,21:ir.InstLoad
19:ir.Block,4,22:ir.InstCall
21:ir.InstLoad,3,22:ir.InstCall
19:ir.Block,4,23:ir.InstStore
22:ir.InstCall,3,23:ir.InstStore
19:ir.Block,4,24:ir.InstCall
23:ir.InstStore,3,24:ir.InstCall
19:ir.Block,4,25:ir.InstLoad
24:ir.InstCall,3,25:ir.InstLoad
19:ir.Block,4,26:ir.InstAdd
25:ir.InstLoad,3,26:ir.InstAdd
19:ir.Block,4,27:ir.InstMul
26:ir.InstAdd,3,27:ir.InstMul
19:ir.Block,4,28:ir.InstAlloca
27:ir.InstMul,3,28:ir.InstAlloca
19:ir.Block,4,29:ir.InstStore
28:ir.InstAlloca,3,29:ir.InstStore
19:ir.Block,4,30:ir.InstLoad
29:ir.InstStore,3,30:ir.InstLoad
19:ir.Block,4,31:ir.InstLoad
30:ir.InstLoad,3,31:ir.InstLoad
19:ir.Block,4,32:ir.InstLoad
31:ir.InstLoad,3,32:ir.InstLoad
19:ir.Block,4,33:ir.InstCall
32:ir.InstLoad,3,33:ir.InstCall
19:ir.Block,4,34:ir.InstCall
33:ir.InstCall,3,34:ir.InstCall
19:ir.Block,4,35:ir.InstLoad
34:ir.InstCall,3,35:ir.InstLoad
19:ir.Block,4,36:ir.InstCall
35:ir.InstLoad,3,36:ir.InstCall
36:ir.InstCall,3,37:ir.TermBr
37:ir.TermBr,5,38:ir.Block
37:ir.TermBr,3,38:ir.Block
38:ir.Block,3,39:ir.TermRet
32:ir.InstLoad,1,33:ir.InstCall
33:ir.InstCall,2,32:ir.InstLoad
30:ir.InstLoad,1,34:ir.InstCall
34:ir.InstCall,2,30:ir.InstLoad
25:ir.InstLoad,1,26:ir.InstAdd
26:ir.InstAdd,2,25:ir.InstLoad
28:ir.InstAlloca,1,29:ir.InstStore
29:ir.InstStore,2,28:ir.InstAlloca
3:ir.InstAlloca,1,29:ir.InstStore
29:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,30:ir.InstLoad
30:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,3:ir.InstAlloca
35:ir.InstLoad,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstLoad
21:ir.InstLoad,1,22:ir.InstCall
22:ir.InstCall,2,21:ir.InstLoad
22:ir.InstCall,1,23:ir.InstStore
23:ir.InstStore,2,22:ir.InstCall
2:ir.InstAlloca,1,23:ir.InstStore
23:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,2:ir.InstAlloca
26:ir.InstAdd,1,27:ir.InstMul
27:ir.InstMul,2,26:ir.InstAdd
31:ir.InstLoad,1,34:ir.InstCall
34:ir.InstCall,2,31:ir.InstLoad
33:ir.InstCall,1,34:ir.InstCall
34:ir.InstCall,2,33:ir.InstCall
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstStore
13:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,31:ir.InstLoad
31:ir.InstLoad,2,1:ir.InstAlloca
16:ir.InstLoad,1,17:ir.InstICmp
17:ir.InstICmp,2,16:ir.InstLoad
6:ir.InstLoad,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstLoad
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
18:ir.TermCondBr,2,17:ir.InstICmp
17:ir.InstICmp,1,18:ir.TermCondBr
