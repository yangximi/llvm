? 60
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !150 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !151];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !152];
[MOV] 6:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 4};Callee:i32 ()* @staticReturnsTrue;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !153];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:ne;X:i32 %4;Y:i32 0;Typ:i1;Metadata:[!dbg !153];
[MOV] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %7;Successors:[label %6 label %7];Metadata:[!dbg !155];
[MOV] 9:ir.Block; label %6|
[MOV] 10:ir.InstStore; ;|Src:i32 10;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !156];
[MOV] 11:ir.TermBr; |Target:label %7;Successors:[label %7];Metadata:[!dbg !158];
[MOV] 12:ir.Block; label %7|
[MOV] 13:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 8};Callee:i32 ()* @staticReturnsTrue;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !159];
[MOV] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:ne;X:i32 %8;Y:i32 0;Typ:i1;Metadata:[!dbg !159];
[MOV] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %35;Successors:[label %10 label %35];Metadata:[!dbg !161];
[MOV] 16:ir.Block; label %10|
[MOV] 17:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !162 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !165];
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !166 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !167];
[MOV] 19:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 11};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !167];
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %11 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !167];
[MOV] 21:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 12};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !168];
[MOV] 22:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 13};Pred:sge;X:i32 %12;Y:i32 0;Typ:i1;Metadata:[!dbg !170];
[MOV] 23:ir.TermCondBr; ir.InstICmp|Cond:i1 %13;TargetTrue:label %14;TargetFalse:label %33;Successors:[label %14 label %33];Metadata:[!dbg !171];
[MOV] 24:ir.Block; label %14|
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 15};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !172];
[MOV] 26:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 16};Pred:slt;X:i32 %15;Y:i32 10;Typ:i1;Metadata:[!dbg !173];
[MOV] 27:ir.TermCondBr; ir.InstICmp|Cond:i1 %16;TargetTrue:label %17;TargetFalse:label %33;Successors:[label %17 label %33];Metadata:[!dbg !174];
[MOV] 28:ir.Block; label %17|
[MOV] 29:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 18};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !175];
[MOV] 30:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 19};From:i32 %18;To:i64;Metadata:[!dbg !177];
[MOV] 31:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 20};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %19];Typ:i32*;InBounds:true;Metadata:[!dbg !177];
[MOV] 32:ir.InstStore; ;|Src:i32 1;Dst:i32* %20;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !178];
[MOV] 33:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !179];
[MOV] 34:ir.TermBr; |Target:label %21;Successors:[label %21];Metadata:[!dbg !181];
[MOV] 35:ir.Block; label %21|
[MOV] 36:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 22};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !182];
[MOV] 37:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 23};Pred:slt;X:i32 %22;Y:i32 10;Typ:i1;Metadata:[!dbg !184];
[MOV] 38:ir.TermCondBr; ir.InstICmp|Cond:i1 %23;TargetTrue:label %24;TargetFalse:label %32;Successors:[label %24 label %32];Metadata:[!dbg !185];
[MOV] 39:ir.Block; label %24|
[MOV] 40:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 25};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !186];
[MOV] 41:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 26};From:i32 %25;To:i64;Metadata:[!dbg !188];
[MOV] 42:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 27};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %26];Typ:i32*;InBounds:true;Metadata:[!dbg !188];
[MOV] 43:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 28};ElemType:i32;Src:i32* %27;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !188];
[MOV] 44:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %28];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !189];
[MOV] 45:ir.TermBr; |Target:label %29;Successors:[label %29];Metadata:[!dbg !190];
[MOV] 46:ir.Block; label %29|
[MOV] 47:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 30};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !191];
[MOV] 48:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 31};X:i32 %30;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !191];
[MOV] 49:ir.InstStore; ;|Src:i32 %31;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !191];
[MOV] 50:ir.TermBr; label %21|Target:label %21;Successors:[label %21];Metadata:[!dbg !192 !llvm.loop !193];
[MOV] 51:ir.Block; label %32|
[MOV] 52:ir.TermBr; |Target:label %34;Successors:[label %34];Metadata:[!dbg !195];
[MOV] 53:ir.Block; label %33|
[MOV] 54:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !196];
[MOV] 55:ir.TermBr; |Target:label %34;Successors:[label %34];Metadata:[];
[MOV] 56:ir.Block; label %34|
[MOV] 57:ir.TermBr; |Target:label %35;Successors:[label %35];Metadata:[!dbg !198];
[MOV] 58:ir.Block; label %35|
[MOV] 59:ir.TermRet; |X:<nil>;Metadata:[!dbg !199];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstCall
5:ir.InstStore,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstICmp
6:ir.InstCall,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,12:ir.Block
8:ir.TermCondBr,3,12:ir.Block
9:ir.Block,4,10:ir.InstStore
9:ir.Block,3,10:ir.InstStore
10:ir.InstStore,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstCall
12:ir.Block,3,13:ir.InstCall
12:ir.Block,4,14:ir.InstICmp
13:ir.InstCall,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,58:ir.Block
15:ir.TermCondBr,3,58:ir.Block
16:ir.Block,4,17:ir.InstCall
16:ir.Block,3,17:ir.InstCall
16:ir.Block,4,18:ir.InstCall
17:ir.InstCall,3,18:ir.InstCall
16:ir.Block,4,19:ir.InstBitCast
18:ir.InstCall,3,19:ir.InstBitCast
16:ir.Block,4,20:ir.InstCall
19:ir.InstBitCast,3,20:ir.InstCall
16:ir.Block,4,21:ir.InstLoad
20:ir.InstCall,3,21:ir.InstLoad
16:ir.Block,4,22:ir.InstICmp
21:ir.InstLoad,3,22:ir.InstICmp
22:ir.InstICmp,3,23:ir.TermCondBr
23:ir.TermCondBr,5,24:ir.Block
23:ir.TermCondBr,3,24:ir.Block
23:ir.TermCondBr,5,53:ir.Block
23:ir.TermCondBr,3,53:ir.Block
24:ir.Block,4,25:ir.InstLoad
24:ir.Block,3,25:ir.InstLoad
24:ir.Block,4,26:ir.InstICmp
25:ir.InstLoad,3,26:ir.InstICmp
26:ir.InstICmp,3,27:ir.TermCondBr
27:ir.TermCondBr,5,28:ir.Block
27:ir.TermCondBr,3,28:ir.Block
27:ir.TermCondBr,5,53:ir.Block
27:ir.TermCondBr,3,53:ir.Block
28:ir.Block,4,29:ir.InstLoad
28:ir.Block,3,29:ir.InstLoad
28:ir.Block,4,30:ir.InstSExt
29:ir.InstLoad,3,30:ir.InstSExt
28:ir.Block,4,31:ir.InstGetElementPtr
30:ir.InstSExt,3,31:ir.InstGetElementPtr
28:ir.Block,4,32:ir.InstStore
31:ir.InstGetElementPtr,3,32:ir.InstStore
28:ir.Block,4,33:ir.InstStore
32:ir.InstStore,3,33:ir.InstStore
33:ir.InstStore,3,34:ir.TermBr
34:ir.TermBr,5,35:ir.Block
34:ir.TermBr,3,35:ir.Block
35:ir.Block,4,36:ir.InstLoad
35:ir.Block,3,36:ir.InstLoad
35:ir.Block,4,37:ir.InstICmp
36:ir.InstLoad,3,37:ir.InstICmp
37:ir.InstICmp,3,38:ir.TermCondBr
38:ir.TermCondBr,5,39:ir.Block
38:ir.TermCondBr,3,39:ir.Block
38:ir.TermCondBr,5,51:ir.Block
38:ir.TermCondBr,3,51:ir.Block
39:ir.Block,4,40:ir.InstLoad
39:ir.Block,3,40:ir.InstLoad
39:ir.Block,4,41:ir.InstSExt
40:ir.InstLoad,3,41:ir.InstSExt
39:ir.Block,4,42:ir.InstGetElementPtr
41:ir.InstSExt,3,42:ir.InstGetElementPtr
39:ir.Block,4,43:ir.InstLoad
42:ir.InstGetElementPtr,3,43:ir.InstLoad
39:ir.Block,4,44:ir.InstCall
43:ir.InstLoad,3,44:ir.InstCall
44:ir.InstCall,3,45:ir.TermBr
45:ir.TermBr,5,46:ir.Block
45:ir.TermBr,3,46:ir.Block
46:ir.Block,4,47:ir.InstLoad
46:ir.Block,3,47:ir.InstLoad
46:ir.Block,4,48:ir.InstAdd
47:ir.InstLoad,3,48:ir.InstAdd
46:ir.Block,4,49:ir.InstStore
48:ir.InstAdd,3,49:ir.InstStore
49:ir.InstStore,3,50:ir.TermBr
50:ir.TermBr,5,35:ir.Block
50:ir.TermBr,3,35:ir.Block
51:ir.Block,3,52:ir.TermBr
52:ir.TermBr,5,56:ir.Block
52:ir.TermBr,3,56:ir.Block
53:ir.Block,4,54:ir.InstCall
53:ir.Block,3,54:ir.InstCall
54:ir.InstCall,3,55:ir.TermBr
55:ir.TermBr,5,56:ir.Block
55:ir.TermBr,3,56:ir.Block
56:ir.Block,3,57:ir.TermBr
57:ir.TermBr,5,58:ir.Block
57:ir.TermBr,3,58:ir.Block
58:ir.Block,3,59:ir.TermRet
36:ir.InstLoad,1,37:ir.InstICmp
37:ir.InstICmp,2,36:ir.InstLoad
43:ir.InstLoad,1,44:ir.InstCall
44:ir.InstCall,2,43:ir.InstLoad
25:ir.InstLoad,1,26:ir.InstICmp
26:ir.InstICmp,2,25:ir.InstLoad
19:ir.InstBitCast,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstBitCast
29:ir.InstLoad,1,30:ir.InstSExt
30:ir.InstSExt,2,29:ir.InstLoad
31:ir.InstGetElementPtr,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstGetElementPtr
42:ir.InstGetElementPtr,1,43:ir.InstLoad
43:ir.InstLoad,2,42:ir.InstGetElementPtr
6:ir.InstCall,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstCall
13:ir.InstCall,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstCall
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,1:ir.InstAlloca
21:ir.InstLoad,1,22:ir.InstICmp
22:ir.InstICmp,2,21:ir.InstLoad
2:ir.InstAlloca,1,33:ir.InstStore
33:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,36:ir.InstLoad
36:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,40:ir.InstLoad
40:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,47:ir.InstLoad
47:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,49:ir.InstStore
49:ir.InstStore,2,2:ir.InstAlloca
40:ir.InstLoad,1,41:ir.InstSExt
41:ir.InstSExt,2,40:ir.InstLoad
47:ir.InstLoad,1,48:ir.InstAdd
48:ir.InstAdd,2,47:ir.InstLoad
48:ir.InstAdd,1,49:ir.InstStore
49:ir.InstStore,2,48:ir.InstAdd
3:ir.InstAlloca,1,19:ir.InstBitCast
19:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,31:ir.InstGetElementPtr
31:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,42:ir.InstGetElementPtr
42:ir.InstGetElementPtr,2,3:ir.InstAlloca
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
23:ir.TermCondBr,2,22:ir.InstICmp
22:ir.InstICmp,1,23:ir.TermCondBr
27:ir.TermCondBr,2,26:ir.InstICmp
26:ir.InstICmp,1,27:ir.TermCondBr
38:ir.TermCondBr,2,37:ir.InstICmp
37:ir.InstICmp,1,38:ir.TermCondBr
