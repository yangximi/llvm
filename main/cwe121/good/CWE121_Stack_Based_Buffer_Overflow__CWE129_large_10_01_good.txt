? 63
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !91 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !92];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !93];
[MOV] 6:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 4};ElemType:i32;Src:i32* @globalTrue;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !94];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:ne;X:i32 %4;Y:i32 0;Typ:i1;Metadata:[!dbg !94];
[MOV] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %7;Successors:[label %6 label %7];Metadata:[!dbg !96];
[MOV] 9:ir.Block; label %6|
[MOV] 10:ir.InstStore; ;|Src:i32 10;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !97];
[MOV] 11:ir.TermBr; |Target:label %7;Successors:[label %7];Metadata:[!dbg !99];
[MOV] 12:ir.Block; label %7|
[MOV] 13:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 8};ElemType:i32;Src:i32* @globalFalse;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !100];
[MOV] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:ne;X:i32 %8;Y:i32 0;Typ:i1;Metadata:[!dbg !100];
[MOV] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %11;Successors:[label %10 label %11];Metadata:[!dbg !102];
[MOV] 16:ir.Block; label %10|
[MOV] 17:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !103];
[MOV] 18:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[!dbg !105];
[MOV] 19:ir.Block; label %11|
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !106 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !109];
[MOV] 21:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !110 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !111];
[MOV] 22:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 12};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !111];
[MOV] 23:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %12 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !111];
[MOV] 24:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 13};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !112];
[MOV] 25:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 14};Pred:sge;X:i32 %13;Y:i32 0;Typ:i1;Metadata:[!dbg !114];
[MOV] 26:ir.TermCondBr; ir.InstICmp|Cond:i1 %14;TargetTrue:label %15;TargetFalse:label %34;Successors:[label %15 label %34];Metadata:[!dbg !115];
[MOV] 27:ir.Block; label %15|
[MOV] 28:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 16};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !116];
[MOV] 29:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 17};Pred:slt;X:i32 %16;Y:i32 10;Typ:i1;Metadata:[!dbg !117];
[MOV] 30:ir.TermCondBr; ir.InstICmp|Cond:i1 %17;TargetTrue:label %18;TargetFalse:label %34;Successors:[label %18 label %34];Metadata:[!dbg !118];
[MOV] 31:ir.Block; label %18|
[MOV] 32:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 19};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !119];
[MOV] 33:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 20};From:i32 %19;To:i64;Metadata:[!dbg !121];
[MOV] 34:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 21};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %20];Typ:i32*;InBounds:true;Metadata:[!dbg !121];
[MOV] 35:ir.InstStore; ;|Src:i32 1;Dst:i32* %21;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !122];
[MOV] 36:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !123];
[MOV] 37:ir.TermBr; |Target:label %22;Successors:[label %22];Metadata:[!dbg !125];
[MOV] 38:ir.Block; label %22|
[MOV] 39:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 23};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !126];
[MOV] 40:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 24};Pred:slt;X:i32 %23;Y:i32 10;Typ:i1;Metadata:[!dbg !128];
[MOV] 41:ir.TermCondBr; ir.InstICmp|Cond:i1 %24;TargetTrue:label %25;TargetFalse:label %33;Successors:[label %25 label %33];Metadata:[!dbg !129];
[MOV] 42:ir.Block; label %25|
[MOV] 43:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 26};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !130];
[MOV] 44:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 27};From:i32 %26;To:i64;Metadata:[!dbg !132];
[MOV] 45:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 28};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %27];Typ:i32*;InBounds:true;Metadata:[!dbg !132];
[MOV] 46:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 29};ElemType:i32;Src:i32* %28;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !132];
[MOV] 47:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %29];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !133];
[MOV] 48:ir.TermBr; |Target:label %30;Successors:[label %30];Metadata:[!dbg !134];
[MOV] 49:ir.Block; label %30|
[MOV] 50:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 31};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !135];
[MOV] 51:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 32};X:i32 %31;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !135];
[MOV] 52:ir.InstStore; ;|Src:i32 %32;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !135];
[MOV] 53:ir.TermBr; label %22|Target:label %22;Successors:[label %22];Metadata:[!dbg !136 !llvm.loop !137];
[MOV] 54:ir.Block; label %33|
[MOV] 55:ir.TermBr; |Target:label %35;Successors:[label %35];Metadata:[!dbg !139];
[MOV] 56:ir.Block; label %34|
[MOV] 57:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !140];
[MOV] 58:ir.TermBr; |Target:label %35;Successors:[label %35];Metadata:[];
[MOV] 59:ir.Block; label %35|
[MOV] 60:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[];
[MOV] 61:ir.Block; label %36|
[MOV] 62:ir.TermRet; |X:<nil>;Metadata:[!dbg !142];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstLoad
5:ir.InstStore,3,6:ir.InstLoad
0:ir.Block,4,7:ir.InstICmp
6:ir.InstLoad,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,12:ir.Block
8:ir.TermCondBr,3,12:ir.Block
9:ir.Block,4,10:ir.InstStore
9:ir.Block,3,10:ir.InstStore
10:ir.InstStore,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstLoad
12:ir.Block,3,13:ir.InstLoad
12:ir.Block,4,14:ir.InstICmp
13:ir.InstLoad,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,19:ir.Block
15:ir.TermCondBr,3,19:ir.Block
16:ir.Block,4,17:ir.InstCall
16:ir.Block,3,17:ir.InstCall
17:ir.InstCall,3,18:ir.TermBr
18:ir.TermBr,5,61:ir.Block
18:ir.TermBr,3,61:ir.Block
19:ir.Block,4,20:ir.InstCall
19:ir.Block,3,20:ir.InstCall
19:ir.Block,4,21:ir.InstCall
20:ir.InstCall,3,21:ir.InstCall
19:ir.Block,4,22:ir.InstBitCast
21:ir.InstCall,3,22:ir.InstBitCast
19:ir.Block,4,23:ir.InstCall
22:ir.InstBitCast,3,23:ir.InstCall
19:ir.Block,4,24:ir.InstLoad
23:ir.InstCall,3,24:ir.InstLoad
19:ir.Block,4,25:ir.InstICmp
24:ir.InstLoad,3,25:ir.InstICmp
25:ir.InstICmp,3,26:ir.TermCondBr
26:ir.TermCondBr,5,27:ir.Block
26:ir.TermCondBr,3,27:ir.Block
26:ir.TermCondBr,5,56:ir.Block
26:ir.TermCondBr,3,56:ir.Block
27:ir.Block,4,28:ir.InstLoad
27:ir.Block,3,28:ir.InstLoad
27:ir.Block,4,29:ir.InstICmp
28:ir.InstLoad,3,29:ir.InstICmp
29:ir.InstICmp,3,30:ir.TermCondBr
30:ir.TermCondBr,5,31:ir.Block
30:ir.TermCondBr,3,31:ir.Block
30:ir.TermCondBr,5,56:ir.Block
30:ir.TermCondBr,3,56:ir.Block
31:ir.Block,4,32:ir.InstLoad
31:ir.Block,3,32:ir.InstLoad
31:ir.Block,4,33:ir.InstSExt
32:ir.InstLoad,3,33:ir.InstSExt
31:ir.Block,4,34:ir.InstGetElementPtr
33:ir.InstSExt,3,34:ir.InstGetElementPtr
31:ir.Block,4,35:ir.InstStore
34:ir.InstGetElementPtr,3,35:ir.InstStore
31:ir.Block,4,36:ir.InstStore
35:ir.InstStore,3,36:ir.InstStore
36:ir.InstStore,3,37:ir.TermBr
37:ir.TermBr,5,38:ir.Block
37:ir.TermBr,3,38:ir.Block
38:ir.Block,4,39:ir.InstLoad
38:ir.Block,3,39:ir.InstLoad
38:ir.Block,4,40:ir.InstICmp
39:ir.InstLoad,3,40:ir.InstICmp
40:ir.InstICmp,3,41:ir.TermCondBr
41:ir.TermCondBr,5,42:ir.Block
41:ir.TermCondBr,3,42:ir.Block
41:ir.TermCondBr,5,54:ir.Block
41:ir.TermCondBr,3,54:ir.Block
42:ir.Block,4,43:ir.InstLoad
42:ir.Block,3,43:ir.InstLoad
42:ir.Block,4,44:ir.InstSExt
43:ir.InstLoad,3,44:ir.InstSExt
42:ir.Block,4,45:ir.InstGetElementPtr
44:ir.InstSExt,3,45:ir.InstGetElementPtr
42:ir.Block,4,46:ir.InstLoad
45:ir.InstGetElementPtr,3,46:ir.InstLoad
42:ir.Block,4,47:ir.InstCall
46:ir.InstLoad,3,47:ir.InstCall
47:ir.InstCall,3,48:ir.TermBr
48:ir.TermBr,5,49:ir.Block
48:ir.TermBr,3,49:ir.Block
49:ir.Block,4,50:ir.InstLoad
49:ir.Block,3,50:ir.InstLoad
49:ir.Block,4,51:ir.InstAdd
50:ir.InstLoad,3,51:ir.InstAdd
49:ir.Block,4,52:ir.InstStore
51:ir.InstAdd,3,52:ir.InstStore
52:ir.InstStore,3,53:ir.TermBr
53:ir.TermBr,5,38:ir.Block
53:ir.TermBr,3,38:ir.Block
54:ir.Block,3,55:ir.TermBr
55:ir.TermBr,5,59:ir.Block
55:ir.TermBr,3,59:ir.Block
56:ir.Block,4,57:ir.InstCall
56:ir.Block,3,57:ir.InstCall
57:ir.InstCall,3,58:ir.TermBr
58:ir.TermBr,5,59:ir.Block
58:ir.TermBr,3,59:ir.Block
59:ir.Block,3,60:ir.TermBr
60:ir.TermBr,5,61:ir.Block
60:ir.TermBr,3,61:ir.Block
61:ir.Block,3,62:ir.TermRet
6:ir.InstLoad,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstLoad
22:ir.InstBitCast,1,23:ir.InstCall
23:ir.InstCall,2,22:ir.InstBitCast
28:ir.InstLoad,1,29:ir.InstICmp
29:ir.InstICmp,2,28:ir.InstLoad
32:ir.InstLoad,1,33:ir.InstSExt
33:ir.InstSExt,2,32:ir.InstLoad
43:ir.InstLoad,1,44:ir.InstSExt
44:ir.InstSExt,2,43:ir.InstLoad
13:ir.InstLoad,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstLoad
3:ir.InstAlloca,1,22:ir.InstBitCast
22:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,34:ir.InstGetElementPtr
34:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,45:ir.InstGetElementPtr
45:ir.InstGetElementPtr,2,3:ir.InstAlloca
51:ir.InstAdd,1,52:ir.InstStore
52:ir.InstStore,2,51:ir.InstAdd
45:ir.InstGetElementPtr,1,46:ir.InstLoad
46:ir.InstLoad,2,45:ir.InstGetElementPtr
46:ir.InstLoad,1,47:ir.InstCall
47:ir.InstCall,2,46:ir.InstLoad
50:ir.InstLoad,1,51:ir.InstAdd
51:ir.InstAdd,2,50:ir.InstLoad
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,24:ir.InstLoad
24:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,1:ir.InstAlloca
24:ir.InstLoad,1,25:ir.InstICmp
25:ir.InstICmp,2,24:ir.InstLoad
34:ir.InstGetElementPtr,1,35:ir.InstStore
35:ir.InstStore,2,34:ir.InstGetElementPtr
2:ir.InstAlloca,1,36:ir.InstStore
36:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,39:ir.InstLoad
39:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,43:ir.InstLoad
43:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,50:ir.InstLoad
50:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,52:ir.InstStore
52:ir.InstStore,2,2:ir.InstAlloca
39:ir.InstLoad,1,40:ir.InstICmp
40:ir.InstICmp,2,39:ir.InstLoad
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
26:ir.TermCondBr,2,25:ir.InstICmp
25:ir.InstICmp,1,26:ir.TermCondBr
30:ir.TermCondBr,2,29:ir.InstICmp
29:ir.InstICmp,1,30:ir.TermCondBr
41:ir.TermCondBr,2,40:ir.InstICmp
40:ir.InstICmp,1,41:ir.TermCondBr
