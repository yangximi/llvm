? 25
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 2};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !123 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !124];
[MOV] 5:ir.InstStore; ;|Src:i8* null;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !125];
[MOV] 6:ir.InstStore; ;|Src:i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0);Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !126];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %2 metadata !129 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !133];
[MOV] 8:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 4};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !134];
[MOV] 9:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 5};Callee:i64 (i8*)* @strlen;Args:[i8* %4];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !135];
[MOV] 10:ir.InstStore; ;|Src:i64 %5;Dst:i64* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !133];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %3 metadata !136 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !137];
[MOV] 12:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 6};ElemType:i64;Src:i64* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !138];
[MOV] 13:ir.InstAdd; ir.InstAdd ;ir.InstMul |LocalIdent:{ 7};X:i64 %6;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !138];
[MOV] 14:ir.InstMul; ir.InstMul ;|LocalIdent:{ 8};X:i64 %7;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !138];
[MOV] 15:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 9};ElemType:i8;NElems:i64 %8;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !138];
[MOV] 16:ir.InstStore; ;|Src:i8* %9;Dst:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !137];
[MOV] 17:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 10};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !139];
[MOV] 18:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 11};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !139];
[MOV] 19:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 12};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !139];
[MOV] 20:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 13};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %12 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !139];
[MOV] 21:ir.InstCall; ir.InstCall ;|LocalIdent:{ 14};Callee:i8* (i8*, i8*, i64)* @__strcpy_chk;Args:[i8* %10 i8* %11 i64 %13];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#4];OperandBundles:[];Metadata:[!dbg !139];
[MOV] 22:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 15};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !140];
[MOV] 23:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %15];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !141];
[MOV] 24:ir.TermRet; |X:<nil>;Metadata:[!dbg !142];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstStore
5:ir.InstStore,3,6:ir.InstStore
0:ir.Block,4,7:ir.InstCall
6:ir.InstStore,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstLoad
7:ir.InstCall,3,8:ir.InstLoad
0:ir.Block,4,9:ir.InstCall
8:ir.InstLoad,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstStore
9:ir.InstCall,3,10:ir.InstStore
0:ir.Block,4,11:ir.InstCall
10:ir.InstStore,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstLoad
11:ir.InstCall,3,12:ir.InstLoad
0:ir.Block,4,13:ir.InstAdd
12:ir.InstLoad,3,13:ir.InstAdd
0:ir.Block,4,14:ir.InstMul
13:ir.InstAdd,3,14:ir.InstMul
0:ir.Block,4,15:ir.InstAlloca
14:ir.InstMul,3,15:ir.InstAlloca
0:ir.Block,4,16:ir.InstStore
15:ir.InstAlloca,3,16:ir.InstStore
0:ir.Block,4,17:ir.InstLoad
16:ir.InstStore,3,17:ir.InstLoad
0:ir.Block,4,18:ir.InstLoad
17:ir.InstLoad,3,18:ir.InstLoad
0:ir.Block,4,19:ir.InstLoad
18:ir.InstLoad,3,19:ir.InstLoad
0:ir.Block,4,20:ir.InstCall
19:ir.InstLoad,3,20:ir.InstCall
0:ir.Block,4,21:ir.InstCall
20:ir.InstCall,3,21:ir.InstCall
0:ir.Block,4,22:ir.InstLoad
21:ir.InstCall,3,22:ir.InstLoad
0:ir.Block,4,23:ir.InstCall
22:ir.InstLoad,3,23:ir.InstCall
23:ir.InstCall,3,24:ir.TermRet
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,6:ir.InstStore
6:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,8:ir.InstLoad
8:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,18:ir.InstLoad
18:ir.InstLoad,2,1:ir.InstAlloca
8:ir.InstLoad,1,9:ir.InstCall
9:ir.InstCall,2,8:ir.InstLoad
15:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,15:ir.InstAlloca
19:ir.InstLoad,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstLoad
22:ir.InstLoad,1,23:ir.InstCall
23:ir.InstCall,2,22:ir.InstLoad
20:ir.InstCall,1,21:ir.InstCall
21:ir.InstCall,2,20:ir.InstCall
9:ir.InstCall,1,10:ir.InstStore
10:ir.InstStore,2,9:ir.InstCall
2:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,12:ir.InstLoad
12:ir.InstLoad,2,2:ir.InstAlloca
12:ir.InstLoad,1,13:ir.InstAdd
13:ir.InstAdd,2,12:ir.InstLoad
13:ir.InstAdd,1,14:ir.InstMul
14:ir.InstMul,2,13:ir.InstAdd
3:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,17:ir.InstLoad
17:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,22:ir.InstLoad
22:ir.InstLoad,2,3:ir.InstAlloca
17:ir.InstLoad,1,21:ir.InstCall
21:ir.InstCall,2,17:ir.InstLoad
18:ir.InstLoad,1,21:ir.InstCall
21:ir.InstCall,2,18:ir.InstLoad
