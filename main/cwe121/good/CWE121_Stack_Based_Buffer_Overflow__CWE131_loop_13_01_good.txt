? 48
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstBitCast ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr |LocalIdent:{ 2};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 3};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %1 metadata !86 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !87];
[MOV] 5:ir.InstStore; ;|Src:i32* null;Dst:i32** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !88];
[MOV] 6:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 4};ElemType:i32;Src:i32* @GLOBAL_CONST_FIVE;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !89];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:ne;X:i32 %4;Y:i32 5;Typ:i1;Metadata:[!dbg !91];
[MOV] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %7;Successors:[label %6 label %7];Metadata:[!dbg !92];
[MOV] 9:ir.Block; label %6|
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !93];
[MOV] 11:ir.TermBr; |Target:label %10;Successors:[label %10];Metadata:[!dbg !95];
[MOV] 12:ir.Block; label %7|
[MOV] 13:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ;ir.InstBitCast |LocalIdent:{ 8};ElemType:i8;NElems:i64 40;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !96];
[MOV] 14:ir.InstBitCast; ir.InstBitCast ;ir.InstStore |LocalIdent:{ 9};From:i8* %8;To:i32*;Metadata:[!dbg !98];
[MOV] 15:ir.InstStore; ;|Src:i32* %9;Dst:i32** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !99];
[MOV] 16:ir.TermBr; |Target:label %10;Successors:[label %10];Metadata:[];
[MOV] 17:ir.Block; label %10|
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %2 metadata !100 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !102];
[MOV] 19:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 11};From:[10 x i32]* %2;To:i8*;Metadata:[!dbg !102];
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %11 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !102];
[MOV] 21:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %3 metadata !103 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !104];
[MOV] 22:ir.InstStore; ;|Src:i64 0;Dst:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !105];
[MOV] 23:ir.TermBr; |Target:label %12;Successors:[label %12];Metadata:[!dbg !107];
[MOV] 24:ir.Block; label %12|
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 13};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !108];
[MOV] 26:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 14};Pred:ult;X:i64 %13;Y:i64 10;Typ:i1;Metadata:[!dbg !110];
[MOV] 27:ir.TermCondBr; ir.InstICmp|Cond:i1 %14;TargetTrue:label %15;TargetFalse:label %25;Successors:[label %15 label %25];Metadata:[!dbg !111];
[MOV] 28:ir.Block; label %15|
[MOV] 29:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 16};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !112];
[MOV] 30:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 17};ElemType:[10 x i32];Src:[10 x i32]* %2;Indices:[i64 0 i64 %16];Typ:i32*;InBounds:true;Metadata:[!dbg !114];
[MOV] 31:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 18};ElemType:i32;Src:i32* %17;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !114];
[MOV] 32:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 19};ElemType:i32*;Src:i32** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !115];
[MOV] 33:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 20};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !116];
[MOV] 34:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 21};ElemType:i32;Src:i32* %19;Indices:[i64 %20];Typ:i32*;InBounds:true;Metadata:[!dbg !115];
[MOV] 35:ir.InstStore; ;|Src:i32 %18;Dst:i32* %21;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !117];
[MOV] 36:ir.TermBr; |Target:label %22;Successors:[label %22];Metadata:[!dbg !118];
[MOV] 37:ir.Block; label %22|
[MOV] 38:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 23};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !119];
[MOV] 39:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 24};X:i64 %23;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !119];
[MOV] 40:ir.InstStore; ;|Src:i64 %24;Dst:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !119];
[MOV] 41:ir.TermBr; label %12|Target:label %12;Successors:[label %12];Metadata:[!dbg !120 !llvm.loop !121];
[MOV] 42:ir.Block; label %25|
[MOV] 43:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 26};ElemType:i32*;Src:i32** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !123];
[MOV] 44:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 27};ElemType:i32;Src:i32* %26;Indices:[i64 0];Typ:i32*;InBounds:true;Metadata:[!dbg !123];
[MOV] 45:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 28};ElemType:i32;Src:i32* %27;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !123];
[MOV] 46:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %28];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !124];
[MOV] 47:ir.TermRet; |X:<nil>;Metadata:[!dbg !125];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstLoad
5:ir.InstStore,3,6:ir.InstLoad
0:ir.Block,4,7:ir.InstICmp
6:ir.InstLoad,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,12:ir.Block
8:ir.TermCondBr,3,12:ir.Block
9:ir.Block,4,10:ir.InstCall
9:ir.Block,3,10:ir.InstCall
10:ir.InstCall,3,11:ir.TermBr
11:ir.TermBr,5,17:ir.Block
11:ir.TermBr,3,17:ir.Block
12:ir.Block,4,13:ir.InstAlloca
12:ir.Block,3,13:ir.InstAlloca
12:ir.Block,4,14:ir.InstBitCast
13:ir.InstAlloca,3,14:ir.InstBitCast
12:ir.Block,4,15:ir.InstStore
14:ir.InstBitCast,3,15:ir.InstStore
15:ir.InstStore,3,16:ir.TermBr
16:ir.TermBr,5,17:ir.Block
16:ir.TermBr,3,17:ir.Block
17:ir.Block,4,18:ir.InstCall
17:ir.Block,3,18:ir.InstCall
17:ir.Block,4,19:ir.InstBitCast
18:ir.InstCall,3,19:ir.InstBitCast
17:ir.Block,4,20:ir.InstCall
19:ir.InstBitCast,3,20:ir.InstCall
17:ir.Block,4,21:ir.InstCall
20:ir.InstCall,3,21:ir.InstCall
17:ir.Block,4,22:ir.InstStore
21:ir.InstCall,3,22:ir.InstStore
22:ir.InstStore,3,23:ir.TermBr
23:ir.TermBr,5,24:ir.Block
23:ir.TermBr,3,24:ir.Block
24:ir.Block,4,25:ir.InstLoad
24:ir.Block,3,25:ir.InstLoad
24:ir.Block,4,26:ir.InstICmp
25:ir.InstLoad,3,26:ir.InstICmp
26:ir.InstICmp,3,27:ir.TermCondBr
27:ir.TermCondBr,5,28:ir.Block
27:ir.TermCondBr,3,28:ir.Block
27:ir.TermCondBr,5,42:ir.Block
27:ir.TermCondBr,3,42:ir.Block
28:ir.Block,4,29:ir.InstLoad
28:ir.Block,3,29:ir.InstLoad
28:ir.Block,4,30:ir.InstGetElementPtr
29:ir.InstLoad,3,30:ir.InstGetElementPtr
28:ir.Block,4,31:ir.InstLoad
30:ir.InstGetElementPtr,3,31:ir.InstLoad
28:ir.Block,4,32:ir.InstLoad
31:ir.InstLoad,3,32:ir.InstLoad
28:ir.Block,4,33:ir.InstLoad
32:ir.InstLoad,3,33:ir.InstLoad
28:ir.Block,4,34:ir.InstGetElementPtr
33:ir.InstLoad,3,34:ir.InstGetElementPtr
28:ir.Block,4,35:ir.InstStore
34:ir.InstGetElementPtr,3,35:ir.InstStore
35:ir.InstStore,3,36:ir.TermBr
36:ir.TermBr,5,37:ir.Block
36:ir.TermBr,3,37:ir.Block
37:ir.Block,4,38:ir.InstLoad
37:ir.Block,3,38:ir.InstLoad
37:ir.Block,4,39:ir.InstAdd
38:ir.InstLoad,3,39:ir.InstAdd
37:ir.Block,4,40:ir.InstStore
39:ir.InstAdd,3,40:ir.InstStore
40:ir.InstStore,3,41:ir.TermBr
41:ir.TermBr,5,24:ir.Block
41:ir.TermBr,3,24:ir.Block
42:ir.Block,4,43:ir.InstLoad
42:ir.Block,3,43:ir.InstLoad
42:ir.Block,4,44:ir.InstGetElementPtr
43:ir.InstLoad,3,44:ir.InstGetElementPtr
42:ir.Block,4,45:ir.InstLoad
44:ir.InstGetElementPtr,3,45:ir.InstLoad
42:ir.Block,4,46:ir.InstCall
45:ir.InstLoad,3,46:ir.InstCall
46:ir.InstCall,3,47:ir.TermRet
31:ir.InstLoad,1,35:ir.InstStore
35:ir.InstStore,2,31:ir.InstLoad
34:ir.InstGetElementPtr,1,35:ir.InstStore
35:ir.InstStore,2,34:ir.InstGetElementPtr
45:ir.InstLoad,1,46:ir.InstCall
46:ir.InstCall,2,45:ir.InstLoad
6:ir.InstLoad,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstLoad
19:ir.InstBitCast,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstBitCast
43:ir.InstLoad,1,44:ir.InstGetElementPtr
44:ir.InstGetElementPtr,2,43:ir.InstLoad
44:ir.InstGetElementPtr,1,45:ir.InstLoad
45:ir.InstLoad,2,44:ir.InstGetElementPtr
13:ir.InstAlloca,1,14:ir.InstBitCast
14:ir.InstBitCast,2,13:ir.InstAlloca
14:ir.InstBitCast,1,15:ir.InstStore
15:ir.InstStore,2,14:ir.InstBitCast
2:ir.InstAlloca,1,19:ir.InstBitCast
19:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,30:ir.InstGetElementPtr
30:ir.InstGetElementPtr,2,2:ir.InstAlloca
3:ir.InstAlloca,1,22:ir.InstStore
22:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,38:ir.InstLoad
38:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,40:ir.InstStore
40:ir.InstStore,2,3:ir.InstAlloca
25:ir.InstLoad,1,26:ir.InstICmp
26:ir.InstICmp,2,25:ir.InstLoad
30:ir.InstGetElementPtr,1,31:ir.InstLoad
31:ir.InstLoad,2,30:ir.InstGetElementPtr
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,15:ir.InstStore
15:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,43:ir.InstLoad
43:ir.InstLoad,2,1:ir.InstAlloca
38:ir.InstLoad,1,39:ir.InstAdd
39:ir.InstAdd,2,38:ir.InstLoad
39:ir.InstAdd,1,40:ir.InstStore
40:ir.InstStore,2,39:ir.InstAdd
32:ir.InstLoad,1,34:ir.InstGetElementPtr
34:ir.InstGetElementPtr,2,32:ir.InstLoad
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
27:ir.TermCondBr,2,26:ir.InstICmp
26:ir.InstICmp,1,27:ir.TermCondBr
