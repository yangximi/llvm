? 47
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstBitCast ;ir.InstStore |LocalIdent:{ 2};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstBitCast ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[100 x i32];NElems:<nil>;Typ:[100 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 5};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %1 metadata !89 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !90];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %2 metadata !91 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !92];
[MOV] 8:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ;ir.InstBitCast |LocalIdent:{ 6};ElemType:i8;NElems:i64 200;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !93];
[MOV] 9:ir.InstBitCast; ir.InstBitCast ;ir.InstStore |LocalIdent:{ 7};From:i8* %6;To:i32*;Metadata:[!dbg !94];
[MOV] 10:ir.InstStore; ;|Src:i32* %7;Dst:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !92];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %3 metadata !95 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !96];
[MOV] 12:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ;ir.InstBitCast |LocalIdent:{ 8};ElemType:i8;NElems:i64 400;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !97];
[MOV] 13:ir.InstBitCast; ir.InstBitCast ;ir.InstStore |LocalIdent:{ 9};From:i8* %8;To:i32*;Metadata:[!dbg !98];
[MOV] 14:ir.InstStore; ;|Src:i32* %9;Dst:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !96];
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 10};ElemType:i32*;Src:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !99];
[MOV] 16:ir.InstStore; ;|Src:i32* %10;Dst:i32** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !102];
[MOV] 17:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i32]* %4 metadata !103 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !105];
[MOV] 18:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 11};From:[100 x i32]* %4;To:i8*;Metadata:[!dbg !105];
[MOV] 19:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %11 i8 0 i64 400 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !105];
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %5 metadata !106 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !108];
[MOV] 21:ir.InstStore; ;|Src:i64 0;Dst:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !109];
[MOV] 22:ir.TermBr; |Target:label %12;Successors:[label %12];Metadata:[!dbg !111];
[MOV] 23:ir.Block; label %12|
[MOV] 24:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 13};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !112];
[MOV] 25:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 14};Pred:ult;X:i64 %13;Y:i64 100;Typ:i1;Metadata:[!dbg !114];
[MOV] 26:ir.TermCondBr; ir.InstICmp|Cond:i1 %14;TargetTrue:label %15;TargetFalse:label %25;Successors:[label %15 label %25];Metadata:[!dbg !115];
[MOV] 27:ir.Block; label %15|
[MOV] 28:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 16};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !116];
[MOV] 29:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 17};ElemType:[100 x i32];Src:[100 x i32]* %4;Indices:[i64 0 i64 %16];Typ:i32*;InBounds:true;Metadata:[!dbg !118];
[MOV] 30:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 18};ElemType:i32;Src:i32* %17;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !118];
[MOV] 31:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 19};ElemType:i32*;Src:i32** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !119];
[MOV] 32:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 20};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !120];
[MOV] 33:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 21};ElemType:i32;Src:i32* %19;Indices:[i64 %20];Typ:i32*;InBounds:true;Metadata:[!dbg !119];
[MOV] 34:ir.InstStore; ;|Src:i32 %18;Dst:i32* %21;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !121];
[MOV] 35:ir.TermBr; |Target:label %22;Successors:[label %22];Metadata:[!dbg !122];
[MOV] 36:ir.Block; label %22|
[MOV] 37:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 23};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !123];
[MOV] 38:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 24};X:i64 %23;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !123];
[MOV] 39:ir.InstStore; ;|Src:i64 %24;Dst:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !123];
[MOV] 40:ir.TermBr; label %12|Target:label %12;Successors:[label %12];Metadata:[!dbg !124 !llvm.loop !125];
[MOV] 41:ir.Block; label %25|
[MOV] 42:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 26};ElemType:i32*;Src:i32** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !127];
[MOV] 43:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 27};ElemType:i32;Src:i32* %26;Indices:[i64 0];Typ:i32*;InBounds:true;Metadata:[!dbg !127];
[MOV] 44:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 28};ElemType:i32;Src:i32* %27;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !127];
[MOV] 45:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %28];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !128];
[MOV] 46:ir.TermRet; |X:<nil>;Metadata:[!dbg !129];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstAlloca
7:ir.InstCall,3,8:ir.InstAlloca
0:ir.Block,4,9:ir.InstBitCast
8:ir.InstAlloca,3,9:ir.InstBitCast
0:ir.Block,4,10:ir.InstStore
9:ir.InstBitCast,3,10:ir.InstStore
0:ir.Block,4,11:ir.InstCall
10:ir.InstStore,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstAlloca
11:ir.InstCall,3,12:ir.InstAlloca
0:ir.Block,4,13:ir.InstBitCast
12:ir.InstAlloca,3,13:ir.InstBitCast
0:ir.Block,4,14:ir.InstStore
13:ir.InstBitCast,3,14:ir.InstStore
0:ir.Block,4,15:ir.InstLoad
14:ir.InstStore,3,15:ir.InstLoad
0:ir.Block,4,16:ir.InstStore
15:ir.InstLoad,3,16:ir.InstStore
0:ir.Block,4,17:ir.InstCall
16:ir.InstStore,3,17:ir.InstCall
0:ir.Block,4,18:ir.InstBitCast
17:ir.InstCall,3,18:ir.InstBitCast
0:ir.Block,4,19:ir.InstCall
18:ir.InstBitCast,3,19:ir.InstCall
0:ir.Block,4,20:ir.InstCall
19:ir.InstCall,3,20:ir.InstCall
0:ir.Block,4,21:ir.InstStore
20:ir.InstCall,3,21:ir.InstStore
21:ir.InstStore,3,22:ir.TermBr
22:ir.TermBr,5,23:ir.Block
22:ir.TermBr,3,23:ir.Block
23:ir.Block,4,24:ir.InstLoad
23:ir.Block,3,24:ir.InstLoad
23:ir.Block,4,25:ir.InstICmp
24:ir.InstLoad,3,25:ir.InstICmp
25:ir.InstICmp,3,26:ir.TermCondBr
26:ir.TermCondBr,5,27:ir.Block
26:ir.TermCondBr,3,27:ir.Block
26:ir.TermCondBr,5,41:ir.Block
26:ir.TermCondBr,3,41:ir.Block
27:ir.Block,4,28:ir.InstLoad
27:ir.Block,3,28:ir.InstLoad
27:ir.Block,4,29:ir.InstGetElementPtr
28:ir.InstLoad,3,29:ir.InstGetElementPtr
27:ir.Block,4,30:ir.InstLoad
29:ir.InstGetElementPtr,3,30:ir.InstLoad
27:ir.Block,4,31:ir.InstLoad
30:ir.InstLoad,3,31:ir.InstLoad
27:ir.Block,4,32:ir.InstLoad
31:ir.InstLoad,3,32:ir.InstLoad
27:ir.Block,4,33:ir.InstGetElementPtr
32:ir.InstLoad,3,33:ir.InstGetElementPtr
27:ir.Block,4,34:ir.InstStore
33:ir.InstGetElementPtr,3,34:ir.InstStore
34:ir.InstStore,3,35:ir.TermBr
35:ir.TermBr,5,36:ir.Block
35:ir.TermBr,3,36:ir.Block
36:ir.Block,4,37:ir.InstLoad
36:ir.Block,3,37:ir.InstLoad
36:ir.Block,4,38:ir.InstAdd
37:ir.InstLoad,3,38:ir.InstAdd
36:ir.Block,4,39:ir.InstStore
38:ir.InstAdd,3,39:ir.InstStore
39:ir.InstStore,3,40:ir.TermBr
40:ir.TermBr,5,23:ir.Block
40:ir.TermBr,3,23:ir.Block
41:ir.Block,4,42:ir.InstLoad
41:ir.Block,3,42:ir.InstLoad
41:ir.Block,4,43:ir.InstGetElementPtr
42:ir.InstLoad,3,43:ir.InstGetElementPtr
41:ir.Block,4,44:ir.InstLoad
43:ir.InstGetElementPtr,3,44:ir.InstLoad
41:ir.Block,4,45:ir.InstCall
44:ir.InstLoad,3,45:ir.InstCall
45:ir.InstCall,3,46:ir.TermRet
8:ir.InstAlloca,1,9:ir.InstBitCast
9:ir.InstBitCast,2,8:ir.InstAlloca
15:ir.InstLoad,1,16:ir.InstStore
16:ir.InstStore,2,15:ir.InstLoad
18:ir.InstBitCast,1,19:ir.InstCall
19:ir.InstCall,2,18:ir.InstBitCast
30:ir.InstLoad,1,34:ir.InstStore
34:ir.InstStore,2,30:ir.InstLoad
33:ir.InstGetElementPtr,1,34:ir.InstStore
34:ir.InstStore,2,33:ir.InstGetElementPtr
38:ir.InstAdd,1,39:ir.InstStore
39:ir.InstStore,2,38:ir.InstAdd
43:ir.InstGetElementPtr,1,44:ir.InstLoad
44:ir.InstLoad,2,43:ir.InstGetElementPtr
44:ir.InstLoad,1,45:ir.InstCall
45:ir.InstCall,2,44:ir.InstLoad
2:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,2:ir.InstAlloca
13:ir.InstBitCast,1,14:ir.InstStore
14:ir.InstStore,2,13:ir.InstBitCast
5:ir.InstAlloca,1,21:ir.InstStore
21:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,24:ir.InstLoad
24:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,39:ir.InstStore
39:ir.InstStore,2,5:ir.InstAlloca
24:ir.InstLoad,1,25:ir.InstICmp
25:ir.InstICmp,2,24:ir.InstLoad
4:ir.InstAlloca,1,18:ir.InstBitCast
18:ir.InstBitCast,2,4:ir.InstAlloca
4:ir.InstAlloca,1,29:ir.InstGetElementPtr
29:ir.InstGetElementPtr,2,4:ir.InstAlloca
29:ir.InstGetElementPtr,1,30:ir.InstLoad
30:ir.InstLoad,2,29:ir.InstGetElementPtr
31:ir.InstLoad,1,33:ir.InstGetElementPtr
33:ir.InstGetElementPtr,2,31:ir.InstLoad
37:ir.InstLoad,1,38:ir.InstAdd
38:ir.InstAdd,2,37:ir.InstLoad
42:ir.InstLoad,1,43:ir.InstGetElementPtr
43:ir.InstGetElementPtr,2,42:ir.InstLoad
9:ir.InstBitCast,1,10:ir.InstStore
10:ir.InstStore,2,9:ir.InstBitCast
12:ir.InstAlloca,1,13:ir.InstBitCast
13:ir.InstBitCast,2,12:ir.InstAlloca
3:ir.InstAlloca,1,14:ir.InstStore
14:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,3:ir.InstAlloca
1:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,31:ir.InstLoad
31:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,42:ir.InstLoad
42:ir.InstLoad,2,1:ir.InstAlloca
26:ir.TermCondBr,2,25:ir.InstICmp
25:ir.InstICmp,1,26:ir.TermCondBr
