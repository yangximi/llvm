? 38
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstGetElementPtr ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 2};ElemType:[100 x i8];NElems:<nil>;Typ:[100 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ir.InstStore ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[50 x i8];NElems:<nil>;Typ:[50 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !68 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !69];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i8]* %2 metadata !70 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !71];
[MOV] 6:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstStore |LocalIdent:{ 4};ElemType:[100 x i8];Src:[100 x i8]* %2;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !72];
[MOV] 7:ir.InstStore; ;|Src:i8* %4;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !73];
[MOV] 8:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 5};Callee:i32 (...)* @globalReturnsFalse;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !74];
[MOV] 9:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 6};Pred:ne;X:i32 %5;Y:i32 0;Typ:i1;Metadata:[!dbg !74];
[MOV] 10:ir.TermCondBr; ir.InstICmp|Cond:i1 %6;TargetTrue:label %7;TargetFalse:label %8;Successors:[label %7 label %8];Metadata:[!dbg !76];
[MOV] 11:ir.Block; label %7|
[MOV] 12:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !77];
[MOV] 13:ir.TermBr; |Target:label %15;Successors:[label %15];Metadata:[!dbg !79];
[MOV] 14:ir.Block; label %8|
[MOV] 15:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 9};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !80];
[MOV] 16:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 10};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !80];
[MOV] 17:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 11};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %10 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !80];
[MOV] 18:ir.InstCall; ir.InstCall ;|LocalIdent:{ 12};Callee:i8* (i8*, i32, i64, i64)* @__memset_chk;Args:[i8* %9 i32 65 i64 49 i64 %11];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !80];
[MOV] 19:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 13};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !82];
[MOV] 20:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 14};ElemType:i8;Src:i8* %13;Indices:[i64 49];Typ:i8*;InBounds:true;Metadata:[!dbg !82];
[MOV] 21:ir.InstStore; ;|Src:i8 0;Dst:i8* %14;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !83];
[MOV] 22:ir.TermBr; |Target:label %15;Successors:[label %15];Metadata:[];
[MOV] 23:ir.Block; label %15|
[MOV] 24:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [50 x i8]* %3 metadata !84 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !86];
[MOV] 25:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 16};From:[50 x i8]* %3;To:i8*;Metadata:[!dbg !86];
[MOV] 26:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %16 i8 0 i64 50 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !86];
[MOV] 27:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 17};ElemType:[50 x i8];Src:[50 x i8]* %3;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !87];
[MOV] 28:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 18};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !87];
[MOV] 29:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 19};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !87];
[MOV] 30:ir.InstCall; ir.InstCall ;ir.InstMul |LocalIdent:{ 20};Callee:i64 (i8*)* @strlen;Args:[i8* %19];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !87];
[MOV] 31:ir.InstMul; ir.InstMul ir.InstCall ;ir.InstCall |LocalIdent:{ 21};X:i64 %20;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !87];
[MOV] 32:ir.InstCall; ir.InstCall ;|LocalIdent:{ 22};Callee:i8* (i8*, i8*, i64, i64)* @__memcpy_chk;Args:[i8* %17 i8* %18 i64 %21 i64 50];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !87];
[MOV] 33:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 23};ElemType:[50 x i8];Src:[50 x i8]* %3;Indices:[i64 0 i64 49];Typ:i8*;InBounds:true;Metadata:[!dbg !88];
[MOV] 34:ir.InstStore; ;|Src:i8 0;Dst:i8* %23;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !89];
[MOV] 35:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 24};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !90];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %24];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !91];
[MOV] 37:ir.TermRet; |X:<nil>;Metadata:[!dbg !92];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstCall
4:ir.InstCall,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstGetElementPtr
5:ir.InstCall,3,6:ir.InstGetElementPtr
0:ir.Block,4,7:ir.InstStore
6:ir.InstGetElementPtr,3,7:ir.InstStore
0:ir.Block,4,8:ir.InstCall
7:ir.InstStore,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstICmp
8:ir.InstCall,3,9:ir.InstICmp
9:ir.InstICmp,3,10:ir.TermCondBr
10:ir.TermCondBr,5,11:ir.Block
10:ir.TermCondBr,3,11:ir.Block
10:ir.TermCondBr,5,14:ir.Block
10:ir.TermCondBr,3,14:ir.Block
11:ir.Block,4,12:ir.InstCall
11:ir.Block,3,12:ir.InstCall
12:ir.InstCall,3,13:ir.TermBr
13:ir.TermBr,5,23:ir.Block
13:ir.TermBr,3,23:ir.Block
14:ir.Block,4,15:ir.InstLoad
14:ir.Block,3,15:ir.InstLoad
14:ir.Block,4,16:ir.InstLoad
15:ir.InstLoad,3,16:ir.InstLoad
14:ir.Block,4,17:ir.InstCall
16:ir.InstLoad,3,17:ir.InstCall
14:ir.Block,4,18:ir.InstCall
17:ir.InstCall,3,18:ir.InstCall
14:ir.Block,4,19:ir.InstLoad
18:ir.InstCall,3,19:ir.InstLoad
14:ir.Block,4,20:ir.InstGetElementPtr
19:ir.InstLoad,3,20:ir.InstGetElementPtr
14:ir.Block,4,21:ir.InstStore
20:ir.InstGetElementPtr,3,21:ir.InstStore
21:ir.InstStore,3,22:ir.TermBr
22:ir.TermBr,5,23:ir.Block
22:ir.TermBr,3,23:ir.Block
23:ir.Block,4,24:ir.InstCall
23:ir.Block,3,24:ir.InstCall
23:ir.Block,4,25:ir.InstBitCast
24:ir.InstCall,3,25:ir.InstBitCast
23:ir.Block,4,26:ir.InstCall
25:ir.InstBitCast,3,26:ir.InstCall
23:ir.Block,4,27:ir.InstGetElementPtr
26:ir.InstCall,3,27:ir.InstGetElementPtr
23:ir.Block,4,28:ir.InstLoad
27:ir.InstGetElementPtr,3,28:ir.InstLoad
23:ir.Block,4,29:ir.InstLoad
28:ir.InstLoad,3,29:ir.InstLoad
23:ir.Block,4,30:ir.InstCall
29:ir.InstLoad,3,30:ir.InstCall
23:ir.Block,4,31:ir.InstMul
30:ir.InstCall,3,31:ir.InstMul
23:ir.Block,4,32:ir.InstCall
31:ir.InstMul,3,32:ir.InstCall
23:ir.Block,4,33:ir.InstGetElementPtr
32:ir.InstCall,3,33:ir.InstGetElementPtr
23:ir.Block,4,34:ir.InstStore
33:ir.InstGetElementPtr,3,34:ir.InstStore
23:ir.Block,4,35:ir.InstLoad
34:ir.InstStore,3,35:ir.InstLoad
23:ir.Block,4,36:ir.InstCall
35:ir.InstLoad,3,36:ir.InstCall
36:ir.InstCall,3,37:ir.TermRet
2:ir.InstAlloca,1,6:ir.InstGetElementPtr
6:ir.InstGetElementPtr,2,2:ir.InstAlloca
27:ir.InstGetElementPtr,1,32:ir.InstCall
32:ir.InstCall,2,27:ir.InstGetElementPtr
31:ir.InstMul,1,32:ir.InstCall
32:ir.InstCall,2,31:ir.InstMul
8:ir.InstCall,1,9:ir.InstICmp
9:ir.InstICmp,2,8:ir.InstCall
16:ir.InstLoad,1,17:ir.InstCall
17:ir.InstCall,2,16:ir.InstLoad
3:ir.InstAlloca,1,25:ir.InstBitCast
25:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,27:ir.InstGetElementPtr
27:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,33:ir.InstGetElementPtr
33:ir.InstGetElementPtr,2,3:ir.InstAlloca
29:ir.InstLoad,1,30:ir.InstCall
30:ir.InstCall,2,29:ir.InstLoad
30:ir.InstCall,1,31:ir.InstMul
31:ir.InstMul,2,30:ir.InstCall
28:ir.InstLoad,1,32:ir.InstCall
32:ir.InstCall,2,28:ir.InstLoad
6:ir.InstGetElementPtr,1,7:ir.InstStore
7:ir.InstStore,2,6:ir.InstGetElementPtr
17:ir.InstCall,1,18:ir.InstCall
18:ir.InstCall,2,17:ir.InstCall
19:ir.InstLoad,1,20:ir.InstGetElementPtr
20:ir.InstGetElementPtr,2,19:ir.InstLoad
20:ir.InstGetElementPtr,1,21:ir.InstStore
21:ir.InstStore,2,20:ir.InstGetElementPtr
33:ir.InstGetElementPtr,1,34:ir.InstStore
34:ir.InstStore,2,33:ir.InstGetElementPtr
1:ir.InstAlloca,1,7:ir.InstStore
7:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,16:ir.InstLoad
16:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,1:ir.InstAlloca
15:ir.InstLoad,1,18:ir.InstCall
18:ir.InstCall,2,15:ir.InstLoad
25:ir.InstBitCast,1,26:ir.InstCall
26:ir.InstCall,2,25:ir.InstBitCast
35:ir.InstLoad,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstLoad
10:ir.TermCondBr,2,9:ir.InstICmp
9:ir.InstICmp,1,10:ir.TermCondBr
