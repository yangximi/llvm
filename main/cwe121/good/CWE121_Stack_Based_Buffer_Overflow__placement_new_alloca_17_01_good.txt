? 58
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 4};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ;ir.InstStore |LocalIdent:{ 5};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstBitCast ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 6};ElemType:%class.OneIntClass*;NElems:<nil>;Typ:%class.OneIntClass**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !284 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !285];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !286 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !287];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %3 metadata !288 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !289];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %4 metadata !290 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !291];
[MOV] 11:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 7};ElemType:i8;NElems:i64 4;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !292];
[MOV] 12:ir.InstStore; ;|Src:i8* %7;Dst:i8** %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !291];
[MOV] 13:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %5 metadata !293 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !294];
[MOV] 14:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 8};ElemType:i8;NElems:i64 8;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !295];
[MOV] 15:ir.InstStore; ;|Src:i8* %8;Dst:i8** %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !294];
[MOV] 16:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !296];
[MOV] 17:ir.TermBr; |Target:label %9;Successors:[label %9];Metadata:[!dbg !298];
[MOV] 18:ir.Block; label %9|
[MOV] 19:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 10};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !299];
[MOV] 20:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 11};Pred:slt;X:i32 %10;Y:i32 1;Typ:i1;Metadata:[!dbg !301];
[MOV] 21:ir.TermCondBr; ir.InstICmp|Cond:i1 %11;TargetTrue:label %12;TargetFalse:label %17;Successors:[label %12 label %17];Metadata:[!dbg !302];
[MOV] 22:ir.Block; label %12|
[MOV] 23:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 13};ElemType:i8*;Src:i8** %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !303];
[MOV] 24:ir.InstStore; ;|Src:i8* %13;Dst:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !305];
[MOV] 25:ir.TermBr; |Target:label %14;Successors:[label %14];Metadata:[!dbg !306];
[MOV] 26:ir.Block; label %14|
[MOV] 27:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 15};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !307];
[MOV] 28:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 16};X:i32 %15;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !307];
[MOV] 29:ir.InstStore; ;|Src:i32 %16;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !307];
[MOV] 30:ir.TermBr; label %9|Target:label %9;Successors:[label %9];Metadata:[!dbg !308 !llvm.loop !309];
[MOV] 31:ir.Block; label %17|
[MOV] 32:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !311];
[MOV] 33:ir.TermBr; |Target:label %18;Successors:[label %18];Metadata:[!dbg !313];
[MOV] 34:ir.Block; label %18|
[MOV] 35:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 19};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !314];
[MOV] 36:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 20};Pred:slt;X:i32 %19;Y:i32 1;Typ:i1;Metadata:[!dbg !316];
[MOV] 37:ir.TermCondBr; ir.InstICmp|Cond:i1 %20;TargetTrue:label %21;TargetFalse:label %32;Successors:[label %21 label %32];Metadata:[!dbg !317];
[MOV] 38:ir.Block; label %21|
[MOV] 39:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %class.OneIntClass** %6 metadata !318 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !325];
[MOV] 40:ir.InstLoad; ir.InstLoad ir.InstBitCast ;ir.InstBitCast |LocalIdent:{ 22};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !326];
[MOV] 41:ir.InstBitCast; ir.InstBitCast ;ir.InstStore |LocalIdent:{ 23};From:i8* %22;To:%class.OneIntClass*;Metadata:[!dbg !327];
[MOV] 42:ir.InstStore; ;|Src:%class.OneIntClass* %23;Dst:%class.OneIntClass** %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !325];
[MOV] 43:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 24};ElemType:%class.OneIntClass*;Src:%class.OneIntClass** %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !328];
[MOV] 44:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 25};ElemType:%class.OneIntClass;Src:%class.OneIntClass* %24;Indices:[i32 0 i32 0];Typ:i32*;InBounds:true;Metadata:[!dbg !329];
[MOV] 45:ir.InstStore; ;|Src:i32 5;Dst:i32* %25;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !330];
[MOV] 46:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 26};ElemType:%class.OneIntClass*;Src:%class.OneIntClass** %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !331];
[MOV] 47:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 27};ElemType:%class.OneIntClass;Src:%class.OneIntClass* %26;Indices:[i32 0 i32 0];Typ:i32*;InBounds:true;Metadata:[!dbg !332];
[MOV] 48:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 28};ElemType:i32;Src:i32* %27;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !332];
[MOV] 49:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %28];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !333];
[MOV] 50:ir.TermBr; |Target:label %29;Successors:[label %29];Metadata:[!dbg !334];
[MOV] 51:ir.Block; label %29|
[MOV] 52:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 30};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !335];
[MOV] 53:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 31};X:i32 %30;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !335];
[MOV] 54:ir.InstStore; ;|Src:i32 %31;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !335];
[MOV] 55:ir.TermBr; label %18|Target:label %18;Successors:[label %18];Metadata:[!dbg !336 !llvm.loop !337];
[MOV] 56:ir.Block; label %32|
[MOV] 57:ir.TermRet; |X:<nil>;Metadata:[!dbg !339];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstCall
6:ir.InstAlloca,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstCall
9:ir.InstCall,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstAlloca
10:ir.InstCall,3,11:ir.InstAlloca
0:ir.Block,4,12:ir.InstStore
11:ir.InstAlloca,3,12:ir.InstStore
0:ir.Block,4,13:ir.InstCall
12:ir.InstStore,3,13:ir.InstCall
0:ir.Block,4,14:ir.InstAlloca
13:ir.InstCall,3,14:ir.InstAlloca
0:ir.Block,4,15:ir.InstStore
14:ir.InstAlloca,3,15:ir.InstStore
0:ir.Block,4,16:ir.InstStore
15:ir.InstStore,3,16:ir.InstStore
16:ir.InstStore,3,17:ir.TermBr
17:ir.TermBr,5,18:ir.Block
17:ir.TermBr,3,18:ir.Block
18:ir.Block,4,19:ir.InstLoad
18:ir.Block,3,19:ir.InstLoad
18:ir.Block,4,20:ir.InstICmp
19:ir.InstLoad,3,20:ir.InstICmp
20:ir.InstICmp,3,21:ir.TermCondBr
21:ir.TermCondBr,5,22:ir.Block
21:ir.TermCondBr,3,22:ir.Block
21:ir.TermCondBr,5,31:ir.Block
21:ir.TermCondBr,3,31:ir.Block
22:ir.Block,4,23:ir.InstLoad
22:ir.Block,3,23:ir.InstLoad
22:ir.Block,4,24:ir.InstStore
23:ir.InstLoad,3,24:ir.InstStore
24:ir.InstStore,3,25:ir.TermBr
25:ir.TermBr,5,26:ir.Block
25:ir.TermBr,3,26:ir.Block
26:ir.Block,4,27:ir.InstLoad
26:ir.Block,3,27:ir.InstLoad
26:ir.Block,4,28:ir.InstAdd
27:ir.InstLoad,3,28:ir.InstAdd
26:ir.Block,4,29:ir.InstStore
28:ir.InstAdd,3,29:ir.InstStore
29:ir.InstStore,3,30:ir.TermBr
30:ir.TermBr,5,18:ir.Block
30:ir.TermBr,3,18:ir.Block
31:ir.Block,4,32:ir.InstStore
31:ir.Block,3,32:ir.InstStore
32:ir.InstStore,3,33:ir.TermBr
33:ir.TermBr,5,34:ir.Block
33:ir.TermBr,3,34:ir.Block
34:ir.Block,4,35:ir.InstLoad
34:ir.Block,3,35:ir.InstLoad
34:ir.Block,4,36:ir.InstICmp
35:ir.InstLoad,3,36:ir.InstICmp
36:ir.InstICmp,3,37:ir.TermCondBr
37:ir.TermCondBr,5,38:ir.Block
37:ir.TermCondBr,3,38:ir.Block
37:ir.TermCondBr,5,56:ir.Block
37:ir.TermCondBr,3,56:ir.Block
38:ir.Block,4,39:ir.InstCall
38:ir.Block,3,39:ir.InstCall
38:ir.Block,4,40:ir.InstLoad
39:ir.InstCall,3,40:ir.InstLoad
38:ir.Block,4,41:ir.InstBitCast
40:ir.InstLoad,3,41:ir.InstBitCast
38:ir.Block,4,42:ir.InstStore
41:ir.InstBitCast,3,42:ir.InstStore
38:ir.Block,4,43:ir.InstLoad
42:ir.InstStore,3,43:ir.InstLoad
38:ir.Block,4,44:ir.InstGetElementPtr
43:ir.InstLoad,3,44:ir.InstGetElementPtr
38:ir.Block,4,45:ir.InstStore
44:ir.InstGetElementPtr,3,45:ir.InstStore
38:ir.Block,4,46:ir.InstLoad
45:ir.InstStore,3,46:ir.InstLoad
38:ir.Block,4,47:ir.InstGetElementPtr
46:ir.InstLoad,3,47:ir.InstGetElementPtr
38:ir.Block,4,48:ir.InstLoad
47:ir.InstGetElementPtr,3,48:ir.InstLoad
38:ir.Block,4,49:ir.InstCall
48:ir.InstLoad,3,49:ir.InstCall
49:ir.InstCall,3,50:ir.TermBr
50:ir.TermBr,5,51:ir.Block
50:ir.TermBr,3,51:ir.Block
51:ir.Block,4,52:ir.InstLoad
51:ir.Block,3,52:ir.InstLoad
51:ir.Block,4,53:ir.InstAdd
52:ir.InstLoad,3,53:ir.InstAdd
51:ir.Block,4,54:ir.InstStore
53:ir.InstAdd,3,54:ir.InstStore
54:ir.InstStore,3,55:ir.TermBr
55:ir.TermBr,5,34:ir.Block
55:ir.TermBr,3,34:ir.Block
56:ir.Block,3,57:ir.TermRet
19:ir.InstLoad,1,20:ir.InstICmp
20:ir.InstICmp,2,19:ir.InstLoad
28:ir.InstAdd,1,29:ir.InstStore
29:ir.InstStore,2,28:ir.InstAdd
2:ir.InstAlloca,1,32:ir.InstStore
32:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,52:ir.InstLoad
52:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,54:ir.InstStore
54:ir.InstStore,2,2:ir.InstAlloca
40:ir.InstLoad,1,41:ir.InstBitCast
41:ir.InstBitCast,2,40:ir.InstLoad
41:ir.InstBitCast,1,42:ir.InstStore
42:ir.InstStore,2,41:ir.InstBitCast
43:ir.InstLoad,1,44:ir.InstGetElementPtr
44:ir.InstGetElementPtr,2,43:ir.InstLoad
4:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,23:ir.InstLoad
23:ir.InstLoad,2,4:ir.InstAlloca
3:ir.InstAlloca,1,24:ir.InstStore
24:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,40:ir.InstLoad
40:ir.InstLoad,2,3:ir.InstAlloca
6:ir.InstAlloca,1,42:ir.InstStore
42:ir.InstStore,2,6:ir.InstAlloca
6:ir.InstAlloca,1,43:ir.InstLoad
43:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,46:ir.InstLoad
46:ir.InstLoad,2,6:ir.InstAlloca
44:ir.InstGetElementPtr,1,45:ir.InstStore
45:ir.InstStore,2,44:ir.InstGetElementPtr
48:ir.InstLoad,1,49:ir.InstCall
49:ir.InstCall,2,48:ir.InstLoad
52:ir.InstLoad,1,53:ir.InstAdd
53:ir.InstAdd,2,52:ir.InstLoad
1:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,27:ir.InstLoad
27:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,29:ir.InstStore
29:ir.InstStore,2,1:ir.InstAlloca
23:ir.InstLoad,1,24:ir.InstStore
24:ir.InstStore,2,23:ir.InstLoad
46:ir.InstLoad,1,47:ir.InstGetElementPtr
47:ir.InstGetElementPtr,2,46:ir.InstLoad
47:ir.InstGetElementPtr,1,48:ir.InstLoad
48:ir.InstLoad,2,47:ir.InstGetElementPtr
11:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,11:ir.InstAlloca
14:ir.InstAlloca,1,15:ir.InstStore
15:ir.InstStore,2,14:ir.InstAlloca
5:ir.InstAlloca,1,15:ir.InstStore
15:ir.InstStore,2,5:ir.InstAlloca
27:ir.InstLoad,1,28:ir.InstAdd
28:ir.InstAdd,2,27:ir.InstLoad
35:ir.InstLoad,1,36:ir.InstICmp
36:ir.InstICmp,2,35:ir.InstLoad
53:ir.InstAdd,1,54:ir.InstStore
54:ir.InstStore,2,53:ir.InstAdd
21:ir.TermCondBr,2,20:ir.InstICmp
20:ir.InstICmp,1,21:ir.TermCondBr
37:ir.TermCondBr,2,36:ir.InstICmp
36:ir.InstICmp,1,37:ir.TermCondBr
