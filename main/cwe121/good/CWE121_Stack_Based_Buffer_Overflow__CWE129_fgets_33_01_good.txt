? 52
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstStore ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 2};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !288 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !289];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %2 metadata !290 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !291];
[MOV] 8:ir.InstStore; ;|Src:i32* %1;Dst:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !291];
[MOV] 9:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !292];
[MOV] 10:ir.InstStore; ;|Src:i32 7;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !293];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %3 metadata !294 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !296];
[MOV] 12:ir.InstLoad; ir.InstLoad ;ir.InstLoad |LocalIdent:{ 6};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !297];
[MOV] 13:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 7};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !297];
[MOV] 14:ir.InstStore; ;|Src:i32 %7;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !296];
[MOV] 15:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !298 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !300];
[MOV] 16:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %5 metadata !301 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !302];
[MOV] 17:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 8};From:[10 x i32]* %5;To:i8*;Metadata:[!dbg !302];
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %8 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !302];
[MOV] 19:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 9};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !303];
[MOV] 20:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 10};Pred:sge;X:i32 %9;Y:i32 0;Typ:i1;Metadata:[!dbg !305];
[MOV] 21:ir.TermCondBr; ir.InstICmp|Cond:i1 %10;TargetTrue:label %11;TargetFalse:label %27;Successors:[label %11 label %27];Metadata:[!dbg !306];
[MOV] 22:ir.Block; label %11|
[MOV] 23:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 12};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !307];
[MOV] 24:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 13};From:i32 %12;To:i64;Metadata:[!dbg !309];
[MOV] 25:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 14};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %13];Typ:i32*;InBounds:true;Metadata:[!dbg !309];
[MOV] 26:ir.InstStore; ;|Src:i32 1;Dst:i32* %14;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !310];
[MOV] 27:ir.InstStore; ;|Src:i32 0;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !311];
[MOV] 28:ir.TermBr; |Target:label %15;Successors:[label %15];Metadata:[!dbg !313];
[MOV] 29:ir.Block; label %15|
[MOV] 30:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 16};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !314];
[MOV] 31:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 17};Pred:slt;X:i32 %16;Y:i32 10;Typ:i1;Metadata:[!dbg !316];
[MOV] 32:ir.TermCondBr; ir.InstICmp|Cond:i1 %17;TargetTrue:label %18;TargetFalse:label %26;Successors:[label %18 label %26];Metadata:[!dbg !317];
[MOV] 33:ir.Block; label %18|
[MOV] 34:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 19};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !318];
[MOV] 35:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 20};From:i32 %19;To:i64;Metadata:[!dbg !320];
[MOV] 36:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 21};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %20];Typ:i32*;InBounds:true;Metadata:[!dbg !320];
[MOV] 37:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 22};ElemType:i32;Src:i32* %21;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !320];
[MOV] 38:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %22];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !321];
[MOV] 39:ir.TermBr; |Target:label %23;Successors:[label %23];Metadata:[!dbg !322];
[MOV] 40:ir.Block; label %23|
[MOV] 41:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 24};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !323];
[MOV] 42:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 25};X:i32 %24;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !323];
[MOV] 43:ir.InstStore; ;|Src:i32 %25;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !323];
[MOV] 44:ir.TermBr; label %15|Target:label %15;Successors:[label %15];Metadata:[!dbg !324 !llvm.loop !325];
[MOV] 45:ir.Block; label %26|
[MOV] 46:ir.TermBr; |Target:label %28;Successors:[label %28];Metadata:[!dbg !327];
[MOV] 47:ir.Block; label %27|
[MOV] 48:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !328];
[MOV] 49:ir.TermBr; |Target:label %28;Successors:[label %28];Metadata:[];
[MOV] 50:ir.Block; label %28|
[MOV] 51:ir.TermRet; |X:<nil>;Metadata:[!dbg !330];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstStore
7:ir.InstCall,3,8:ir.InstStore
0:ir.Block,4,9:ir.InstStore
8:ir.InstStore,3,9:ir.InstStore
0:ir.Block,4,10:ir.InstStore
9:ir.InstStore,3,10:ir.InstStore
0:ir.Block,4,11:ir.InstCall
10:ir.InstStore,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstLoad
11:ir.InstCall,3,12:ir.InstLoad
0:ir.Block,4,13:ir.InstLoad
12:ir.InstLoad,3,13:ir.InstLoad
0:ir.Block,4,14:ir.InstStore
13:ir.InstLoad,3,14:ir.InstStore
0:ir.Block,4,15:ir.InstCall
14:ir.InstStore,3,15:ir.InstCall
0:ir.Block,4,16:ir.InstCall
15:ir.InstCall,3,16:ir.InstCall
0:ir.Block,4,17:ir.InstBitCast
16:ir.InstCall,3,17:ir.InstBitCast
0:ir.Block,4,18:ir.InstCall
17:ir.InstBitCast,3,18:ir.InstCall
0:ir.Block,4,19:ir.InstLoad
18:ir.InstCall,3,19:ir.InstLoad
0:ir.Block,4,20:ir.InstICmp
19:ir.InstLoad,3,20:ir.InstICmp
20:ir.InstICmp,3,21:ir.TermCondBr
21:ir.TermCondBr,5,22:ir.Block
21:ir.TermCondBr,3,22:ir.Block
21:ir.TermCondBr,5,47:ir.Block
21:ir.TermCondBr,3,47:ir.Block
22:ir.Block,4,23:ir.InstLoad
22:ir.Block,3,23:ir.InstLoad
22:ir.Block,4,24:ir.InstSExt
23:ir.InstLoad,3,24:ir.InstSExt
22:ir.Block,4,25:ir.InstGetElementPtr
24:ir.InstSExt,3,25:ir.InstGetElementPtr
22:ir.Block,4,26:ir.InstStore
25:ir.InstGetElementPtr,3,26:ir.InstStore
22:ir.Block,4,27:ir.InstStore
26:ir.InstStore,3,27:ir.InstStore
27:ir.InstStore,3,28:ir.TermBr
28:ir.TermBr,5,29:ir.Block
28:ir.TermBr,3,29:ir.Block
29:ir.Block,4,30:ir.InstLoad
29:ir.Block,3,30:ir.InstLoad
29:ir.Block,4,31:ir.InstICmp
30:ir.InstLoad,3,31:ir.InstICmp
31:ir.InstICmp,3,32:ir.TermCondBr
32:ir.TermCondBr,5,33:ir.Block
32:ir.TermCondBr,3,33:ir.Block
32:ir.TermCondBr,5,45:ir.Block
32:ir.TermCondBr,3,45:ir.Block
33:ir.Block,4,34:ir.InstLoad
33:ir.Block,3,34:ir.InstLoad
33:ir.Block,4,35:ir.InstSExt
34:ir.InstLoad,3,35:ir.InstSExt
33:ir.Block,4,36:ir.InstGetElementPtr
35:ir.InstSExt,3,36:ir.InstGetElementPtr
33:ir.Block,4,37:ir.InstLoad
36:ir.InstGetElementPtr,3,37:ir.InstLoad
33:ir.Block,4,38:ir.InstCall
37:ir.InstLoad,3,38:ir.InstCall
38:ir.InstCall,3,39:ir.TermBr
39:ir.TermBr,5,40:ir.Block
39:ir.TermBr,3,40:ir.Block
40:ir.Block,4,41:ir.InstLoad
40:ir.Block,3,41:ir.InstLoad
40:ir.Block,4,42:ir.InstAdd
41:ir.InstLoad,3,42:ir.InstAdd
40:ir.Block,4,43:ir.InstStore
42:ir.InstAdd,3,43:ir.InstStore
43:ir.InstStore,3,44:ir.TermBr
44:ir.TermBr,5,29:ir.Block
44:ir.TermBr,3,29:ir.Block
45:ir.Block,3,46:ir.TermBr
46:ir.TermBr,5,50:ir.Block
46:ir.TermBr,3,50:ir.Block
47:ir.Block,4,48:ir.InstCall
47:ir.Block,3,48:ir.InstCall
48:ir.InstCall,3,49:ir.TermBr
49:ir.TermBr,5,50:ir.Block
49:ir.TermBr,3,50:ir.Block
50:ir.Block,3,51:ir.TermRet
23:ir.InstLoad,1,24:ir.InstSExt
24:ir.InstSExt,2,23:ir.InstLoad
37:ir.InstLoad,1,38:ir.InstCall
38:ir.InstCall,2,37:ir.InstLoad
17:ir.InstBitCast,1,18:ir.InstCall
18:ir.InstCall,2,17:ir.InstBitCast
30:ir.InstLoad,1,31:ir.InstICmp
31:ir.InstICmp,2,30:ir.InstLoad
34:ir.InstLoad,1,35:ir.InstSExt
35:ir.InstSExt,2,34:ir.InstLoad
36:ir.InstGetElementPtr,1,37:ir.InstLoad
37:ir.InstLoad,2,36:ir.InstGetElementPtr
2:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,12:ir.InstLoad
12:ir.InstLoad,2,2:ir.InstAlloca
12:ir.InstLoad,1,13:ir.InstLoad
13:ir.InstLoad,2,12:ir.InstLoad
3:ir.InstAlloca,1,14:ir.InstStore
14:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,23:ir.InstLoad
23:ir.InstLoad,2,3:ir.InstAlloca
5:ir.InstAlloca,1,17:ir.InstBitCast
17:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,25:ir.InstGetElementPtr
25:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,36:ir.InstGetElementPtr
36:ir.InstGetElementPtr,2,5:ir.InstAlloca
42:ir.InstAdd,1,43:ir.InstStore
43:ir.InstStore,2,42:ir.InstAdd
13:ir.InstLoad,1,14:ir.InstStore
14:ir.InstStore,2,13:ir.InstLoad
19:ir.InstLoad,1,20:ir.InstICmp
20:ir.InstICmp,2,19:ir.InstLoad
1:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
25:ir.InstGetElementPtr,1,26:ir.InstStore
26:ir.InstStore,2,25:ir.InstGetElementPtr
4:ir.InstAlloca,1,27:ir.InstStore
27:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,30:ir.InstLoad
30:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,34:ir.InstLoad
34:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,43:ir.InstStore
43:ir.InstStore,2,4:ir.InstAlloca
41:ir.InstLoad,1,42:ir.InstAdd
42:ir.InstAdd,2,41:ir.InstLoad
21:ir.TermCondBr,2,20:ir.InstICmp
20:ir.InstICmp,1,21:ir.TermCondBr
32:ir.TermCondBr,2,31:ir.InstICmp
31:ir.InstICmp,1,32:ir.TermCondBr
