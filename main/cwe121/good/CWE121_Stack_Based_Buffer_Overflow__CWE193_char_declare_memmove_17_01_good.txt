? 44
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstGetElementPtr ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ;|LocalIdent:{ 3};ElemType:[10 x i8];NElems:<nil>;Typ:[10 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[11 x i8];NElems:<nil>;Typ:[11 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ir.InstCall ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[11 x i8];NElems:<nil>;Typ:[11 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !76 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !77];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !78 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !79];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i8]* %3 metadata !80 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !81];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [11 x i8]* %4 metadata !82 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !83];
[MOV] 10:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !84];
[MOV] 11:ir.TermBr; |Target:label %6;Successors:[label %6];Metadata:[!dbg !86];
[MOV] 12:ir.Block; label %6|
[MOV] 13:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 7};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !87];
[MOV] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 8};Pred:slt;X:i32 %7;Y:i32 1;Typ:i1;Metadata:[!dbg !89];
[MOV] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %8;TargetTrue:label %9;TargetFalse:label %16;Successors:[label %9 label %16];Metadata:[!dbg !90];
[MOV] 16:ir.Block; label %9|
[MOV] 17:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstStore |LocalIdent:{ 10};ElemType:[11 x i8];Src:[11 x i8]* %4;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !91];
[MOV] 18:ir.InstStore; ;|Src:i8* %10;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !93];
[MOV] 19:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 11};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !94];
[MOV] 20:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 12};ElemType:i8;Src:i8* %11;Indices:[i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !94];
[MOV] 21:ir.InstStore; ;|Src:i8 0;Dst:i8* %12;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !95];
[MOV] 22:ir.TermBr; |Target:label %13;Successors:[label %13];Metadata:[!dbg !96];
[MOV] 23:ir.Block; label %13|
[MOV] 24:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 14};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !97];
[MOV] 25:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 15};X:i32 %14;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !97];
[MOV] 26:ir.InstStore; ;|Src:i32 %15;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !97];
[MOV] 27:ir.TermBr; label %6|Target:label %6;Successors:[label %6];Metadata:[!dbg !98 !llvm.loop !99];
[MOV] 28:ir.Block; label %16|
[MOV] 29:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [11 x i8]* %5 metadata !101 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !103];
[MOV] 30:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 17};From:[11 x i8]* %5;To:i8*;Metadata:[!dbg !103];
[MOV] 31:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8*, i64, i1)* @llvm.memcpy.p0i8.p0i8.i64;Args:[i8* align 1 %17 i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @__const.goodG2B.source, i32 0, i32 0) i64 11 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !103];
[MOV] 32:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 18};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !104];
[MOV] 33:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 19};ElemType:[11 x i8];Src:[11 x i8]* %5;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !104];
[MOV] 34:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 20};ElemType:[11 x i8];Src:[11 x i8]* %5;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !104];
[MOV] 35:ir.InstCall; ir.InstCall ;ir.InstAdd |LocalIdent:{ 21};Callee:i64 (i8*)* @strlen;Args:[i8* %20];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !104];
[MOV] 36:ir.InstAdd; ir.InstAdd ;ir.InstMul |LocalIdent:{ 22};X:i64 %21;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !104];
[MOV] 37:ir.InstMul; ir.InstMul ir.InstCall ;ir.InstCall |LocalIdent:{ 23};X:i64 %22;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !104];
[MOV] 38:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 24};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !104];
[MOV] 39:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 25};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %24 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !104];
[MOV] 40:ir.InstCall; ir.InstCall ;|LocalIdent:{ 26};Callee:i8* (i8*, i8*, i64, i64)* @__memmove_chk;Args:[i8* %18 i8* %19 i64 %23 i64 %25];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !104];
[MOV] 41:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 27};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !105];
[MOV] 42:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %27];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !106];
[MOV] 43:ir.TermRet; |X:<nil>;Metadata:[!dbg !107];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstStore
9:ir.InstCall,3,10:ir.InstStore
10:ir.InstStore,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstLoad
12:ir.Block,3,13:ir.InstLoad
12:ir.Block,4,14:ir.InstICmp
13:ir.InstLoad,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,28:ir.Block
15:ir.TermCondBr,3,28:ir.Block
16:ir.Block,4,17:ir.InstGetElementPtr
16:ir.Block,3,17:ir.InstGetElementPtr
16:ir.Block,4,18:ir.InstStore
17:ir.InstGetElementPtr,3,18:ir.InstStore
16:ir.Block,4,19:ir.InstLoad
18:ir.InstStore,3,19:ir.InstLoad
16:ir.Block,4,20:ir.InstGetElementPtr
19:ir.InstLoad,3,20:ir.InstGetElementPtr
16:ir.Block,4,21:ir.InstStore
20:ir.InstGetElementPtr,3,21:ir.InstStore
21:ir.InstStore,3,22:ir.TermBr
22:ir.TermBr,5,23:ir.Block
22:ir.TermBr,3,23:ir.Block
23:ir.Block,4,24:ir.InstLoad
23:ir.Block,3,24:ir.InstLoad
23:ir.Block,4,25:ir.InstAdd
24:ir.InstLoad,3,25:ir.InstAdd
23:ir.Block,4,26:ir.InstStore
25:ir.InstAdd,3,26:ir.InstStore
26:ir.InstStore,3,27:ir.TermBr
27:ir.TermBr,5,12:ir.Block
27:ir.TermBr,3,12:ir.Block
28:ir.Block,4,29:ir.InstCall
28:ir.Block,3,29:ir.InstCall
28:ir.Block,4,30:ir.InstBitCast
29:ir.InstCall,3,30:ir.InstBitCast
28:ir.Block,4,31:ir.InstCall
30:ir.InstBitCast,3,31:ir.InstCall
28:ir.Block,4,32:ir.InstLoad
31:ir.InstCall,3,32:ir.InstLoad
28:ir.Block,4,33:ir.InstGetElementPtr
32:ir.InstLoad,3,33:ir.InstGetElementPtr
28:ir.Block,4,34:ir.InstGetElementPtr
33:ir.InstGetElementPtr,3,34:ir.InstGetElementPtr
28:ir.Block,4,35:ir.InstCall
34:ir.InstGetElementPtr,3,35:ir.InstCall
28:ir.Block,4,36:ir.InstAdd
35:ir.InstCall,3,36:ir.InstAdd
28:ir.Block,4,37:ir.InstMul
36:ir.InstAdd,3,37:ir.InstMul
28:ir.Block,4,38:ir.InstLoad
37:ir.InstMul,3,38:ir.InstLoad
28:ir.Block,4,39:ir.InstCall
38:ir.InstLoad,3,39:ir.InstCall
28:ir.Block,4,40:ir.InstCall
39:ir.InstCall,3,40:ir.InstCall
28:ir.Block,4,41:ir.InstLoad
40:ir.InstCall,3,41:ir.InstLoad
28:ir.Block,4,42:ir.InstCall
41:ir.InstLoad,3,42:ir.InstCall
42:ir.InstCall,3,43:ir.TermRet
24:ir.InstLoad,1,25:ir.InstAdd
25:ir.InstAdd,2,24:ir.InstLoad
35:ir.InstCall,1,36:ir.InstAdd
36:ir.InstAdd,2,35:ir.InstCall
38:ir.InstLoad,1,39:ir.InstCall
39:ir.InstCall,2,38:ir.InstLoad
33:ir.InstGetElementPtr,1,40:ir.InstCall
40:ir.InstCall,2,33:ir.InstGetElementPtr
13:ir.InstLoad,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstLoad
4:ir.InstAlloca,1,17:ir.InstGetElementPtr
17:ir.InstGetElementPtr,2,4:ir.InstAlloca
19:ir.InstLoad,1,20:ir.InstGetElementPtr
20:ir.InstGetElementPtr,2,19:ir.InstLoad
20:ir.InstGetElementPtr,1,21:ir.InstStore
21:ir.InstStore,2,20:ir.InstGetElementPtr
37:ir.InstMul,1,40:ir.InstCall
40:ir.InstCall,2,37:ir.InstMul
41:ir.InstLoad,1,42:ir.InstCall
42:ir.InstCall,2,41:ir.InstLoad
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstLoad
13:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,24:ir.InstLoad
24:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,26:ir.InstStore
26:ir.InstStore,2,1:ir.InstAlloca
5:ir.InstAlloca,1,30:ir.InstBitCast
30:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,33:ir.InstGetElementPtr
33:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,34:ir.InstGetElementPtr
34:ir.InstGetElementPtr,2,5:ir.InstAlloca
30:ir.InstBitCast,1,31:ir.InstCall
31:ir.InstCall,2,30:ir.InstBitCast
32:ir.InstLoad,1,40:ir.InstCall
40:ir.InstCall,2,32:ir.InstLoad
17:ir.InstGetElementPtr,1,18:ir.InstStore
18:ir.InstStore,2,17:ir.InstGetElementPtr
34:ir.InstGetElementPtr,1,35:ir.InstCall
35:ir.InstCall,2,34:ir.InstGetElementPtr
36:ir.InstAdd,1,37:ir.InstMul
37:ir.InstMul,2,36:ir.InstAdd
39:ir.InstCall,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstCall
2:ir.InstAlloca,1,18:ir.InstStore
18:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,32:ir.InstLoad
32:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,38:ir.InstLoad
38:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,2:ir.InstAlloca
25:ir.InstAdd,1,26:ir.InstStore
26:ir.InstStore,2,25:ir.InstAdd
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
