? 58
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ;ir.InstStore ir.InstStore ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstStore ir.InstBitCast ;ir.InstBitCast ir.InstBitCast |LocalIdent:{ 2};ElemType:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34_unionType;NElems:<nil>;Typ:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34_unionType*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !140 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !141];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %union.CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34_unionType* %2 metadata !142 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !143];
[MOV] 8:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !144];
[MOV] 9:ir.InstStore; ;|Src:i32 10;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !145];
[MOV] 10:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 6};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !146];
[MOV] 11:ir.InstBitCast; ir.InstBitCast ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 7};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34_unionType* %2;To:i32*;Metadata:[!dbg !147];
[MOV] 12:ir.InstStore; ;|Src:i32 %6;Dst:i32* %7;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !148];
[MOV] 13:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %3 metadata !149 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !151];
[MOV] 14:ir.InstBitCast; ir.InstBitCast ;ir.InstLoad |LocalIdent:{ 8};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34_unionType* %2;To:i32*;Metadata:[!dbg !152];
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 9};ElemType:i32;Src:i32* %8;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !152];
[MOV] 16:ir.InstStore; ;|Src:i32 %9;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !151];
[MOV] 17:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !153 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !155];
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %5 metadata !156 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !157];
[MOV] 19:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 10};From:[10 x i32]* %5;To:i8*;Metadata:[!dbg !157];
[MOV] 20:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %10 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !157];
[MOV] 21:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 11};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !158];
[MOV] 22:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 12};Pred:sge;X:i32 %11;Y:i32 0;Typ:i1;Metadata:[!dbg !160];
[MOV] 23:ir.TermCondBr; ir.InstICmp|Cond:i1 %12;TargetTrue:label %13;TargetFalse:label %32;Successors:[label %13 label %32];Metadata:[!dbg !161];
[MOV] 24:ir.Block; label %13|
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 14};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !162];
[MOV] 26:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 15};Pred:slt;X:i32 %14;Y:i32 10;Typ:i1;Metadata:[!dbg !163];
[MOV] 27:ir.TermCondBr; ir.InstICmp|Cond:i1 %15;TargetTrue:label %16;TargetFalse:label %32;Successors:[label %16 label %32];Metadata:[!dbg !164];
[MOV] 28:ir.Block; label %16|
[MOV] 29:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 17};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !165];
[MOV] 30:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 18};From:i32 %17;To:i64;Metadata:[!dbg !167];
[MOV] 31:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 19};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %18];Typ:i32*;InBounds:true;Metadata:[!dbg !167];
[MOV] 32:ir.InstStore; ;|Src:i32 1;Dst:i32* %19;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !168];
[MOV] 33:ir.InstStore; ;|Src:i32 0;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !169];
[MOV] 34:ir.TermBr; |Target:label %20;Successors:[label %20];Metadata:[!dbg !171];
[MOV] 35:ir.Block; label %20|
[MOV] 36:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 21};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !172];
[MOV] 37:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 22};Pred:slt;X:i32 %21;Y:i32 10;Typ:i1;Metadata:[!dbg !174];
[MOV] 38:ir.TermCondBr; ir.InstICmp|Cond:i1 %22;TargetTrue:label %23;TargetFalse:label %31;Successors:[label %23 label %31];Metadata:[!dbg !175];
[MOV] 39:ir.Block; label %23|
[MOV] 40:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 24};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !176];
[MOV] 41:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 25};From:i32 %24;To:i64;Metadata:[!dbg !178];
[MOV] 42:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 26};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %25];Typ:i32*;InBounds:true;Metadata:[!dbg !178];
[MOV] 43:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 27};ElemType:i32;Src:i32* %26;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !178];
[MOV] 44:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %27];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !179];
[MOV] 45:ir.TermBr; |Target:label %28;Successors:[label %28];Metadata:[!dbg !180];
[MOV] 46:ir.Block; label %28|
[MOV] 47:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 29};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !181];
[MOV] 48:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 30};X:i32 %29;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !181];
[MOV] 49:ir.InstStore; ;|Src:i32 %30;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !181];
[MOV] 50:ir.TermBr; label %20|Target:label %20;Successors:[label %20];Metadata:[!dbg !182 !llvm.loop !183];
[MOV] 51:ir.Block; label %31|
[MOV] 52:ir.TermBr; |Target:label %33;Successors:[label %33];Metadata:[!dbg !185];
[MOV] 53:ir.Block; label %32|
[MOV] 54:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !186];
[MOV] 55:ir.TermBr; |Target:label %33;Successors:[label %33];Metadata:[];
[MOV] 56:ir.Block; label %33|
[MOV] 57:ir.TermRet; |X:<nil>;Metadata:[!dbg !188];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstStore
7:ir.InstCall,3,8:ir.InstStore
0:ir.Block,4,9:ir.InstStore
8:ir.InstStore,3,9:ir.InstStore
0:ir.Block,4,10:ir.InstLoad
9:ir.InstStore,3,10:ir.InstLoad
0:ir.Block,4,11:ir.InstBitCast
10:ir.InstLoad,3,11:ir.InstBitCast
0:ir.Block,4,12:ir.InstStore
11:ir.InstBitCast,3,12:ir.InstStore
0:ir.Block,4,13:ir.InstCall
12:ir.InstStore,3,13:ir.InstCall
0:ir.Block,4,14:ir.InstBitCast
13:ir.InstCall,3,14:ir.InstBitCast
0:ir.Block,4,15:ir.InstLoad
14:ir.InstBitCast,3,15:ir.InstLoad
0:ir.Block,4,16:ir.InstStore
15:ir.InstLoad,3,16:ir.InstStore
0:ir.Block,4,17:ir.InstCall
16:ir.InstStore,3,17:ir.InstCall
0:ir.Block,4,18:ir.InstCall
17:ir.InstCall,3,18:ir.InstCall
0:ir.Block,4,19:ir.InstBitCast
18:ir.InstCall,3,19:ir.InstBitCast
0:ir.Block,4,20:ir.InstCall
19:ir.InstBitCast,3,20:ir.InstCall
0:ir.Block,4,21:ir.InstLoad
20:ir.InstCall,3,21:ir.InstLoad
0:ir.Block,4,22:ir.InstICmp
21:ir.InstLoad,3,22:ir.InstICmp
22:ir.InstICmp,3,23:ir.TermCondBr
23:ir.TermCondBr,5,24:ir.Block
23:ir.TermCondBr,3,24:ir.Block
23:ir.TermCondBr,5,53:ir.Block
23:ir.TermCondBr,3,53:ir.Block
24:ir.Block,4,25:ir.InstLoad
24:ir.Block,3,25:ir.InstLoad
24:ir.Block,4,26:ir.InstICmp
25:ir.InstLoad,3,26:ir.InstICmp
26:ir.InstICmp,3,27:ir.TermCondBr
27:ir.TermCondBr,5,28:ir.Block
27:ir.TermCondBr,3,28:ir.Block
27:ir.TermCondBr,5,53:ir.Block
27:ir.TermCondBr,3,53:ir.Block
28:ir.Block,4,29:ir.InstLoad
28:ir.Block,3,29:ir.InstLoad
28:ir.Block,4,30:ir.InstSExt
29:ir.InstLoad,3,30:ir.InstSExt
28:ir.Block,4,31:ir.InstGetElementPtr
30:ir.InstSExt,3,31:ir.InstGetElementPtr
28:ir.Block,4,32:ir.InstStore
31:ir.InstGetElementPtr,3,32:ir.InstStore
28:ir.Block,4,33:ir.InstStore
32:ir.InstStore,3,33:ir.InstStore
33:ir.InstStore,3,34:ir.TermBr
34:ir.TermBr,5,35:ir.Block
34:ir.TermBr,3,35:ir.Block
35:ir.Block,4,36:ir.InstLoad
35:ir.Block,3,36:ir.InstLoad
35:ir.Block,4,37:ir.InstICmp
36:ir.InstLoad,3,37:ir.InstICmp
37:ir.InstICmp,3,38:ir.TermCondBr
38:ir.TermCondBr,5,39:ir.Block
38:ir.TermCondBr,3,39:ir.Block
38:ir.TermCondBr,5,51:ir.Block
38:ir.TermCondBr,3,51:ir.Block
39:ir.Block,4,40:ir.InstLoad
39:ir.Block,3,40:ir.InstLoad
39:ir.Block,4,41:ir.InstSExt
40:ir.InstLoad,3,41:ir.InstSExt
39:ir.Block,4,42:ir.InstGetElementPtr
41:ir.InstSExt,3,42:ir.InstGetElementPtr
39:ir.Block,4,43:ir.InstLoad
42:ir.InstGetElementPtr,3,43:ir.InstLoad
39:ir.Block,4,44:ir.InstCall
43:ir.InstLoad,3,44:ir.InstCall
44:ir.InstCall,3,45:ir.TermBr
45:ir.TermBr,5,46:ir.Block
45:ir.TermBr,3,46:ir.Block
46:ir.Block,4,47:ir.InstLoad
46:ir.Block,3,47:ir.InstLoad
46:ir.Block,4,48:ir.InstAdd
47:ir.InstLoad,3,48:ir.InstAdd
46:ir.Block,4,49:ir.InstStore
48:ir.InstAdd,3,49:ir.InstStore
49:ir.InstStore,3,50:ir.TermBr
50:ir.TermBr,5,35:ir.Block
50:ir.TermBr,3,35:ir.Block
51:ir.Block,3,52:ir.TermBr
52:ir.TermBr,5,56:ir.Block
52:ir.TermBr,3,56:ir.Block
53:ir.Block,4,54:ir.InstCall
53:ir.Block,3,54:ir.InstCall
54:ir.InstCall,3,55:ir.TermBr
55:ir.TermBr,5,56:ir.Block
55:ir.TermBr,3,56:ir.Block
56:ir.Block,3,57:ir.TermRet
14:ir.InstBitCast,1,15:ir.InstLoad
15:ir.InstLoad,2,14:ir.InstBitCast
29:ir.InstLoad,1,30:ir.InstSExt
30:ir.InstSExt,2,29:ir.InstLoad
31:ir.InstGetElementPtr,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstGetElementPtr
47:ir.InstLoad,1,48:ir.InstAdd
48:ir.InstAdd,2,47:ir.InstLoad
2:ir.InstAlloca,1,11:ir.InstBitCast
11:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,14:ir.InstBitCast
14:ir.InstBitCast,2,2:ir.InstAlloca
3:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,3:ir.InstAlloca
5:ir.InstAlloca,1,19:ir.InstBitCast
19:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,31:ir.InstGetElementPtr
31:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,42:ir.InstGetElementPtr
42:ir.InstGetElementPtr,2,5:ir.InstAlloca
4:ir.InstAlloca,1,33:ir.InstStore
33:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,36:ir.InstLoad
36:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,40:ir.InstLoad
40:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,47:ir.InstLoad
47:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,49:ir.InstStore
49:ir.InstStore,2,4:ir.InstAlloca
42:ir.InstGetElementPtr,1,43:ir.InstLoad
43:ir.InstLoad,2,42:ir.InstGetElementPtr
1:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstLoad
10:ir.InstLoad,2,1:ir.InstAlloca
15:ir.InstLoad,1,16:ir.InstStore
16:ir.InstStore,2,15:ir.InstLoad
19:ir.InstBitCast,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstBitCast
25:ir.InstLoad,1,26:ir.InstICmp
26:ir.InstICmp,2,25:ir.InstLoad
36:ir.InstLoad,1,37:ir.InstICmp
37:ir.InstICmp,2,36:ir.InstLoad
40:ir.InstLoad,1,41:ir.InstSExt
41:ir.InstSExt,2,40:ir.InstLoad
11:ir.InstBitCast,1,12:ir.InstStore
12:ir.InstStore,2,11:ir.InstBitCast
21:ir.InstLoad,1,22:ir.InstICmp
22:ir.InstICmp,2,21:ir.InstLoad
43:ir.InstLoad,1,44:ir.InstCall
44:ir.InstCall,2,43:ir.InstLoad
48:ir.InstAdd,1,49:ir.InstStore
49:ir.InstStore,2,48:ir.InstAdd
10:ir.InstLoad,1,12:ir.InstStore
12:ir.InstStore,2,10:ir.InstLoad
23:ir.TermCondBr,2,22:ir.InstICmp
22:ir.InstICmp,1,23:ir.TermCondBr
27:ir.TermCondBr,2,26:ir.InstICmp
26:ir.InstICmp,1,27:ir.TermCondBr
38:ir.TermCondBr,2,37:ir.InstICmp
37:ir.InstICmp,1,38:ir.TermCondBr
