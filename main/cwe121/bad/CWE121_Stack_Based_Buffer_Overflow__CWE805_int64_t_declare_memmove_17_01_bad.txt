? 42
[MOV] 0:ir.Block; label %0|
[DEL] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstGetElementPtr ir.InstLoad ir.InstLoad ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i64*;NElems:<nil>;Typ:i64**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[50 x i64];NElems:<nil>;Typ:[50 x i64]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ;|LocalIdent:{ 4};ElemType:[100 x i64];NElems:<nil>;Typ:[100 x i64]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[100 x i64];NElems:<nil>;Typ:[100 x i64]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !13 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64** %2 metadata !16 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [50 x i64]* %3 metadata !22 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !26];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i64]* %4 metadata !27 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !31];
[DEL] 10:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !32];
[MOV] 11:ir.TermBr; |Target:label %6;Successors:[label %6];Metadata:[!dbg !34];
[MOV] 12:ir.Block; label %6|
[DEL] 13:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 7};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !35];
[DEL] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 8};Pred:slt;X:i32 %7;Y:i32 1;Typ:i1;Metadata:[!dbg !37];
[DEL] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %8;TargetTrue:label %9;TargetFalse:label %14;Successors:[label %9 label %14];Metadata:[!dbg !38];
[MOV] 16:ir.Block; label %9|
[DEL] 17:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstStore |LocalIdent:{ 10};ElemType:[50 x i64];Src:[50 x i64]* %3;Indices:[i64 0 i64 0];Typ:i64*;InBounds:true;Metadata:[!dbg !39];
[DEL] 18:ir.InstStore; ;|Src:i64* %10;Dst:i64** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !41];
[MOV] 19:ir.TermBr; |Target:label %11;Successors:[label %11];Metadata:[!dbg !42];
[MOV] 20:ir.Block; label %11|
[DEL] 21:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 12};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !43];
[DEL] 22:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 13};X:i32 %12;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !43];
[DEL] 23:ir.InstStore; ;|Src:i32 %13;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !43];
[MOV] 24:ir.TermBr; label %6|Target:label %6;Successors:[label %6];Metadata:[!dbg !44 !llvm.loop !45];
[MOV] 25:ir.Block; label %14|
[MOV] 26:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i64]* %5 metadata !47 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !49];
[MOV] 27:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 15};From:[100 x i64]* %5;To:i8*;Metadata:[!dbg !49];
[MOV] 28:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %15 i8 0 i64 800 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !49];
[MOV] 29:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 16};ElemType:i64*;Src:i64** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !50];
[MOV] 30:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 17};From:i64* %16;To:i8*;Metadata:[!dbg !50];
[MOV] 31:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 18};ElemType:[100 x i64];Src:[100 x i64]* %5;Indices:[i64 0 i64 0];Typ:i64*;InBounds:true;Metadata:[!dbg !50];
[MOV] 32:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 19};From:i64* %18;To:i8*;Metadata:[!dbg !50];
[MOV] 33:ir.InstLoad; ir.InstLoad ir.InstBitCast ir.InstCall ;ir.InstBitCast |LocalIdent:{ 20};ElemType:i64*;Src:i64** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !50];
[MOV] 34:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 21};From:i64* %20;To:i8*;Metadata:[!dbg !50];
[MOV] 35:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 22};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %21 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !50];
[MOV] 36:ir.InstCall; ir.InstCall ;|LocalIdent:{ 23};Callee:i8* (i8*, i8*, i64, i64)* @__memmove_chk;Args:[i8* %17 i8* %19 i64 800 i64 %22];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !50];
[MOV] 37:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 24};ElemType:i64*;Src:i64** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !51];
[MOV] 38:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 25};ElemType:i64;Src:i64* %24;Indices:[i64 0];Typ:i64*;InBounds:true;Metadata:[!dbg !51];
[MOV] 39:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 26};ElemType:i64;Src:i64* %25;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !51];
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i64)* @printLongLongLine;Args:[i64 %26];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !52];
[MOV] 41:ir.TermRet; |X:<nil>;Metadata:[!dbg !53];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstStore
9:ir.InstCall,3,10:ir.InstStore
10:ir.InstStore,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstLoad
12:ir.Block,3,13:ir.InstLoad
12:ir.Block,4,14:ir.InstICmp
13:ir.InstLoad,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,25:ir.Block
15:ir.TermCondBr,3,25:ir.Block
16:ir.Block,4,17:ir.InstGetElementPtr
16:ir.Block,3,17:ir.InstGetElementPtr
16:ir.Block,4,18:ir.InstStore
17:ir.InstGetElementPtr,3,18:ir.InstStore
18:ir.InstStore,3,19:ir.TermBr
19:ir.TermBr,5,20:ir.Block
19:ir.TermBr,3,20:ir.Block
20:ir.Block,4,21:ir.InstLoad
20:ir.Block,3,21:ir.InstLoad
20:ir.Block,4,22:ir.InstAdd
21:ir.InstLoad,3,22:ir.InstAdd
20:ir.Block,4,23:ir.InstStore
22:ir.InstAdd,3,23:ir.InstStore
23:ir.InstStore,3,24:ir.TermBr
24:ir.TermBr,5,12:ir.Block
24:ir.TermBr,3,12:ir.Block
25:ir.Block,4,26:ir.InstCall
25:ir.Block,3,26:ir.InstCall
25:ir.Block,4,27:ir.InstBitCast
26:ir.InstCall,3,27:ir.InstBitCast
25:ir.Block,4,28:ir.InstCall
27:ir.InstBitCast,3,28:ir.InstCall
25:ir.Block,4,29:ir.InstLoad
28:ir.InstCall,3,29:ir.InstLoad
25:ir.Block,4,30:ir.InstBitCast
29:ir.InstLoad,3,30:ir.InstBitCast
25:ir.Block,4,31:ir.InstGetElementPtr
30:ir.InstBitCast,3,31:ir.InstGetElementPtr
25:ir.Block,4,32:ir.InstBitCast
31:ir.InstGetElementPtr,3,32:ir.InstBitCast
25:ir.Block,4,33:ir.InstLoad
32:ir.InstBitCast,3,33:ir.InstLoad
25:ir.Block,4,34:ir.InstBitCast
33:ir.InstLoad,3,34:ir.InstBitCast
25:ir.Block,4,35:ir.InstCall
34:ir.InstBitCast,3,35:ir.InstCall
25:ir.Block,4,36:ir.InstCall
35:ir.InstCall,3,36:ir.InstCall
25:ir.Block,4,37:ir.InstLoad
36:ir.InstCall,3,37:ir.InstLoad
25:ir.Block,4,38:ir.InstGetElementPtr
37:ir.InstLoad,3,38:ir.InstGetElementPtr
25:ir.Block,4,39:ir.InstLoad
38:ir.InstGetElementPtr,3,39:ir.InstLoad
25:ir.Block,4,40:ir.InstCall
39:ir.InstLoad,3,40:ir.InstCall
40:ir.InstCall,3,41:ir.TermRet
33:ir.InstLoad,1,34:ir.InstBitCast
34:ir.InstBitCast,2,33:ir.InstLoad
2:ir.InstAlloca,1,18:ir.InstStore
18:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,2:ir.InstAlloca
21:ir.InstLoad,1,22:ir.InstAdd
22:ir.InstAdd,2,21:ir.InstLoad
22:ir.InstAdd,1,23:ir.InstStore
23:ir.InstStore,2,22:ir.InstAdd
5:ir.InstAlloca,1,27:ir.InstBitCast
27:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,31:ir.InstGetElementPtr
31:ir.InstGetElementPtr,2,5:ir.InstAlloca
27:ir.InstBitCast,1,28:ir.InstCall
28:ir.InstCall,2,27:ir.InstBitCast
31:ir.InstGetElementPtr,1,32:ir.InstBitCast
32:ir.InstBitCast,2,31:ir.InstGetElementPtr
30:ir.InstBitCast,1,36:ir.InstCall
36:ir.InstCall,2,30:ir.InstBitCast
37:ir.InstLoad,1,38:ir.InstGetElementPtr
38:ir.InstGetElementPtr,2,37:ir.InstLoad
38:ir.InstGetElementPtr,1,39:ir.InstLoad
39:ir.InstLoad,2,38:ir.InstGetElementPtr
13:ir.InstLoad,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstLoad
3:ir.InstAlloca,1,17:ir.InstGetElementPtr
17:ir.InstGetElementPtr,2,3:ir.InstAlloca
17:ir.InstGetElementPtr,1,18:ir.InstStore
18:ir.InstStore,2,17:ir.InstGetElementPtr
29:ir.InstLoad,1,30:ir.InstBitCast
30:ir.InstBitCast,2,29:ir.InstLoad
34:ir.InstBitCast,1,35:ir.InstCall
35:ir.InstCall,2,34:ir.InstBitCast
32:ir.InstBitCast,1,36:ir.InstCall
36:ir.InstCall,2,32:ir.InstBitCast
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstLoad
13:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,23:ir.InstStore
23:ir.InstStore,2,1:ir.InstAlloca
35:ir.InstCall,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstCall
39:ir.InstLoad,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstLoad
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
