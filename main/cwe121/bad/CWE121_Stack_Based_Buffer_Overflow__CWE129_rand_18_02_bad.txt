? 76
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstPhi ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !14 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !16];
[DEL] 6:ir.TermBr; |Target:label %4;Successors:[label %4];Metadata:[!dbg !17];
[DEL] 7:ir.Block; label %4|
[DEL] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata)* @llvm.dbg.label;Args:[metadata !18];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !19];
[DEL] 9:ir.InstCall; ir.InstCall ;ir.InstAnd |LocalIdent:{ 5};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 10:ir.InstAnd; ir.InstAnd ;ir.InstICmp |LocalIdent:{ 6};X:i32 %5;Y:i32 1;Typ:i32;Metadata:[!dbg !20];
[DEL] 11:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 7};Pred:ne;X:i32 %6;Y:i32 0;Typ:i1;Metadata:[!dbg !20];
[DEL] 12:ir.TermCondBr; ir.InstICmp|Cond:i1 %7;TargetTrue:label %8;TargetFalse:label %16;Successors:[label %8 label %16];Metadata:[!dbg !20];
[DEL] 13:ir.Block; label %8|
[DEL] 14:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 9};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 15:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 10};X:i32 %9;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 16:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 11};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 17:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 12};X:i32 %11;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 18:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 13};X:i32 %10;Y:i32 %12;Typ:i32;Metadata:[!dbg !20];
[DEL] 19:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 14};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 20:ir.InstXor; ir.InstXor ;ir.InstPhi |LocalIdent:{ 15};X:i32 %13;Y:i32 %14;Typ:i32;Metadata:[!dbg !20];
[DEL] 21:ir.TermBr; |Target:label %26;Successors:[label %26];Metadata:[!dbg !20];
[DEL] 22:ir.Block; label %16|
[DEL] 23:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 17};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 24:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 18};X:i32 %17;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 25:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 19};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 26:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 20};X:i32 %19;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 27:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 21};X:i32 %18;Y:i32 %20;Typ:i32;Metadata:[!dbg !20];
[DEL] 28:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 22};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 29:ir.InstXor; ir.InstXor ;ir.InstSub |LocalIdent:{ 23};X:i32 %21;Y:i32 %22;Typ:i32;Metadata:[!dbg !20];
[DEL] 30:ir.InstSub; ir.InstSub ;ir.InstSub |LocalIdent:{ 24};X:i32 0;Y:i32 %23;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 31:ir.InstSub; ir.InstSub ;ir.InstPhi |LocalIdent:{ 25};X:i32 %24;Y:i32 1;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 32:ir.TermBr; |Target:label %26;Successors:[label %26];Metadata:[!dbg !20];
[MOV] 33:ir.Block; label %26|
[DEL] 34:ir.InstPhi; ir.InstPhi ;ir.InstStore |LocalIdent:{ 27};Incs:[[ %15, %8 ] [ %25, %16 ]];Typ:i32;FastMathFlags:[];Metadata:[!dbg !20];
[DEL] 35:ir.InstStore; ;|Src:i32 %27;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !21];
[MOV] 36:ir.TermBr; |Target:label %28;Successors:[label %28];Metadata:[!dbg !22];
[MOV] 37:ir.Block; label %28|
[MOV] 38:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata)* @llvm.dbg.label;Args:[metadata !23];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !24];
[MOV] 39:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !25 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !28 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !32];
[MOV] 41:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 29};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !32];
[MOV] 42:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %29 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !32];
[MOV] 43:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 30};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !33];
[MOV] 44:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 31};Pred:sge;X:i32 %30;Y:i32 0;Typ:i1;Metadata:[!dbg !35];
[MOV] 45:ir.TermCondBr; ir.InstICmp|Cond:i1 %31;TargetTrue:label %32;TargetFalse:label %48;Successors:[label %32 label %48];Metadata:[!dbg !36];
[MOV] 46:ir.Block; label %32|
[MOV] 47:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 33};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !37];
[MOV] 48:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 34};From:i32 %33;To:i64;Metadata:[!dbg !39];
[MOV] 49:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 35};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %34];Typ:i32*;InBounds:true;Metadata:[!dbg !39];
[MOV] 50:ir.InstStore; ;|Src:i32 1;Dst:i32* %35;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !40];
[MOV] 51:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !41];
[MOV] 52:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[!dbg !43];
[MOV] 53:ir.Block; label %36|
[MOV] 54:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 37};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !44];
[MOV] 55:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 38};Pred:slt;X:i32 %37;Y:i32 10;Typ:i1;Metadata:[!dbg !46];
[MOV] 56:ir.TermCondBr; ir.InstICmp|Cond:i1 %38;TargetTrue:label %39;TargetFalse:label %47;Successors:[label %39 label %47];Metadata:[!dbg !47];
[MOV] 57:ir.Block; label %39|
[MOV] 58:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 40};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !48];
[MOV] 59:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 41};From:i32 %40;To:i64;Metadata:[!dbg !50];
[MOV] 60:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 42};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %41];Typ:i32*;InBounds:true;Metadata:[!dbg !50];
[MOV] 61:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 43};ElemType:i32;Src:i32* %42;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !50];
[MOV] 62:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %43];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !51];
[MOV] 63:ir.TermBr; |Target:label %44;Successors:[label %44];Metadata:[!dbg !52];
[MOV] 64:ir.Block; label %44|
[MOV] 65:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 45};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !53];
[MOV] 66:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 46};X:i32 %45;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !53];
[MOV] 67:ir.InstStore; ;|Src:i32 %46;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !53];
[MOV] 68:ir.TermBr; label %36|Target:label %36;Successors:[label %36];Metadata:[!dbg !54 !llvm.loop !55];
[MOV] 69:ir.Block; label %47|
[MOV] 70:ir.TermBr; |Target:label %49;Successors:[label %49];Metadata:[!dbg !57];
[MOV] 71:ir.Block; label %48|
[MOV] 72:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !58];
[MOV] 73:ir.TermBr; |Target:label %49;Successors:[label %49];Metadata:[];
[MOV] 74:ir.Block; label %49|
[MOV] 75:ir.TermRet; |X:<nil>;Metadata:[!dbg !60];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
5:ir.InstStore,3,6:ir.TermBr
6:ir.TermBr,5,7:ir.Block
6:ir.TermBr,3,7:ir.Block
7:ir.Block,4,8:ir.InstCall
7:ir.Block,3,8:ir.InstCall
7:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
7:ir.Block,4,10:ir.InstAnd
9:ir.InstCall,3,10:ir.InstAnd
7:ir.Block,4,11:ir.InstICmp
10:ir.InstAnd,3,11:ir.InstICmp
11:ir.InstICmp,3,12:ir.TermCondBr
12:ir.TermCondBr,5,13:ir.Block
12:ir.TermCondBr,3,13:ir.Block
12:ir.TermCondBr,5,22:ir.Block
12:ir.TermCondBr,3,22:ir.Block
13:ir.Block,4,14:ir.InstCall
13:ir.Block,3,14:ir.InstCall
13:ir.Block,4,15:ir.InstShl
14:ir.InstCall,3,15:ir.InstShl
13:ir.Block,4,16:ir.InstCall
15:ir.InstShl,3,16:ir.InstCall
13:ir.Block,4,17:ir.InstShl
16:ir.InstCall,3,17:ir.InstShl
13:ir.Block,4,18:ir.InstXor
17:ir.InstShl,3,18:ir.InstXor
13:ir.Block,4,19:ir.InstCall
18:ir.InstXor,3,19:ir.InstCall
13:ir.Block,4,20:ir.InstXor
19:ir.InstCall,3,20:ir.InstXor
20:ir.InstXor,3,21:ir.TermBr
21:ir.TermBr,5,33:ir.Block
21:ir.TermBr,3,33:ir.Block
22:ir.Block,4,23:ir.InstCall
22:ir.Block,3,23:ir.InstCall
22:ir.Block,4,24:ir.InstShl
23:ir.InstCall,3,24:ir.InstShl
22:ir.Block,4,25:ir.InstCall
24:ir.InstShl,3,25:ir.InstCall
22:ir.Block,4,26:ir.InstShl
25:ir.InstCall,3,26:ir.InstShl
22:ir.Block,4,27:ir.InstXor
26:ir.InstShl,3,27:ir.InstXor
22:ir.Block,4,28:ir.InstCall
27:ir.InstXor,3,28:ir.InstCall
22:ir.Block,4,29:ir.InstXor
28:ir.InstCall,3,29:ir.InstXor
22:ir.Block,4,30:ir.InstSub
29:ir.InstXor,3,30:ir.InstSub
22:ir.Block,4,31:ir.InstSub
30:ir.InstSub,3,31:ir.InstSub
31:ir.InstSub,3,32:ir.TermBr
32:ir.TermBr,5,33:ir.Block
32:ir.TermBr,3,33:ir.Block
33:ir.Block,4,34:ir.InstPhi
33:ir.Block,3,34:ir.InstPhi
33:ir.Block,4,35:ir.InstStore
34:ir.InstPhi,3,35:ir.InstStore
35:ir.InstStore,3,36:ir.TermBr
36:ir.TermBr,5,37:ir.Block
36:ir.TermBr,3,37:ir.Block
37:ir.Block,4,38:ir.InstCall
37:ir.Block,3,38:ir.InstCall
37:ir.Block,4,39:ir.InstCall
38:ir.InstCall,3,39:ir.InstCall
37:ir.Block,4,40:ir.InstCall
39:ir.InstCall,3,40:ir.InstCall
37:ir.Block,4,41:ir.InstBitCast
40:ir.InstCall,3,41:ir.InstBitCast
37:ir.Block,4,42:ir.InstCall
41:ir.InstBitCast,3,42:ir.InstCall
37:ir.Block,4,43:ir.InstLoad
42:ir.InstCall,3,43:ir.InstLoad
37:ir.Block,4,44:ir.InstICmp
43:ir.InstLoad,3,44:ir.InstICmp
44:ir.InstICmp,3,45:ir.TermCondBr
45:ir.TermCondBr,5,46:ir.Block
45:ir.TermCondBr,3,46:ir.Block
45:ir.TermCondBr,5,71:ir.Block
45:ir.TermCondBr,3,71:ir.Block
46:ir.Block,4,47:ir.InstLoad
46:ir.Block,3,47:ir.InstLoad
46:ir.Block,4,48:ir.InstSExt
47:ir.InstLoad,3,48:ir.InstSExt
46:ir.Block,4,49:ir.InstGetElementPtr
48:ir.InstSExt,3,49:ir.InstGetElementPtr
46:ir.Block,4,50:ir.InstStore
49:ir.InstGetElementPtr,3,50:ir.InstStore
46:ir.Block,4,51:ir.InstStore
50:ir.InstStore,3,51:ir.InstStore
51:ir.InstStore,3,52:ir.TermBr
52:ir.TermBr,5,53:ir.Block
52:ir.TermBr,3,53:ir.Block
53:ir.Block,4,54:ir.InstLoad
53:ir.Block,3,54:ir.InstLoad
53:ir.Block,4,55:ir.InstICmp
54:ir.InstLoad,3,55:ir.InstICmp
55:ir.InstICmp,3,56:ir.TermCondBr
56:ir.TermCondBr,5,57:ir.Block
56:ir.TermCondBr,3,57:ir.Block
56:ir.TermCondBr,5,69:ir.Block
56:ir.TermCondBr,3,69:ir.Block
57:ir.Block,4,58:ir.InstLoad
57:ir.Block,3,58:ir.InstLoad
57:ir.Block,4,59:ir.InstSExt
58:ir.InstLoad,3,59:ir.InstSExt
57:ir.Block,4,60:ir.InstGetElementPtr
59:ir.InstSExt,3,60:ir.InstGetElementPtr
57:ir.Block,4,61:ir.InstLoad
60:ir.InstGetElementPtr,3,61:ir.InstLoad
57:ir.Block,4,62:ir.InstCall
61:ir.InstLoad,3,62:ir.InstCall
62:ir.InstCall,3,63:ir.TermBr
63:ir.TermBr,5,64:ir.Block
63:ir.TermBr,3,64:ir.Block
64:ir.Block,4,65:ir.InstLoad
64:ir.Block,3,65:ir.InstLoad
64:ir.Block,4,66:ir.InstAdd
65:ir.InstLoad,3,66:ir.InstAdd
64:ir.Block,4,67:ir.InstStore
66:ir.InstAdd,3,67:ir.InstStore
67:ir.InstStore,3,68:ir.TermBr
68:ir.TermBr,5,53:ir.Block
68:ir.TermBr,3,53:ir.Block
69:ir.Block,3,70:ir.TermBr
70:ir.TermBr,5,74:ir.Block
70:ir.TermBr,3,74:ir.Block
71:ir.Block,4,72:ir.InstCall
71:ir.Block,3,72:ir.InstCall
72:ir.InstCall,3,73:ir.TermBr
73:ir.TermBr,5,74:ir.Block
73:ir.TermBr,3,74:ir.Block
74:ir.Block,3,75:ir.TermRet
10:ir.InstAnd,1,11:ir.InstICmp
11:ir.InstICmp,2,10:ir.InstAnd
58:ir.InstLoad,1,59:ir.InstSExt
59:ir.InstSExt,2,58:ir.InstLoad
60:ir.InstGetElementPtr,1,61:ir.InstLoad
61:ir.InstLoad,2,60:ir.InstGetElementPtr
65:ir.InstLoad,1,66:ir.InstAdd
66:ir.InstAdd,2,65:ir.InstLoad
17:ir.InstShl,1,18:ir.InstXor
18:ir.InstXor,2,17:ir.InstShl
23:ir.InstCall,1,24:ir.InstShl
24:ir.InstShl,2,23:ir.InstCall
54:ir.InstLoad,1,55:ir.InstICmp
55:ir.InstICmp,2,54:ir.InstLoad
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,35:ir.InstStore
35:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,43:ir.InstLoad
43:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,47:ir.InstLoad
47:ir.InstLoad,2,1:ir.InstAlloca
28:ir.InstCall,1,29:ir.InstXor
29:ir.InstXor,2,28:ir.InstCall
30:ir.InstSub,1,31:ir.InstSub
31:ir.InstSub,2,30:ir.InstSub
49:ir.InstGetElementPtr,1,50:ir.InstStore
50:ir.InstStore,2,49:ir.InstGetElementPtr
31:ir.InstSub,1,34:ir.InstPhi
34:ir.InstPhi,2,31:ir.InstSub
14:ir.InstCall,1,15:ir.InstShl
15:ir.InstShl,2,14:ir.InstCall
19:ir.InstCall,1,20:ir.InstXor
20:ir.InstXor,2,19:ir.InstCall
27:ir.InstXor,1,29:ir.InstXor
29:ir.InstXor,2,27:ir.InstXor
29:ir.InstXor,1,30:ir.InstSub
30:ir.InstSub,2,29:ir.InstXor
25:ir.InstCall,1,26:ir.InstShl
26:ir.InstShl,2,25:ir.InstCall
24:ir.InstShl,1,27:ir.InstXor
27:ir.InstXor,2,24:ir.InstShl
61:ir.InstLoad,1,62:ir.InstCall
62:ir.InstCall,2,61:ir.InstLoad
20:ir.InstXor,1,34:ir.InstPhi
34:ir.InstPhi,2,20:ir.InstXor
47:ir.InstLoad,1,48:ir.InstSExt
48:ir.InstSExt,2,47:ir.InstLoad
66:ir.InstAdd,1,67:ir.InstStore
67:ir.InstStore,2,66:ir.InstAdd
2:ir.InstAlloca,1,51:ir.InstStore
51:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,54:ir.InstLoad
54:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,58:ir.InstLoad
58:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,65:ir.InstLoad
65:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,67:ir.InstStore
67:ir.InstStore,2,2:ir.InstAlloca
16:ir.InstCall,1,17:ir.InstShl
17:ir.InstShl,2,16:ir.InstCall
15:ir.InstShl,1,18:ir.InstXor
18:ir.InstXor,2,15:ir.InstShl
3:ir.InstAlloca,1,41:ir.InstBitCast
41:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,49:ir.InstGetElementPtr
49:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,60:ir.InstGetElementPtr
60:ir.InstGetElementPtr,2,3:ir.InstAlloca
41:ir.InstBitCast,1,42:ir.InstCall
42:ir.InstCall,2,41:ir.InstBitCast
43:ir.InstLoad,1,44:ir.InstICmp
44:ir.InstICmp,2,43:ir.InstLoad
9:ir.InstCall,1,10:ir.InstAnd
10:ir.InstAnd,2,9:ir.InstCall
18:ir.InstXor,1,20:ir.InstXor
20:ir.InstXor,2,18:ir.InstXor
26:ir.InstShl,1,27:ir.InstXor
27:ir.InstXor,2,26:ir.InstShl
34:ir.InstPhi,1,35:ir.InstStore
35:ir.InstStore,2,34:ir.InstPhi
12:ir.TermCondBr,2,11:ir.InstICmp
11:ir.InstICmp,1,12:ir.TermCondBr
45:ir.TermCondBr,2,44:ir.InstICmp
44:ir.InstICmp,1,45:ir.TermCondBr
56:ir.TermCondBr,2,55:ir.InstICmp
55:ir.InstICmp,1,56:ir.TermCondBr
