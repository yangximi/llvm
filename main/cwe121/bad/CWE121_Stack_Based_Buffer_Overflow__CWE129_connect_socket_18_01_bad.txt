? 118
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstCall ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstTrunc ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ir.InstGetElementPtr ir.InstStore ir.InstBitCast ir.InstCall ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr ir.InstGetElementPtr ir.InstBitCast |LocalIdent:{ 3};ElemType:%struct.sockaddr_in;NElems:<nil>;Typ:%struct.sockaddr_in*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstCall ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ir.InstCall ;ir.InstGetElementPtr ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[14 x i8];NElems:<nil>;Typ:[14 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 6};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 7};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !31 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !33];
[MOV] 9:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !34];
[MOV] 10:ir.TermBr; |Target:label %8;Successors:[label %8];Metadata:[!dbg !35];
[MOV] 11:ir.Block; label %8|
[MOV] 12:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata)* @llvm.dbg.label;Args:[metadata !36];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !37];
[MOV] 13:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !38 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !40];
[MOV] 14:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %struct.sockaddr_in* %3 metadata !41 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !61];
[MOV] 15:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !62 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !63];
[MOV] 16:ir.InstStore; ;|Src:i32 -1;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !63];
[MOV] 17:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [14 x i8]* %5 metadata !64 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !65];
[MOV] 18:ir.TermBr; |Target:label %9;Successors:[label %9];Metadata:[!dbg !66];
[MOV] 19:ir.Block; label %9|
[MOV] 20:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 10};Callee:i32 (i32, i32, i32)* @socket;Args:[i32 2 i32 1 i32 6];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !67];
[MOV] 21:ir.InstStore; ;|Src:i32 %10;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !69];
[MOV] 22:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 11};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !70];
[MOV] 23:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 12};Pred:eq;X:i32 %11;Y:i32 -1;Typ:i1;Metadata:[!dbg !72];
[MOV] 24:ir.TermCondBr; ir.InstICmp|Cond:i1 %12;TargetTrue:label %13;TargetFalse:label %14;Successors:[label %13 label %14];Metadata:[!dbg !73];
[MOV] 25:ir.Block; label %13|
[MOV] 26:ir.TermBr; |Target:label %43;Successors:[label %43];Metadata:[!dbg !74];
[MOV] 27:ir.Block; label %14|
[MOV] 28:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 15};From:%struct.sockaddr_in* %3;To:i8*;Metadata:[!dbg !76];
[MOV] 29:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 4 %15 i8 0 i64 16 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !76];
[MOV] 30:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 16};ElemType:%struct.sockaddr_in;Src:%struct.sockaddr_in* %3;Indices:[i32 0 i32 1];Typ:i8*;InBounds:true;Metadata:[!dbg !77];
[MOV] 31:ir.InstStore; ;|Src:i8 2;Dst:i8* %16;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !78];
[MOV] 32:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 17};Callee:i32 (i8*)* @inet_addr;Args:[i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !79];
[MOV] 33:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 18};ElemType:%struct.sockaddr_in;Src:%struct.sockaddr_in* %3;Indices:[i32 0 i32 3];Typ:%struct.in_addr*;InBounds:true;Metadata:[!dbg !80];
[MOV] 34:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstCall ;ir.InstStore |LocalIdent:{ 19};ElemType:%struct.in_addr;Src:%struct.in_addr* %18;Indices:[i32 0 i32 0];Typ:i32*;InBounds:true;Metadata:[!dbg !81];
[MOV] 35:ir.InstStore; ;|Src:i32 %17;Dst:i32* %19;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !82];
[MOV] 36:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 20};ElemType:%struct.sockaddr_in;Src:%struct.sockaddr_in* %3;Indices:[i32 0 i32 2];Typ:i16*;InBounds:true;Metadata:[!dbg !83];
[MOV] 37:ir.InstStore; ;|Src:i16 -30871;Dst:i16* %20;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 2;Metadata:[!dbg !84];
[MOV] 38:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 21};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !85];
[MOV] 39:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 22};From:%struct.sockaddr_in* %3;To:%struct.sockaddr*;Metadata:[!dbg !87];
[MOV] 40:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 23};Callee:i32 (i32, %struct.sockaddr*, i32)* @"\01_connect";Args:[i32 %21 %struct.sockaddr* %22 i32 16];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !88];
[MOV] 41:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 24};Pred:eq;X:i32 %23;Y:i32 -1;Typ:i1;Metadata:[!dbg !89];
[MOV] 42:ir.TermCondBr; ir.InstICmp|Cond:i1 %24;TargetTrue:label %25;TargetFalse:label %26;Successors:[label %25 label %26];Metadata:[!dbg !90];
[MOV] 43:ir.Block; label %25|
[MOV] 44:ir.TermBr; |Target:label %43;Successors:[label %43];Metadata:[!dbg !91];
[MOV] 45:ir.Block; label %26|
[MOV] 46:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 27};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !93];
[MOV] 47:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 28};ElemType:[14 x i8];Src:[14 x i8]* %5;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !94];
[MOV] 48:ir.InstCall; ir.InstCall ;ir.InstTrunc |LocalIdent:{ 29};Callee:i64 (i32, i8*, i64, i32)* @"\01_recv";Args:[i32 %27 i8* %28 i64 13 i32 0];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !95];
[MOV] 49:ir.InstTrunc; ir.InstTrunc ;ir.InstStore |LocalIdent:{ 30};From:i64 %29;To:i32;Metadata:[!dbg !95];
[MOV] 50:ir.InstStore; ;|Src:i32 %30;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !96];
[MOV] 51:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 31};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !97];
[MOV] 52:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 32};Pred:eq;X:i32 %31;Y:i32 -1;Typ:i1;Metadata:[!dbg !99];
[MOV] 53:ir.TermCondBr; ir.InstICmp|Cond:i1 %32;TargetTrue:label %36;TargetFalse:label %33;Successors:[label %36 label %33];Metadata:[!dbg !100];
[MOV] 54:ir.Block; label %33|
[MOV] 55:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 34};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !101];
[MOV] 56:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 35};Pred:eq;X:i32 %34;Y:i32 0;Typ:i1;Metadata:[!dbg !102];
[MOV] 57:ir.TermCondBr; ir.InstICmp|Cond:i1 %35;TargetTrue:label %36;TargetFalse:label %37;Successors:[label %36 label %37];Metadata:[!dbg !103];
[MOV] 58:ir.Block; label %36|
[MOV] 59:ir.TermBr; |Target:label %43;Successors:[label %43];Metadata:[!dbg !104];
[MOV] 60:ir.Block; label %37|
[MOV] 61:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 38};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !106];
[MOV] 62:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 39};From:i32 %38;To:i64;Metadata:[!dbg !107];
[MOV] 63:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 40};ElemType:[14 x i8];Src:[14 x i8]* %5;Indices:[i64 0 i64 %39];Typ:i8*;InBounds:true;Metadata:[!dbg !107];
[MOV] 64:ir.InstStore; ;|Src:i8 0;Dst:i8* %40;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !108];
[MOV] 65:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 41};ElemType:[14 x i8];Src:[14 x i8]* %5;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !109];
[MOV] 66:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 42};Callee:i32 (i8*)* @atoi;Args:[i8* %41];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !110];
[MOV] 67:ir.InstStore; ;|Src:i32 %42;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !111];
[MOV] 68:ir.TermBr; |Target:label %43;Successors:[label %43];Metadata:[!dbg !112];
[MOV] 69:ir.Block; label %43|
[MOV] 70:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 44};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !113];
[MOV] 71:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 45};Pred:ne;X:i32 %44;Y:i32 -1;Typ:i1;Metadata:[!dbg !115];
[MOV] 72:ir.TermCondBr; ir.InstICmp|Cond:i1 %45;TargetTrue:label %46;TargetFalse:label %49;Successors:[label %46 label %49];Metadata:[!dbg !116];
[MOV] 73:ir.Block; label %46|
[MOV] 74:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 47};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !117];
[MOV] 75:ir.InstCall; ir.InstCall ;|LocalIdent:{ 48};Callee:i32 (i32)* @"\01_close";Args:[i32 %47];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !119];
[MOV] 76:ir.TermBr; |Target:label %49;Successors:[label %49];Metadata:[!dbg !120];
[MOV] 77:ir.Block; label %49|
[MOV] 78:ir.TermBr; |Target:label %50;Successors:[label %50];Metadata:[!dbg !121];
[MOV] 79:ir.Block; label %50|
[MOV] 80:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata)* @llvm.dbg.label;Args:[metadata !122];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !123];
[MOV] 81:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %6 metadata !124 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !126];
[MOV] 82:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %7 metadata !127 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !131];
[MOV] 83:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 51};From:[10 x i32]* %7;To:i8*;Metadata:[!dbg !131];
[MOV] 84:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %51 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !131];
[MOV] 85:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 52};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !132];
[MOV] 86:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 53};Pred:sge;X:i32 %52;Y:i32 0;Typ:i1;Metadata:[!dbg !134];
[DEL] 87:ir.TermCondBr; ir.InstICmp|Cond:i1 %53;TargetTrue:label %54;TargetFalse:label %70;Successors:[label %54 label %70];Metadata:[!dbg !135];
[MOV] 88:ir.Block; label %54|
[MOV] 89:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 55};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !136];
[MOV] 90:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 56};From:i32 %55;To:i64;Metadata:[!dbg !138];
[MOV] 91:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 57};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %56];Typ:i32*;InBounds:true;Metadata:[!dbg !138];
[MOV] 92:ir.InstStore; ;|Src:i32 1;Dst:i32* %57;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !139];
[MOV] 93:ir.InstStore; ;|Src:i32 0;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !140];
[MOV] 94:ir.TermBr; |Target:label %58;Successors:[label %58];Metadata:[!dbg !142];
[MOV] 95:ir.Block; label %58|
[MOV] 96:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 59};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !143];
[MOV] 97:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 60};Pred:slt;X:i32 %59;Y:i32 10;Typ:i1;Metadata:[!dbg !145];
[MOV] 98:ir.TermCondBr; ir.InstICmp|Cond:i1 %60;TargetTrue:label %61;TargetFalse:label %69;Successors:[label %61 label %69];Metadata:[!dbg !146];
[MOV] 99:ir.Block; label %61|
[MOV] 100:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 62};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !147];
[MOV] 101:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 63};From:i32 %62;To:i64;Metadata:[!dbg !149];
[MOV] 102:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 64};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %63];Typ:i32*;InBounds:true;Metadata:[!dbg !149];
[MOV] 103:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 65};ElemType:i32;Src:i32* %64;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !149];
[MOV] 104:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %65];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !150];
[MOV] 105:ir.TermBr; |Target:label %66;Successors:[label %66];Metadata:[!dbg !151];
[MOV] 106:ir.Block; label %66|
[MOV] 107:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 67};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !152];
[MOV] 108:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 68};X:i32 %67;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !152];
[MOV] 109:ir.InstStore; ;|Src:i32 %68;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !152];
[MOV] 110:ir.TermBr; label %58|Target:label %58;Successors:[label %58];Metadata:[!dbg !153 !llvm.loop !154];
[MOV] 111:ir.Block; label %69|
[MOV] 112:ir.TermBr; |Target:label %71;Successors:[label %71];Metadata:[!dbg !156];
[MOV] 113:ir.Block; label %70|
[MOV] 114:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !157];
[MOV] 115:ir.TermBr; |Target:label %71;Successors:[label %71];Metadata:[];
[MOV] 116:ir.Block; label %71|
[MOV] 117:ir.TermRet; |X:<nil>;Metadata:[!dbg !159];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstAlloca
6:ir.InstAlloca,3,7:ir.InstAlloca
0:ir.Block,4,8:ir.InstCall
7:ir.InstAlloca,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstStore
8:ir.InstCall,3,9:ir.InstStore
9:ir.InstStore,3,10:ir.TermBr
10:ir.TermBr,5,11:ir.Block
10:ir.TermBr,3,11:ir.Block
11:ir.Block,4,12:ir.InstCall
11:ir.Block,3,12:ir.InstCall
11:ir.Block,4,13:ir.InstCall
12:ir.InstCall,3,13:ir.InstCall
11:ir.Block,4,14:ir.InstCall
13:ir.InstCall,3,14:ir.InstCall
11:ir.Block,4,15:ir.InstCall
14:ir.InstCall,3,15:ir.InstCall
11:ir.Block,4,16:ir.InstStore
15:ir.InstCall,3,16:ir.InstStore
11:ir.Block,4,17:ir.InstCall
16:ir.InstStore,3,17:ir.InstCall
17:ir.InstCall,3,18:ir.TermBr
18:ir.TermBr,5,19:ir.Block
18:ir.TermBr,3,19:ir.Block
19:ir.Block,4,20:ir.InstCall
19:ir.Block,3,20:ir.InstCall
19:ir.Block,4,21:ir.InstStore
20:ir.InstCall,3,21:ir.InstStore
19:ir.Block,4,22:ir.InstLoad
21:ir.InstStore,3,22:ir.InstLoad
19:ir.Block,4,23:ir.InstICmp
22:ir.InstLoad,3,23:ir.InstICmp
23:ir.InstICmp,3,24:ir.TermCondBr
24:ir.TermCondBr,5,25:ir.Block
24:ir.TermCondBr,3,25:ir.Block
24:ir.TermCondBr,5,27:ir.Block
24:ir.TermCondBr,3,27:ir.Block
25:ir.Block,3,26:ir.TermBr
26:ir.TermBr,5,69:ir.Block
26:ir.TermBr,3,69:ir.Block
27:ir.Block,4,28:ir.InstBitCast
27:ir.Block,3,28:ir.InstBitCast
27:ir.Block,4,29:ir.InstCall
28:ir.InstBitCast,3,29:ir.InstCall
27:ir.Block,4,30:ir.InstGetElementPtr
29:ir.InstCall,3,30:ir.InstGetElementPtr
27:ir.Block,4,31:ir.InstStore
30:ir.InstGetElementPtr,3,31:ir.InstStore
27:ir.Block,4,32:ir.InstCall
31:ir.InstStore,3,32:ir.InstCall
27:ir.Block,4,33:ir.InstGetElementPtr
32:ir.InstCall,3,33:ir.InstGetElementPtr
27:ir.Block,4,34:ir.InstGetElementPtr
33:ir.InstGetElementPtr,3,34:ir.InstGetElementPtr
27:ir.Block,4,35:ir.InstStore
34:ir.InstGetElementPtr,3,35:ir.InstStore
27:ir.Block,4,36:ir.InstGetElementPtr
35:ir.InstStore,3,36:ir.InstGetElementPtr
27:ir.Block,4,37:ir.InstStore
36:ir.InstGetElementPtr,3,37:ir.InstStore
27:ir.Block,4,38:ir.InstLoad
37:ir.InstStore,3,38:ir.InstLoad
27:ir.Block,4,39:ir.InstBitCast
38:ir.InstLoad,3,39:ir.InstBitCast
27:ir.Block,4,40:ir.InstCall
39:ir.InstBitCast,3,40:ir.InstCall
27:ir.Block,4,41:ir.InstICmp
40:ir.InstCall,3,41:ir.InstICmp
41:ir.InstICmp,3,42:ir.TermCondBr
42:ir.TermCondBr,5,43:ir.Block
42:ir.TermCondBr,3,43:ir.Block
42:ir.TermCondBr,5,45:ir.Block
42:ir.TermCondBr,3,45:ir.Block
43:ir.Block,3,44:ir.TermBr
44:ir.TermBr,5,69:ir.Block
44:ir.TermBr,3,69:ir.Block
45:ir.Block,4,46:ir.InstLoad
45:ir.Block,3,46:ir.InstLoad
45:ir.Block,4,47:ir.InstGetElementPtr
46:ir.InstLoad,3,47:ir.InstGetElementPtr
45:ir.Block,4,48:ir.InstCall
47:ir.InstGetElementPtr,3,48:ir.InstCall
45:ir.Block,4,49:ir.InstTrunc
48:ir.InstCall,3,49:ir.InstTrunc
45:ir.Block,4,50:ir.InstStore
49:ir.InstTrunc,3,50:ir.InstStore
45:ir.Block,4,51:ir.InstLoad
50:ir.InstStore,3,51:ir.InstLoad
45:ir.Block,4,52:ir.InstICmp
51:ir.InstLoad,3,52:ir.InstICmp
52:ir.InstICmp,3,53:ir.TermCondBr
53:ir.TermCondBr,5,58:ir.Block
53:ir.TermCondBr,3,58:ir.Block
53:ir.TermCondBr,5,54:ir.Block
53:ir.TermCondBr,3,54:ir.Block
54:ir.Block,4,55:ir.InstLoad
54:ir.Block,3,55:ir.InstLoad
54:ir.Block,4,56:ir.InstICmp
55:ir.InstLoad,3,56:ir.InstICmp
56:ir.InstICmp,3,57:ir.TermCondBr
57:ir.TermCondBr,5,58:ir.Block
57:ir.TermCondBr,3,58:ir.Block
57:ir.TermCondBr,5,60:ir.Block
57:ir.TermCondBr,3,60:ir.Block
58:ir.Block,3,59:ir.TermBr
59:ir.TermBr,5,69:ir.Block
59:ir.TermBr,3,69:ir.Block
60:ir.Block,4,61:ir.InstLoad
60:ir.Block,3,61:ir.InstLoad
60:ir.Block,4,62:ir.InstSExt
61:ir.InstLoad,3,62:ir.InstSExt
60:ir.Block,4,63:ir.InstGetElementPtr
62:ir.InstSExt,3,63:ir.InstGetElementPtr
60:ir.Block,4,64:ir.InstStore
63:ir.InstGetElementPtr,3,64:ir.InstStore
60:ir.Block,4,65:ir.InstGetElementPtr
64:ir.InstStore,3,65:ir.InstGetElementPtr
60:ir.Block,4,66:ir.InstCall
65:ir.InstGetElementPtr,3,66:ir.InstCall
60:ir.Block,4,67:ir.InstStore
66:ir.InstCall,3,67:ir.InstStore
67:ir.InstStore,3,68:ir.TermBr
68:ir.TermBr,5,69:ir.Block
68:ir.TermBr,3,69:ir.Block
69:ir.Block,4,70:ir.InstLoad
69:ir.Block,3,70:ir.InstLoad
69:ir.Block,4,71:ir.InstICmp
70:ir.InstLoad,3,71:ir.InstICmp
71:ir.InstICmp,3,72:ir.TermCondBr
72:ir.TermCondBr,5,73:ir.Block
72:ir.TermCondBr,3,73:ir.Block
72:ir.TermCondBr,5,77:ir.Block
72:ir.TermCondBr,3,77:ir.Block
73:ir.Block,4,74:ir.InstLoad
73:ir.Block,3,74:ir.InstLoad
73:ir.Block,4,75:ir.InstCall
74:ir.InstLoad,3,75:ir.InstCall
75:ir.InstCall,3,76:ir.TermBr
76:ir.TermBr,5,77:ir.Block
76:ir.TermBr,3,77:ir.Block
77:ir.Block,3,78:ir.TermBr
78:ir.TermBr,5,79:ir.Block
78:ir.TermBr,3,79:ir.Block
79:ir.Block,4,80:ir.InstCall
79:ir.Block,3,80:ir.InstCall
79:ir.Block,4,81:ir.InstCall
80:ir.InstCall,3,81:ir.InstCall
79:ir.Block,4,82:ir.InstCall
81:ir.InstCall,3,82:ir.InstCall
79:ir.Block,4,83:ir.InstBitCast
82:ir.InstCall,3,83:ir.InstBitCast
79:ir.Block,4,84:ir.InstCall
83:ir.InstBitCast,3,84:ir.InstCall
79:ir.Block,4,85:ir.InstLoad
84:ir.InstCall,3,85:ir.InstLoad
79:ir.Block,4,86:ir.InstICmp
85:ir.InstLoad,3,86:ir.InstICmp
86:ir.InstICmp,3,87:ir.TermCondBr
87:ir.TermCondBr,5,88:ir.Block
87:ir.TermCondBr,3,88:ir.Block
87:ir.TermCondBr,5,113:ir.Block
87:ir.TermCondBr,3,113:ir.Block
88:ir.Block,4,89:ir.InstLoad
88:ir.Block,3,89:ir.InstLoad
88:ir.Block,4,90:ir.InstSExt
89:ir.InstLoad,3,90:ir.InstSExt
88:ir.Block,4,91:ir.InstGetElementPtr
90:ir.InstSExt,3,91:ir.InstGetElementPtr
88:ir.Block,4,92:ir.InstStore
91:ir.InstGetElementPtr,3,92:ir.InstStore
88:ir.Block,4,93:ir.InstStore
92:ir.InstStore,3,93:ir.InstStore
93:ir.InstStore,3,94:ir.TermBr
94:ir.TermBr,5,95:ir.Block
94:ir.TermBr,3,95:ir.Block
95:ir.Block,4,96:ir.InstLoad
95:ir.Block,3,96:ir.InstLoad
95:ir.Block,4,97:ir.InstICmp
96:ir.InstLoad,3,97:ir.InstICmp
97:ir.InstICmp,3,98:ir.TermCondBr
98:ir.TermCondBr,5,99:ir.Block
98:ir.TermCondBr,3,99:ir.Block
98:ir.TermCondBr,5,111:ir.Block
98:ir.TermCondBr,3,111:ir.Block
99:ir.Block,4,100:ir.InstLoad
99:ir.Block,3,100:ir.InstLoad
99:ir.Block,4,101:ir.InstSExt
100:ir.InstLoad,3,101:ir.InstSExt
99:ir.Block,4,102:ir.InstGetElementPtr
101:ir.InstSExt,3,102:ir.InstGetElementPtr
99:ir.Block,4,103:ir.InstLoad
102:ir.InstGetElementPtr,3,103:ir.InstLoad
99:ir.Block,4,104:ir.InstCall
103:ir.InstLoad,3,104:ir.InstCall
104:ir.InstCall,3,105:ir.TermBr
105:ir.TermBr,5,106:ir.Block
105:ir.TermBr,3,106:ir.Block
106:ir.Block,4,107:ir.InstLoad
106:ir.Block,3,107:ir.InstLoad
106:ir.Block,4,108:ir.InstAdd
107:ir.InstLoad,3,108:ir.InstAdd
106:ir.Block,4,109:ir.InstStore
108:ir.InstAdd,3,109:ir.InstStore
109:ir.InstStore,3,110:ir.TermBr
110:ir.TermBr,5,95:ir.Block
110:ir.TermBr,3,95:ir.Block
111:ir.Block,3,112:ir.TermBr
112:ir.TermBr,5,116:ir.Block
112:ir.TermBr,3,116:ir.Block
113:ir.Block,4,114:ir.InstCall
113:ir.Block,3,114:ir.InstCall
114:ir.InstCall,3,115:ir.TermBr
115:ir.TermBr,5,116:ir.Block
115:ir.TermBr,3,116:ir.Block
116:ir.Block,3,117:ir.TermRet
65:ir.InstGetElementPtr,1,66:ir.InstCall
66:ir.InstCall,2,65:ir.InstGetElementPtr
91:ir.InstGetElementPtr,1,92:ir.InstStore
92:ir.InstStore,2,91:ir.InstGetElementPtr
6:ir.InstAlloca,1,93:ir.InstStore
93:ir.InstStore,2,6:ir.InstAlloca
6:ir.InstAlloca,1,96:ir.InstLoad
96:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,100:ir.InstLoad
100:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,107:ir.InstLoad
107:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,109:ir.InstStore
109:ir.InstStore,2,6:ir.InstAlloca
4:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,21:ir.InstStore
21:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,22:ir.InstLoad
22:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,38:ir.InstLoad
38:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,46:ir.InstLoad
46:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,70:ir.InstLoad
70:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,74:ir.InstLoad
74:ir.InstLoad,2,4:ir.InstAlloca
30:ir.InstGetElementPtr,1,31:ir.InstStore
31:ir.InstStore,2,30:ir.InstGetElementPtr
49:ir.InstTrunc,1,50:ir.InstStore
50:ir.InstStore,2,49:ir.InstTrunc
51:ir.InstLoad,1,52:ir.InstICmp
52:ir.InstICmp,2,51:ir.InstLoad
74:ir.InstLoad,1,75:ir.InstCall
75:ir.InstCall,2,74:ir.InstLoad
85:ir.InstLoad,1,86:ir.InstICmp
86:ir.InstICmp,2,85:ir.InstLoad
1:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,67:ir.InstStore
67:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,85:ir.InstLoad
85:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,89:ir.InstLoad
89:ir.InstLoad,2,1:ir.InstAlloca
28:ir.InstBitCast,1,29:ir.InstCall
29:ir.InstCall,2,28:ir.InstBitCast
40:ir.InstCall,1,41:ir.InstICmp
41:ir.InstICmp,2,40:ir.InstCall
108:ir.InstAdd,1,109:ir.InstStore
109:ir.InstStore,2,108:ir.InstAdd
2:ir.InstAlloca,1,50:ir.InstStore
50:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,51:ir.InstLoad
51:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,55:ir.InstLoad
55:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,61:ir.InstLoad
61:ir.InstLoad,2,2:ir.InstAlloca
83:ir.InstBitCast,1,84:ir.InstCall
84:ir.InstCall,2,83:ir.InstBitCast
100:ir.InstLoad,1,101:ir.InstSExt
101:ir.InstSExt,2,100:ir.InstLoad
5:ir.InstAlloca,1,47:ir.InstGetElementPtr
47:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,63:ir.InstGetElementPtr
63:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,65:ir.InstGetElementPtr
65:ir.InstGetElementPtr,2,5:ir.InstAlloca
48:ir.InstCall,1,49:ir.InstTrunc
49:ir.InstTrunc,2,48:ir.InstCall
61:ir.InstLoad,1,62:ir.InstSExt
62:ir.InstSExt,2,61:ir.InstLoad
66:ir.InstCall,1,67:ir.InstStore
67:ir.InstStore,2,66:ir.InstCall
70:ir.InstLoad,1,71:ir.InstICmp
71:ir.InstICmp,2,70:ir.InstLoad
33:ir.InstGetElementPtr,1,34:ir.InstGetElementPtr
34:ir.InstGetElementPtr,2,33:ir.InstGetElementPtr
36:ir.InstGetElementPtr,1,37:ir.InstStore
37:ir.InstStore,2,36:ir.InstGetElementPtr
38:ir.InstLoad,1,40:ir.InstCall
40:ir.InstCall,2,38:ir.InstLoad
107:ir.InstLoad,1,108:ir.InstAdd
108:ir.InstAdd,2,107:ir.InstLoad
7:ir.InstAlloca,1,83:ir.InstBitCast
83:ir.InstBitCast,2,7:ir.InstAlloca
7:ir.InstAlloca,1,91:ir.InstGetElementPtr
91:ir.InstGetElementPtr,2,7:ir.InstAlloca
7:ir.InstAlloca,1,102:ir.InstGetElementPtr
102:ir.InstGetElementPtr,2,7:ir.InstAlloca
3:ir.InstAlloca,1,28:ir.InstBitCast
28:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,30:ir.InstGetElementPtr
30:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,33:ir.InstGetElementPtr
33:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,36:ir.InstGetElementPtr
36:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,39:ir.InstBitCast
39:ir.InstBitCast,2,3:ir.InstAlloca
34:ir.InstGetElementPtr,1,35:ir.InstStore
35:ir.InstStore,2,34:ir.InstGetElementPtr
63:ir.InstGetElementPtr,1,64:ir.InstStore
64:ir.InstStore,2,63:ir.InstGetElementPtr
47:ir.InstGetElementPtr,1,48:ir.InstCall
48:ir.InstCall,2,47:ir.InstGetElementPtr
102:ir.InstGetElementPtr,1,103:ir.InstLoad
103:ir.InstLoad,2,102:ir.InstGetElementPtr
32:ir.InstCall,1,35:ir.InstStore
35:ir.InstStore,2,32:ir.InstCall
39:ir.InstBitCast,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstBitCast
46:ir.InstLoad,1,48:ir.InstCall
48:ir.InstCall,2,46:ir.InstLoad
20:ir.InstCall,1,21:ir.InstStore
21:ir.InstStore,2,20:ir.InstCall
96:ir.InstLoad,1,97:ir.InstICmp
97:ir.InstICmp,2,96:ir.InstLoad
103:ir.InstLoad,1,104:ir.InstCall
104:ir.InstCall,2,103:ir.InstLoad
22:ir.InstLoad,1,23:ir.InstICmp
23:ir.InstICmp,2,22:ir.InstLoad
55:ir.InstLoad,1,56:ir.InstICmp
56:ir.InstICmp,2,55:ir.InstLoad
89:ir.InstLoad,1,90:ir.InstSExt
90:ir.InstSExt,2,89:ir.InstLoad
53:ir.TermCondBr,2,52:ir.InstICmp
52:ir.InstICmp,1,53:ir.TermCondBr
57:ir.TermCondBr,2,56:ir.InstICmp
56:ir.InstICmp,1,57:ir.TermCondBr
72:ir.TermCondBr,2,71:ir.InstICmp
71:ir.InstICmp,1,72:ir.TermCondBr
87:ir.TermCondBr,2,86:ir.InstICmp
86:ir.InstICmp,1,87:ir.TermCondBr
98:ir.TermCondBr,2,97:ir.InstICmp
97:ir.InstICmp,1,98:ir.TermCondBr
24:ir.TermCondBr,2,23:ir.InstICmp
23:ir.InstICmp,1,24:ir.TermCondBr
42:ir.TermCondBr,2,41:ir.InstICmp
41:ir.InstICmp,1,42:ir.TermCondBr
