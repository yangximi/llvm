? 82
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstPhi ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !14 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 5:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !16];
[MOV] 6:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 4};ElemType:i32;Src:i32* @GLOBAL_CONST_FIVE;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !17];
[MOV] 7:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 5};Pred:eq;X:i32 %4;Y:i32 5;Typ:i1;Metadata:[!dbg !19];
[DEL] 8:ir.TermCondBr; ir.InstICmp|Cond:i1 %5;TargetTrue:label %6;TargetFalse:label %30;Successors:[label %6 label %30];Metadata:[!dbg !20];
[DEL] 9:ir.Block; label %6|
[DEL] 10:ir.InstCall; ir.InstCall ;ir.InstAnd |LocalIdent:{ 7};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[DEL] 11:ir.InstAnd; ir.InstAnd ;ir.InstICmp |LocalIdent:{ 8};X:i32 %7;Y:i32 1;Typ:i32;Metadata:[!dbg !21];
[DEL] 12:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:ne;X:i32 %8;Y:i32 0;Typ:i1;Metadata:[!dbg !21];
[DEL] 13:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %18;Successors:[label %10 label %18];Metadata:[!dbg !21];
[DEL] 14:ir.Block; label %10|
[DEL] 15:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 11};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[DEL] 16:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 12};X:i32 %11;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !21];
[DEL] 17:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 13};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[DEL] 18:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 14};X:i32 %13;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !21];
[DEL] 19:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 15};X:i32 %12;Y:i32 %14;Typ:i32;Metadata:[!dbg !21];
[DEL] 20:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 16};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[DEL] 21:ir.InstXor; ir.InstXor ;ir.InstPhi |LocalIdent:{ 17};X:i32 %15;Y:i32 %16;Typ:i32;Metadata:[!dbg !21];
[DEL] 22:ir.TermBr; |Target:label %28;Successors:[label %28];Metadata:[!dbg !21];
[DEL] 23:ir.Block; label %18|
[DEL] 24:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 19};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[DEL] 25:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 20};X:i32 %19;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !21];
[DEL] 26:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 21};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[DEL] 27:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 22};X:i32 %21;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !21];
[DEL] 28:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 23};X:i32 %20;Y:i32 %22;Typ:i32;Metadata:[!dbg !21];
[DEL] 29:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 24};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[DEL] 30:ir.InstXor; ir.InstXor ;ir.InstSub |LocalIdent:{ 25};X:i32 %23;Y:i32 %24;Typ:i32;Metadata:[!dbg !21];
[DEL] 31:ir.InstSub; ir.InstSub ;ir.InstSub |LocalIdent:{ 26};X:i32 0;Y:i32 %25;Typ:i32;OverflowFlags:[];Metadata:[!dbg !21];
[DEL] 32:ir.InstSub; ir.InstSub ;ir.InstPhi |LocalIdent:{ 27};X:i32 %26;Y:i32 1;Typ:i32;OverflowFlags:[];Metadata:[!dbg !21];
[DEL] 33:ir.TermBr; |Target:label %28;Successors:[label %28];Metadata:[!dbg !21];
[MOV] 34:ir.Block; label %28|
[DEL] 35:ir.InstPhi; ir.InstPhi ;ir.InstStore |LocalIdent:{ 29};Incs:[[ %17, %10 ] [ %27, %18 ]];Typ:i32;FastMathFlags:[];Metadata:[!dbg !21];
[DEL] 36:ir.InstStore; ;|Src:i32 %29;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !23];
[MOV] 37:ir.TermBr; |Target:label %30;Successors:[label %30];Metadata:[!dbg !24];
[MOV] 38:ir.Block; label %30|
[MOV] 39:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 31};ElemType:i32;Src:i32* @GLOBAL_CONST_FIVE;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !25];
[MOV] 40:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 32};Pred:eq;X:i32 %31;Y:i32 5;Typ:i1;Metadata:[!dbg !27];
[MOV] 41:ir.TermCondBr; ir.InstICmp|Cond:i1 %32;TargetTrue:label %33;TargetFalse:label %55;Successors:[label %33 label %55];Metadata:[!dbg !28];
[MOV] 42:ir.Block; label %33|
[MOV] 43:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !29 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !32];
[MOV] 44:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !33 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !37];
[MOV] 45:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 34};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !37];
[MOV] 46:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %34 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !37];
[MOV] 47:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 35};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !38];
[MOV] 48:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 36};Pred:sge;X:i32 %35;Y:i32 0;Typ:i1;Metadata:[!dbg !40];
[MOV] 49:ir.TermCondBr; ir.InstICmp|Cond:i1 %36;TargetTrue:label %37;TargetFalse:label %53;Successors:[label %37 label %53];Metadata:[!dbg !41];
[MOV] 50:ir.Block; label %37|
[MOV] 51:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 38};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !42];
[MOV] 52:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 39};From:i32 %38;To:i64;Metadata:[!dbg !44];
[MOV] 53:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 40};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %39];Typ:i32*;InBounds:true;Metadata:[!dbg !44];
[MOV] 54:ir.InstStore; ;|Src:i32 1;Dst:i32* %40;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !45];
[MOV] 55:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !46];
[MOV] 56:ir.TermBr; |Target:label %41;Successors:[label %41];Metadata:[!dbg !48];
[MOV] 57:ir.Block; label %41|
[MOV] 58:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 42};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !49];
[MOV] 59:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 43};Pred:slt;X:i32 %42;Y:i32 10;Typ:i1;Metadata:[!dbg !51];
[MOV] 60:ir.TermCondBr; ir.InstICmp|Cond:i1 %43;TargetTrue:label %44;TargetFalse:label %52;Successors:[label %44 label %52];Metadata:[!dbg !52];
[MOV] 61:ir.Block; label %44|
[MOV] 62:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 45};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !53];
[MOV] 63:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 46};From:i32 %45;To:i64;Metadata:[!dbg !55];
[MOV] 64:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 47};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %46];Typ:i32*;InBounds:true;Metadata:[!dbg !55];
[MOV] 65:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 48};ElemType:i32;Src:i32* %47;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !55];
[MOV] 66:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %48];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !56];
[MOV] 67:ir.TermBr; |Target:label %49;Successors:[label %49];Metadata:[!dbg !57];
[MOV] 68:ir.Block; label %49|
[MOV] 69:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 50};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !58];
[MOV] 70:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 51};X:i32 %50;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !58];
[MOV] 71:ir.InstStore; ;|Src:i32 %51;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !58];
[MOV] 72:ir.TermBr; label %41|Target:label %41;Successors:[label %41];Metadata:[!dbg !59 !llvm.loop !60];
[MOV] 73:ir.Block; label %52|
[MOV] 74:ir.TermBr; |Target:label %54;Successors:[label %54];Metadata:[!dbg !62];
[MOV] 75:ir.Block; label %53|
[MOV] 76:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !63];
[MOV] 77:ir.TermBr; |Target:label %54;Successors:[label %54];Metadata:[];
[MOV] 78:ir.Block; label %54|
[MOV] 79:ir.TermBr; |Target:label %55;Successors:[label %55];Metadata:[!dbg !65];
[MOV] 80:ir.Block; label %55|
[MOV] 81:ir.TermRet; |X:<nil>;Metadata:[!dbg !66];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstStore
4:ir.InstCall,3,5:ir.InstStore
0:ir.Block,4,6:ir.InstLoad
5:ir.InstStore,3,6:ir.InstLoad
0:ir.Block,4,7:ir.InstICmp
6:ir.InstLoad,3,7:ir.InstICmp
7:ir.InstICmp,3,8:ir.TermCondBr
8:ir.TermCondBr,5,9:ir.Block
8:ir.TermCondBr,3,9:ir.Block
8:ir.TermCondBr,5,38:ir.Block
8:ir.TermCondBr,3,38:ir.Block
9:ir.Block,4,10:ir.InstCall
9:ir.Block,3,10:ir.InstCall
9:ir.Block,4,11:ir.InstAnd
10:ir.InstCall,3,11:ir.InstAnd
9:ir.Block,4,12:ir.InstICmp
11:ir.InstAnd,3,12:ir.InstICmp
12:ir.InstICmp,3,13:ir.TermCondBr
13:ir.TermCondBr,5,14:ir.Block
13:ir.TermCondBr,3,14:ir.Block
13:ir.TermCondBr,5,23:ir.Block
13:ir.TermCondBr,3,23:ir.Block
14:ir.Block,4,15:ir.InstCall
14:ir.Block,3,15:ir.InstCall
14:ir.Block,4,16:ir.InstShl
15:ir.InstCall,3,16:ir.InstShl
14:ir.Block,4,17:ir.InstCall
16:ir.InstShl,3,17:ir.InstCall
14:ir.Block,4,18:ir.InstShl
17:ir.InstCall,3,18:ir.InstShl
14:ir.Block,4,19:ir.InstXor
18:ir.InstShl,3,19:ir.InstXor
14:ir.Block,4,20:ir.InstCall
19:ir.InstXor,3,20:ir.InstCall
14:ir.Block,4,21:ir.InstXor
20:ir.InstCall,3,21:ir.InstXor
21:ir.InstXor,3,22:ir.TermBr
22:ir.TermBr,5,34:ir.Block
22:ir.TermBr,3,34:ir.Block
23:ir.Block,4,24:ir.InstCall
23:ir.Block,3,24:ir.InstCall
23:ir.Block,4,25:ir.InstShl
24:ir.InstCall,3,25:ir.InstShl
23:ir.Block,4,26:ir.InstCall
25:ir.InstShl,3,26:ir.InstCall
23:ir.Block,4,27:ir.InstShl
26:ir.InstCall,3,27:ir.InstShl
23:ir.Block,4,28:ir.InstXor
27:ir.InstShl,3,28:ir.InstXor
23:ir.Block,4,29:ir.InstCall
28:ir.InstXor,3,29:ir.InstCall
23:ir.Block,4,30:ir.InstXor
29:ir.InstCall,3,30:ir.InstXor
23:ir.Block,4,31:ir.InstSub
30:ir.InstXor,3,31:ir.InstSub
23:ir.Block,4,32:ir.InstSub
31:ir.InstSub,3,32:ir.InstSub
32:ir.InstSub,3,33:ir.TermBr
33:ir.TermBr,5,34:ir.Block
33:ir.TermBr,3,34:ir.Block
34:ir.Block,4,35:ir.InstPhi
34:ir.Block,3,35:ir.InstPhi
34:ir.Block,4,36:ir.InstStore
35:ir.InstPhi,3,36:ir.InstStore
36:ir.InstStore,3,37:ir.TermBr
37:ir.TermBr,5,38:ir.Block
37:ir.TermBr,3,38:ir.Block
38:ir.Block,4,39:ir.InstLoad
38:ir.Block,3,39:ir.InstLoad
38:ir.Block,4,40:ir.InstICmp
39:ir.InstLoad,3,40:ir.InstICmp
40:ir.InstICmp,3,41:ir.TermCondBr
41:ir.TermCondBr,5,42:ir.Block
41:ir.TermCondBr,3,42:ir.Block
41:ir.TermCondBr,5,80:ir.Block
41:ir.TermCondBr,3,80:ir.Block
42:ir.Block,4,43:ir.InstCall
42:ir.Block,3,43:ir.InstCall
42:ir.Block,4,44:ir.InstCall
43:ir.InstCall,3,44:ir.InstCall
42:ir.Block,4,45:ir.InstBitCast
44:ir.InstCall,3,45:ir.InstBitCast
42:ir.Block,4,46:ir.InstCall
45:ir.InstBitCast,3,46:ir.InstCall
42:ir.Block,4,47:ir.InstLoad
46:ir.InstCall,3,47:ir.InstLoad
42:ir.Block,4,48:ir.InstICmp
47:ir.InstLoad,3,48:ir.InstICmp
48:ir.InstICmp,3,49:ir.TermCondBr
49:ir.TermCondBr,5,50:ir.Block
49:ir.TermCondBr,3,50:ir.Block
49:ir.TermCondBr,5,75:ir.Block
49:ir.TermCondBr,3,75:ir.Block
50:ir.Block,4,51:ir.InstLoad
50:ir.Block,3,51:ir.InstLoad
50:ir.Block,4,52:ir.InstSExt
51:ir.InstLoad,3,52:ir.InstSExt
50:ir.Block,4,53:ir.InstGetElementPtr
52:ir.InstSExt,3,53:ir.InstGetElementPtr
50:ir.Block,4,54:ir.InstStore
53:ir.InstGetElementPtr,3,54:ir.InstStore
50:ir.Block,4,55:ir.InstStore
54:ir.InstStore,3,55:ir.InstStore
55:ir.InstStore,3,56:ir.TermBr
56:ir.TermBr,5,57:ir.Block
56:ir.TermBr,3,57:ir.Block
57:ir.Block,4,58:ir.InstLoad
57:ir.Block,3,58:ir.InstLoad
57:ir.Block,4,59:ir.InstICmp
58:ir.InstLoad,3,59:ir.InstICmp
59:ir.InstICmp,3,60:ir.TermCondBr
60:ir.TermCondBr,5,61:ir.Block
60:ir.TermCondBr,3,61:ir.Block
60:ir.TermCondBr,5,73:ir.Block
60:ir.TermCondBr,3,73:ir.Block
61:ir.Block,4,62:ir.InstLoad
61:ir.Block,3,62:ir.InstLoad
61:ir.Block,4,63:ir.InstSExt
62:ir.InstLoad,3,63:ir.InstSExt
61:ir.Block,4,64:ir.InstGetElementPtr
63:ir.InstSExt,3,64:ir.InstGetElementPtr
61:ir.Block,4,65:ir.InstLoad
64:ir.InstGetElementPtr,3,65:ir.InstLoad
61:ir.Block,4,66:ir.InstCall
65:ir.InstLoad,3,66:ir.InstCall
66:ir.InstCall,3,67:ir.TermBr
67:ir.TermBr,5,68:ir.Block
67:ir.TermBr,3,68:ir.Block
68:ir.Block,4,69:ir.InstLoad
68:ir.Block,3,69:ir.InstLoad
68:ir.Block,4,70:ir.InstAdd
69:ir.InstLoad,3,70:ir.InstAdd
68:ir.Block,4,71:ir.InstStore
70:ir.InstAdd,3,71:ir.InstStore
71:ir.InstStore,3,72:ir.TermBr
72:ir.TermBr,5,57:ir.Block
72:ir.TermBr,3,57:ir.Block
73:ir.Block,3,74:ir.TermBr
74:ir.TermBr,5,78:ir.Block
74:ir.TermBr,3,78:ir.Block
75:ir.Block,4,76:ir.InstCall
75:ir.Block,3,76:ir.InstCall
76:ir.InstCall,3,77:ir.TermBr
77:ir.TermBr,5,78:ir.Block
77:ir.TermBr,3,78:ir.Block
78:ir.Block,3,79:ir.TermBr
79:ir.TermBr,5,80:ir.Block
79:ir.TermBr,3,80:ir.Block
80:ir.Block,3,81:ir.TermRet
1:ir.InstAlloca,1,5:ir.InstStore
5:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,36:ir.InstStore
36:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,47:ir.InstLoad
47:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,51:ir.InstLoad
51:ir.InstLoad,2,1:ir.InstAlloca
2:ir.InstAlloca,1,55:ir.InstStore
55:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,58:ir.InstLoad
58:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,62:ir.InstLoad
62:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,69:ir.InstLoad
69:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,71:ir.InstStore
71:ir.InstStore,2,2:ir.InstAlloca
21:ir.InstXor,1,35:ir.InstPhi
35:ir.InstPhi,2,21:ir.InstXor
3:ir.InstAlloca,1,45:ir.InstBitCast
45:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,53:ir.InstGetElementPtr
53:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,64:ir.InstGetElementPtr
64:ir.InstGetElementPtr,2,3:ir.InstAlloca
53:ir.InstGetElementPtr,1,54:ir.InstStore
54:ir.InstStore,2,53:ir.InstGetElementPtr
15:ir.InstCall,1,16:ir.InstShl
16:ir.InstShl,2,15:ir.InstCall
16:ir.InstShl,1,19:ir.InstXor
19:ir.InstXor,2,16:ir.InstShl
30:ir.InstXor,1,31:ir.InstSub
31:ir.InstSub,2,30:ir.InstXor
32:ir.InstSub,1,35:ir.InstPhi
35:ir.InstPhi,2,32:ir.InstSub
62:ir.InstLoad,1,63:ir.InstSExt
63:ir.InstSExt,2,62:ir.InstLoad
64:ir.InstGetElementPtr,1,65:ir.InstLoad
65:ir.InstLoad,2,64:ir.InstGetElementPtr
39:ir.InstLoad,1,40:ir.InstICmp
40:ir.InstICmp,2,39:ir.InstLoad
70:ir.InstAdd,1,71:ir.InstStore
71:ir.InstStore,2,70:ir.InstAdd
11:ir.InstAnd,1,12:ir.InstICmp
12:ir.InstICmp,2,11:ir.InstAnd
26:ir.InstCall,1,27:ir.InstShl
27:ir.InstShl,2,26:ir.InstCall
35:ir.InstPhi,1,36:ir.InstStore
36:ir.InstStore,2,35:ir.InstPhi
6:ir.InstLoad,1,7:ir.InstICmp
7:ir.InstICmp,2,6:ir.InstLoad
19:ir.InstXor,1,21:ir.InstXor
21:ir.InstXor,2,19:ir.InstXor
24:ir.InstCall,1,25:ir.InstShl
25:ir.InstShl,2,24:ir.InstCall
25:ir.InstShl,1,28:ir.InstXor
28:ir.InstXor,2,25:ir.InstShl
29:ir.InstCall,1,30:ir.InstXor
30:ir.InstXor,2,29:ir.InstCall
31:ir.InstSub,1,32:ir.InstSub
32:ir.InstSub,2,31:ir.InstSub
45:ir.InstBitCast,1,46:ir.InstCall
46:ir.InstCall,2,45:ir.InstBitCast
10:ir.InstCall,1,11:ir.InstAnd
11:ir.InstAnd,2,10:ir.InstCall
18:ir.InstShl,1,19:ir.InstXor
19:ir.InstXor,2,18:ir.InstShl
20:ir.InstCall,1,21:ir.InstXor
21:ir.InstXor,2,20:ir.InstCall
51:ir.InstLoad,1,52:ir.InstSExt
52:ir.InstSExt,2,51:ir.InstLoad
65:ir.InstLoad,1,66:ir.InstCall
66:ir.InstCall,2,65:ir.InstLoad
47:ir.InstLoad,1,48:ir.InstICmp
48:ir.InstICmp,2,47:ir.InstLoad
58:ir.InstLoad,1,59:ir.InstICmp
59:ir.InstICmp,2,58:ir.InstLoad
69:ir.InstLoad,1,70:ir.InstAdd
70:ir.InstAdd,2,69:ir.InstLoad
17:ir.InstCall,1,18:ir.InstShl
18:ir.InstShl,2,17:ir.InstCall
27:ir.InstShl,1,28:ir.InstXor
28:ir.InstXor,2,27:ir.InstShl
28:ir.InstXor,1,30:ir.InstXor
30:ir.InstXor,2,28:ir.InstXor
8:ir.TermCondBr,2,7:ir.InstICmp
7:ir.InstICmp,1,8:ir.TermCondBr
13:ir.TermCondBr,2,12:ir.InstICmp
12:ir.InstICmp,1,13:ir.TermCondBr
41:ir.TermCondBr,2,40:ir.InstICmp
40:ir.InstICmp,1,41:ir.TermCondBr
49:ir.TermCondBr,2,48:ir.InstICmp
48:ir.InstICmp,1,49:ir.TermCondBr
60:ir.TermCondBr,2,59:ir.InstICmp
59:ir.InstICmp,1,60:ir.TermCondBr
