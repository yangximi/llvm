? 67
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstCall ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ir.InstCall ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 2};ElemType:[14 x i8];NElems:<nil>;Typ:[14 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 3};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !14 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !16];
[MOV] 6:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !17];
[MOV] 7:ir.TermBr; |Target:label %5;Successors:[label %5];Metadata:[!dbg !18];
[MOV] 8:ir.Block; label %5|
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata)* @llvm.dbg.label;Args:[metadata !19];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [14 x i8]* %2 metadata !21 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[MOV] 11:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 6};From:[14 x i8]* %2;To:i8*;Metadata:[!dbg !27];
[MOV] 12:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 1 %6 i8 0 i64 14 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[MOV] 13:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 7};ElemType:[14 x i8];Src:[14 x i8]* %2;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !28];
[MOV] 14:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 8};ElemType:%struct.__sFILE*;Src:%struct.__sFILE** @__stdinp;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !30];
[MOV] 15:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 9};Callee:i8* (i8*, i32, %struct.__sFILE*)* @fgets;Args:[i8* %7 i32 14 %struct.__sFILE* %8];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !31];
[MOV] 16:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 10};Pred:ne;X:i8* %9;Y:i8* null;Typ:i1;Metadata:[!dbg !32];
[MOV] 17:ir.TermCondBr; ir.InstICmp|Cond:i1 %10;TargetTrue:label %11;TargetFalse:label %14;Successors:[label %11 label %14];Metadata:[!dbg !33];
[MOV] 18:ir.Block; label %11|
[MOV] 19:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 12};ElemType:[14 x i8];Src:[14 x i8]* %2;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !34];
[MOV] 20:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 13};Callee:i32 (i8*)* @atoi;Args:[i8* %12];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !36];
[MOV] 21:ir.InstStore; ;|Src:i32 %13;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !37];
[MOV] 22:ir.TermBr; |Target:label %15;Successors:[label %15];Metadata:[!dbg !38];
[MOV] 23:ir.Block; label %14|
[MOV] 24:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !39];
[MOV] 25:ir.TermBr; |Target:label %15;Successors:[label %15];Metadata:[];
[MOV] 26:ir.Block; label %15|
[MOV] 27:ir.TermBr; |Target:label %16;Successors:[label %16];Metadata:[!dbg !41];
[MOV] 28:ir.Block; label %16|
[MOV] 29:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata)* @llvm.dbg.label;Args:[metadata !42];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !43];
[MOV] 30:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %3 metadata !44 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !46];
[MOV] 31:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %4 metadata !47 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !51];
[MOV] 32:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 17};From:[10 x i32]* %4;To:i8*;Metadata:[!dbg !51];
[MOV] 33:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %17 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !51];
[MOV] 34:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 18};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !52];
[MOV] 35:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 19};Pred:sge;X:i32 %18;Y:i32 0;Typ:i1;Metadata:[!dbg !54];
[DEL] 36:ir.TermCondBr; ir.InstICmp|Cond:i1 %19;TargetTrue:label %20;TargetFalse:label %36;Successors:[label %20 label %36];Metadata:[!dbg !55];
[MOV] 37:ir.Block; label %20|
[MOV] 38:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 21};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !56];
[MOV] 39:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 22};From:i32 %21;To:i64;Metadata:[!dbg !58];
[MOV] 40:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 23};ElemType:[10 x i32];Src:[10 x i32]* %4;Indices:[i64 0 i64 %22];Typ:i32*;InBounds:true;Metadata:[!dbg !58];
[MOV] 41:ir.InstStore; ;|Src:i32 1;Dst:i32* %23;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !59];
[MOV] 42:ir.InstStore; ;|Src:i32 0;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !60];
[MOV] 43:ir.TermBr; |Target:label %24;Successors:[label %24];Metadata:[!dbg !62];
[MOV] 44:ir.Block; label %24|
[MOV] 45:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 25};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !63];
[MOV] 46:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 26};Pred:slt;X:i32 %25;Y:i32 10;Typ:i1;Metadata:[!dbg !65];
[MOV] 47:ir.TermCondBr; ir.InstICmp|Cond:i1 %26;TargetTrue:label %27;TargetFalse:label %35;Successors:[label %27 label %35];Metadata:[!dbg !66];
[MOV] 48:ir.Block; label %27|
[MOV] 49:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 28};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !67];
[MOV] 50:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 29};From:i32 %28;To:i64;Metadata:[!dbg !69];
[MOV] 51:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 30};ElemType:[10 x i32];Src:[10 x i32]* %4;Indices:[i64 0 i64 %29];Typ:i32*;InBounds:true;Metadata:[!dbg !69];
[MOV] 52:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 31};ElemType:i32;Src:i32* %30;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !69];
[MOV] 53:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %31];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !70];
[MOV] 54:ir.TermBr; |Target:label %32;Successors:[label %32];Metadata:[!dbg !71];
[MOV] 55:ir.Block; label %32|
[MOV] 56:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 33};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !72];
[MOV] 57:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 34};X:i32 %33;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !72];
[MOV] 58:ir.InstStore; ;|Src:i32 %34;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !72];
[MOV] 59:ir.TermBr; label %24|Target:label %24;Successors:[label %24];Metadata:[!dbg !73 !llvm.loop !74];
[MOV] 60:ir.Block; label %35|
[MOV] 61:ir.TermBr; |Target:label %37;Successors:[label %37];Metadata:[!dbg !76];
[MOV] 62:ir.Block; label %36|
[MOV] 63:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !77];
[MOV] 64:ir.TermBr; |Target:label %37;Successors:[label %37];Metadata:[];
[MOV] 65:ir.Block; label %37|
[MOV] 66:ir.TermRet; |X:<nil>;Metadata:[!dbg !79];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstCall
4:ir.InstAlloca,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstStore
5:ir.InstCall,3,6:ir.InstStore
6:ir.InstStore,3,7:ir.TermBr
7:ir.TermBr,5,8:ir.Block
7:ir.TermBr,3,8:ir.Block
8:ir.Block,4,9:ir.InstCall
8:ir.Block,3,9:ir.InstCall
8:ir.Block,4,10:ir.InstCall
9:ir.InstCall,3,10:ir.InstCall
8:ir.Block,4,11:ir.InstBitCast
10:ir.InstCall,3,11:ir.InstBitCast
8:ir.Block,4,12:ir.InstCall
11:ir.InstBitCast,3,12:ir.InstCall
8:ir.Block,4,13:ir.InstGetElementPtr
12:ir.InstCall,3,13:ir.InstGetElementPtr
8:ir.Block,4,14:ir.InstLoad
13:ir.InstGetElementPtr,3,14:ir.InstLoad
8:ir.Block,4,15:ir.InstCall
14:ir.InstLoad,3,15:ir.InstCall
8:ir.Block,4,16:ir.InstICmp
15:ir.InstCall,3,16:ir.InstICmp
16:ir.InstICmp,3,17:ir.TermCondBr
17:ir.TermCondBr,5,18:ir.Block
17:ir.TermCondBr,3,18:ir.Block
17:ir.TermCondBr,5,23:ir.Block
17:ir.TermCondBr,3,23:ir.Block
18:ir.Block,4,19:ir.InstGetElementPtr
18:ir.Block,3,19:ir.InstGetElementPtr
18:ir.Block,4,20:ir.InstCall
19:ir.InstGetElementPtr,3,20:ir.InstCall
18:ir.Block,4,21:ir.InstStore
20:ir.InstCall,3,21:ir.InstStore
21:ir.InstStore,3,22:ir.TermBr
22:ir.TermBr,5,26:ir.Block
22:ir.TermBr,3,26:ir.Block
23:ir.Block,4,24:ir.InstCall
23:ir.Block,3,24:ir.InstCall
24:ir.InstCall,3,25:ir.TermBr
25:ir.TermBr,5,26:ir.Block
25:ir.TermBr,3,26:ir.Block
26:ir.Block,3,27:ir.TermBr
27:ir.TermBr,5,28:ir.Block
27:ir.TermBr,3,28:ir.Block
28:ir.Block,4,29:ir.InstCall
28:ir.Block,3,29:ir.InstCall
28:ir.Block,4,30:ir.InstCall
29:ir.InstCall,3,30:ir.InstCall
28:ir.Block,4,31:ir.InstCall
30:ir.InstCall,3,31:ir.InstCall
28:ir.Block,4,32:ir.InstBitCast
31:ir.InstCall,3,32:ir.InstBitCast
28:ir.Block,4,33:ir.InstCall
32:ir.InstBitCast,3,33:ir.InstCall
28:ir.Block,4,34:ir.InstLoad
33:ir.InstCall,3,34:ir.InstLoad
28:ir.Block,4,35:ir.InstICmp
34:ir.InstLoad,3,35:ir.InstICmp
35:ir.InstICmp,3,36:ir.TermCondBr
36:ir.TermCondBr,5,37:ir.Block
36:ir.TermCondBr,3,37:ir.Block
36:ir.TermCondBr,5,62:ir.Block
36:ir.TermCondBr,3,62:ir.Block
37:ir.Block,4,38:ir.InstLoad
37:ir.Block,3,38:ir.InstLoad
37:ir.Block,4,39:ir.InstSExt
38:ir.InstLoad,3,39:ir.InstSExt
37:ir.Block,4,40:ir.InstGetElementPtr
39:ir.InstSExt,3,40:ir.InstGetElementPtr
37:ir.Block,4,41:ir.InstStore
40:ir.InstGetElementPtr,3,41:ir.InstStore
37:ir.Block,4,42:ir.InstStore
41:ir.InstStore,3,42:ir.InstStore
42:ir.InstStore,3,43:ir.TermBr
43:ir.TermBr,5,44:ir.Block
43:ir.TermBr,3,44:ir.Block
44:ir.Block,4,45:ir.InstLoad
44:ir.Block,3,45:ir.InstLoad
44:ir.Block,4,46:ir.InstICmp
45:ir.InstLoad,3,46:ir.InstICmp
46:ir.InstICmp,3,47:ir.TermCondBr
47:ir.TermCondBr,5,48:ir.Block
47:ir.TermCondBr,3,48:ir.Block
47:ir.TermCondBr,5,60:ir.Block
47:ir.TermCondBr,3,60:ir.Block
48:ir.Block,4,49:ir.InstLoad
48:ir.Block,3,49:ir.InstLoad
48:ir.Block,4,50:ir.InstSExt
49:ir.InstLoad,3,50:ir.InstSExt
48:ir.Block,4,51:ir.InstGetElementPtr
50:ir.InstSExt,3,51:ir.InstGetElementPtr
48:ir.Block,4,52:ir.InstLoad
51:ir.InstGetElementPtr,3,52:ir.InstLoad
48:ir.Block,4,53:ir.InstCall
52:ir.InstLoad,3,53:ir.InstCall
53:ir.InstCall,3,54:ir.TermBr
54:ir.TermBr,5,55:ir.Block
54:ir.TermBr,3,55:ir.Block
55:ir.Block,4,56:ir.InstLoad
55:ir.Block,3,56:ir.InstLoad
55:ir.Block,4,57:ir.InstAdd
56:ir.InstLoad,3,57:ir.InstAdd
55:ir.Block,4,58:ir.InstStore
57:ir.InstAdd,3,58:ir.InstStore
58:ir.InstStore,3,59:ir.TermBr
59:ir.TermBr,5,44:ir.Block
59:ir.TermBr,3,44:ir.Block
60:ir.Block,3,61:ir.TermBr
61:ir.TermBr,5,65:ir.Block
61:ir.TermBr,3,65:ir.Block
62:ir.Block,4,63:ir.InstCall
62:ir.Block,3,63:ir.InstCall
63:ir.InstCall,3,64:ir.TermBr
64:ir.TermBr,5,65:ir.Block
64:ir.TermBr,3,65:ir.Block
65:ir.Block,3,66:ir.TermRet
38:ir.InstLoad,1,39:ir.InstSExt
39:ir.InstSExt,2,38:ir.InstLoad
40:ir.InstGetElementPtr,1,41:ir.InstStore
41:ir.InstStore,2,40:ir.InstGetElementPtr
57:ir.InstAdd,1,58:ir.InstStore
58:ir.InstStore,2,57:ir.InstAdd
4:ir.InstAlloca,1,32:ir.InstBitCast
32:ir.InstBitCast,2,4:ir.InstAlloca
4:ir.InstAlloca,1,40:ir.InstGetElementPtr
40:ir.InstGetElementPtr,2,4:ir.InstAlloca
4:ir.InstAlloca,1,51:ir.InstGetElementPtr
51:ir.InstGetElementPtr,2,4:ir.InstAlloca
32:ir.InstBitCast,1,33:ir.InstCall
33:ir.InstCall,2,32:ir.InstBitCast
34:ir.InstLoad,1,35:ir.InstICmp
35:ir.InstICmp,2,34:ir.InstLoad
3:ir.InstAlloca,1,42:ir.InstStore
42:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,45:ir.InstLoad
45:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,49:ir.InstLoad
49:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,56:ir.InstLoad
56:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,58:ir.InstStore
58:ir.InstStore,2,3:ir.InstAlloca
1:ir.InstAlloca,1,6:ir.InstStore
6:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstStore
21:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,34:ir.InstLoad
34:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,38:ir.InstLoad
38:ir.InstLoad,2,1:ir.InstAlloca
15:ir.InstCall,1,16:ir.InstICmp
16:ir.InstICmp,2,15:ir.InstCall
20:ir.InstCall,1,21:ir.InstStore
21:ir.InstStore,2,20:ir.InstCall
11:ir.InstBitCast,1,12:ir.InstCall
12:ir.InstCall,2,11:ir.InstBitCast
45:ir.InstLoad,1,46:ir.InstICmp
46:ir.InstICmp,2,45:ir.InstLoad
51:ir.InstGetElementPtr,1,52:ir.InstLoad
52:ir.InstLoad,2,51:ir.InstGetElementPtr
19:ir.InstGetElementPtr,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstGetElementPtr
49:ir.InstLoad,1,50:ir.InstSExt
50:ir.InstSExt,2,49:ir.InstLoad
52:ir.InstLoad,1,53:ir.InstCall
53:ir.InstCall,2,52:ir.InstLoad
56:ir.InstLoad,1,57:ir.InstAdd
57:ir.InstAdd,2,56:ir.InstLoad
2:ir.InstAlloca,1,11:ir.InstBitCast
11:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,13:ir.InstGetElementPtr
13:ir.InstGetElementPtr,2,2:ir.InstAlloca
2:ir.InstAlloca,1,19:ir.InstGetElementPtr
19:ir.InstGetElementPtr,2,2:ir.InstAlloca
13:ir.InstGetElementPtr,1,15:ir.InstCall
15:ir.InstCall,2,13:ir.InstGetElementPtr
14:ir.InstLoad,1,15:ir.InstCall
15:ir.InstCall,2,14:ir.InstLoad
17:ir.TermCondBr,2,16:ir.InstICmp
16:ir.InstICmp,1,17:ir.TermCondBr
36:ir.TermCondBr,2,35:ir.InstICmp
35:ir.InstICmp,1,36:ir.TermCondBr
47:ir.TermCondBr,2,46:ir.InstICmp
46:ir.InstICmp,1,47:ir.TermCondBr
