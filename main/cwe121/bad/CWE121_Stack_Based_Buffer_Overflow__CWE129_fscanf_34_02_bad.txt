? 55
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstCall ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstStore ir.InstBitCast ;ir.InstBitCast ir.InstBitCast |LocalIdent:{ 2};ElemType:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType;NElems:<nil>;Typ:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !13 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %union.CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType* %2 metadata !16 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !22];
[MOV] 8:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !23];
[MOV] 9:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 6};ElemType:%struct.__sFILE*;Src:%struct.__sFILE** @__stdinp;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !24];
[MOV] 10:ir.InstCall; ir.InstCall ;|LocalIdent:{ 7};Callee:i32 (%struct.__sFILE*, i8*, ...)* @fscanf;Args:[%struct.__sFILE* %6 i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0) i32* %1];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !25];
[MOV] 11:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 8};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !26];
[MOV] 12:ir.InstBitCast; ir.InstBitCast ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 9};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType* %2;To:i32*;Metadata:[!dbg !27];
[MOV] 13:ir.InstStore; ;|Src:i32 %8;Dst:i32* %9;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !28];
[MOV] 14:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %3 metadata !29 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !31];
[MOV] 15:ir.InstBitCast; ir.InstBitCast ;ir.InstLoad |LocalIdent:{ 10};From:%union.CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType* %2;To:i32*;Metadata:[!dbg !32];
[MOV] 16:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 11};ElemType:i32;Src:i32* %10;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !32];
[MOV] 17:ir.InstStore; ;|Src:i32 %11;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !31];
[MOV] 18:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !33 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !35];
[MOV] 19:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %5 metadata !36 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !40];
[MOV] 20:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 12};From:[10 x i32]* %5;To:i8*;Metadata:[!dbg !40];
[MOV] 21:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %12 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !40];
[MOV] 22:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 13};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !41];
[MOV] 23:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 14};Pred:sge;X:i32 %13;Y:i32 0;Typ:i1;Metadata:[!dbg !43];
[DEL] 24:ir.TermCondBr; ir.InstICmp|Cond:i1 %14;TargetTrue:label %15;TargetFalse:label %31;Successors:[label %15 label %31];Metadata:[!dbg !44];
[MOV] 25:ir.Block; label %15|
[MOV] 26:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 16};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !45];
[MOV] 27:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 17};From:i32 %16;To:i64;Metadata:[!dbg !47];
[MOV] 28:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 18};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %17];Typ:i32*;InBounds:true;Metadata:[!dbg !47];
[MOV] 29:ir.InstStore; ;|Src:i32 1;Dst:i32* %18;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !48];
[MOV] 30:ir.InstStore; ;|Src:i32 0;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !49];
[MOV] 31:ir.TermBr; |Target:label %19;Successors:[label %19];Metadata:[!dbg !51];
[MOV] 32:ir.Block; label %19|
[MOV] 33:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 20};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !52];
[MOV] 34:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 21};Pred:slt;X:i32 %20;Y:i32 10;Typ:i1;Metadata:[!dbg !54];
[MOV] 35:ir.TermCondBr; ir.InstICmp|Cond:i1 %21;TargetTrue:label %22;TargetFalse:label %30;Successors:[label %22 label %30];Metadata:[!dbg !55];
[MOV] 36:ir.Block; label %22|
[MOV] 37:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 23};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !56];
[MOV] 38:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 24};From:i32 %23;To:i64;Metadata:[!dbg !58];
[MOV] 39:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 25};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %24];Typ:i32*;InBounds:true;Metadata:[!dbg !58];
[MOV] 40:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 26};ElemType:i32;Src:i32* %25;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !58];
[MOV] 41:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %26];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !59];
[MOV] 42:ir.TermBr; |Target:label %27;Successors:[label %27];Metadata:[!dbg !60];
[MOV] 43:ir.Block; label %27|
[MOV] 44:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 28};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !61];
[MOV] 45:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 29};X:i32 %28;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !61];
[MOV] 46:ir.InstStore; ;|Src:i32 %29;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !61];
[MOV] 47:ir.TermBr; label %19|Target:label %19;Successors:[label %19];Metadata:[!dbg !62 !llvm.loop !63];
[MOV] 48:ir.Block; label %30|
[MOV] 49:ir.TermBr; |Target:label %32;Successors:[label %32];Metadata:[!dbg !65];
[MOV] 50:ir.Block; label %31|
[MOV] 51:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !66];
[MOV] 52:ir.TermBr; |Target:label %32;Successors:[label %32];Metadata:[];
[MOV] 53:ir.Block; label %32|
[MOV] 54:ir.TermRet; |X:<nil>;Metadata:[!dbg !68];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstStore
7:ir.InstCall,3,8:ir.InstStore
0:ir.Block,4,9:ir.InstLoad
8:ir.InstStore,3,9:ir.InstLoad
0:ir.Block,4,10:ir.InstCall
9:ir.InstLoad,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstLoad
10:ir.InstCall,3,11:ir.InstLoad
0:ir.Block,4,12:ir.InstBitCast
11:ir.InstLoad,3,12:ir.InstBitCast
0:ir.Block,4,13:ir.InstStore
12:ir.InstBitCast,3,13:ir.InstStore
0:ir.Block,4,14:ir.InstCall
13:ir.InstStore,3,14:ir.InstCall
0:ir.Block,4,15:ir.InstBitCast
14:ir.InstCall,3,15:ir.InstBitCast
0:ir.Block,4,16:ir.InstLoad
15:ir.InstBitCast,3,16:ir.InstLoad
0:ir.Block,4,17:ir.InstStore
16:ir.InstLoad,3,17:ir.InstStore
0:ir.Block,4,18:ir.InstCall
17:ir.InstStore,3,18:ir.InstCall
0:ir.Block,4,19:ir.InstCall
18:ir.InstCall,3,19:ir.InstCall
0:ir.Block,4,20:ir.InstBitCast
19:ir.InstCall,3,20:ir.InstBitCast
0:ir.Block,4,21:ir.InstCall
20:ir.InstBitCast,3,21:ir.InstCall
0:ir.Block,4,22:ir.InstLoad
21:ir.InstCall,3,22:ir.InstLoad
0:ir.Block,4,23:ir.InstICmp
22:ir.InstLoad,3,23:ir.InstICmp
23:ir.InstICmp,3,24:ir.TermCondBr
24:ir.TermCondBr,5,25:ir.Block
24:ir.TermCondBr,3,25:ir.Block
24:ir.TermCondBr,5,50:ir.Block
24:ir.TermCondBr,3,50:ir.Block
25:ir.Block,4,26:ir.InstLoad
25:ir.Block,3,26:ir.InstLoad
25:ir.Block,4,27:ir.InstSExt
26:ir.InstLoad,3,27:ir.InstSExt
25:ir.Block,4,28:ir.InstGetElementPtr
27:ir.InstSExt,3,28:ir.InstGetElementPtr
25:ir.Block,4,29:ir.InstStore
28:ir.InstGetElementPtr,3,29:ir.InstStore
25:ir.Block,4,30:ir.InstStore
29:ir.InstStore,3,30:ir.InstStore
30:ir.InstStore,3,31:ir.TermBr
31:ir.TermBr,5,32:ir.Block
31:ir.TermBr,3,32:ir.Block
32:ir.Block,4,33:ir.InstLoad
32:ir.Block,3,33:ir.InstLoad
32:ir.Block,4,34:ir.InstICmp
33:ir.InstLoad,3,34:ir.InstICmp
34:ir.InstICmp,3,35:ir.TermCondBr
35:ir.TermCondBr,5,36:ir.Block
35:ir.TermCondBr,3,36:ir.Block
35:ir.TermCondBr,5,48:ir.Block
35:ir.TermCondBr,3,48:ir.Block
36:ir.Block,4,37:ir.InstLoad
36:ir.Block,3,37:ir.InstLoad
36:ir.Block,4,38:ir.InstSExt
37:ir.InstLoad,3,38:ir.InstSExt
36:ir.Block,4,39:ir.InstGetElementPtr
38:ir.InstSExt,3,39:ir.InstGetElementPtr
36:ir.Block,4,40:ir.InstLoad
39:ir.InstGetElementPtr,3,40:ir.InstLoad
36:ir.Block,4,41:ir.InstCall
40:ir.InstLoad,3,41:ir.InstCall
41:ir.InstCall,3,42:ir.TermBr
42:ir.TermBr,5,43:ir.Block
42:ir.TermBr,3,43:ir.Block
43:ir.Block,4,44:ir.InstLoad
43:ir.Block,3,44:ir.InstLoad
43:ir.Block,4,45:ir.InstAdd
44:ir.InstLoad,3,45:ir.InstAdd
43:ir.Block,4,46:ir.InstStore
45:ir.InstAdd,3,46:ir.InstStore
46:ir.InstStore,3,47:ir.TermBr
47:ir.TermBr,5,32:ir.Block
47:ir.TermBr,3,32:ir.Block
48:ir.Block,3,49:ir.TermBr
49:ir.TermBr,5,53:ir.Block
49:ir.TermBr,3,53:ir.Block
50:ir.Block,4,51:ir.InstCall
50:ir.Block,3,51:ir.InstCall
51:ir.InstCall,3,52:ir.TermBr
52:ir.TermBr,5,53:ir.Block
52:ir.TermBr,3,53:ir.Block
53:ir.Block,3,54:ir.TermRet
9:ir.InstLoad,1,10:ir.InstCall
10:ir.InstCall,2,9:ir.InstLoad
5:ir.InstAlloca,1,20:ir.InstBitCast
20:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,28:ir.InstGetElementPtr
28:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,39:ir.InstGetElementPtr
39:ir.InstGetElementPtr,2,5:ir.InstAlloca
40:ir.InstLoad,1,41:ir.InstCall
41:ir.InstCall,2,40:ir.InstLoad
44:ir.InstLoad,1,45:ir.InstAdd
45:ir.InstAdd,2,44:ir.InstLoad
45:ir.InstAdd,1,46:ir.InstStore
46:ir.InstStore,2,45:ir.InstAdd
1:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,10:ir.InstCall
10:ir.InstCall,2,1:ir.InstAlloca
1:ir.InstAlloca,1,11:ir.InstLoad
11:ir.InstLoad,2,1:ir.InstAlloca
2:ir.InstAlloca,1,12:ir.InstBitCast
12:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,15:ir.InstBitCast
15:ir.InstBitCast,2,2:ir.InstAlloca
16:ir.InstLoad,1,17:ir.InstStore
17:ir.InstStore,2,16:ir.InstLoad
20:ir.InstBitCast,1,21:ir.InstCall
21:ir.InstCall,2,20:ir.InstBitCast
22:ir.InstLoad,1,23:ir.InstICmp
23:ir.InstICmp,2,22:ir.InstLoad
26:ir.InstLoad,1,27:ir.InstSExt
27:ir.InstSExt,2,26:ir.InstLoad
39:ir.InstGetElementPtr,1,40:ir.InstLoad
40:ir.InstLoad,2,39:ir.InstGetElementPtr
12:ir.InstBitCast,1,13:ir.InstStore
13:ir.InstStore,2,12:ir.InstBitCast
15:ir.InstBitCast,1,16:ir.InstLoad
16:ir.InstLoad,2,15:ir.InstBitCast
3:ir.InstAlloca,1,17:ir.InstStore
17:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,22:ir.InstLoad
22:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,26:ir.InstLoad
26:ir.InstLoad,2,3:ir.InstAlloca
4:ir.InstAlloca,1,30:ir.InstStore
30:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,44:ir.InstLoad
44:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,46:ir.InstStore
46:ir.InstStore,2,4:ir.InstAlloca
33:ir.InstLoad,1,34:ir.InstICmp
34:ir.InstICmp,2,33:ir.InstLoad
37:ir.InstLoad,1,38:ir.InstSExt
38:ir.InstSExt,2,37:ir.InstLoad
11:ir.InstLoad,1,13:ir.InstStore
13:ir.InstStore,2,11:ir.InstLoad
28:ir.InstGetElementPtr,1,29:ir.InstStore
29:ir.InstStore,2,28:ir.InstGetElementPtr
35:ir.TermCondBr,2,34:ir.InstICmp
34:ir.InstICmp,1,35:ir.TermCondBr
24:ir.TermCondBr,2,23:ir.InstICmp
23:ir.InstICmp,1,24:ir.TermCondBr
