? 42
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 2};ElemType:[11 x i8];NElems:<nil>;Typ:[11 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 3};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 4};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !59 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !60];
[DEL] 6:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 5};ElemType:i8*;Src:i8** @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_45_badData;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !61];
[DEL] 7:ir.InstStore; ;|Src:i8* %5;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !60];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [11 x i8]* %2 metadata !62 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !67];
[MOV] 9:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 6};From:[11 x i8]* %2;To:i8*;Metadata:[!dbg !67];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8*, i64, i1)* @llvm.memcpy.p0i8.p0i8.i64;Args:[i8* align 1 %6 i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @__const.badSink.source, i32 0, i32 0) i64 11 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !67];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %3 metadata !68 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !74];
[MOV] 12:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %4 metadata !75 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !76];
[MOV] 13:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 7};ElemType:[11 x i8];Src:[11 x i8]* %2;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !77];
[MOV] 14:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 8};Callee:i64 (i8*)* @strlen;Args:[i8* %7];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !78];
[MOV] 15:ir.InstStore; ;|Src:i64 %8;Dst:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !79];
[MOV] 16:ir.InstStore; ;|Src:i64 0;Dst:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !80];
[MOV] 17:ir.TermBr; |Target:label %9;Successors:[label %9];Metadata:[!dbg !82];
[MOV] 18:ir.Block; label %9|
[MOV] 19:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 10};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !83];
[MOV] 20:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 11};ElemType:i64;Src:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !85];
[MOV] 21:ir.InstAdd; ir.InstAdd ;ir.InstICmp |LocalIdent:{ 12};X:i64 %11;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !86];
[MOV] 22:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 13};Pred:ult;X:i64 %10;Y:i64 %12;Typ:i1;Metadata:[!dbg !87];
[MOV] 23:ir.TermCondBr; ir.InstICmp|Cond:i1 %13;TargetTrue:label %14;TargetFalse:label %24;Successors:[label %14 label %24];Metadata:[!dbg !88];
[MOV] 24:ir.Block; label %14|
[MOV] 25:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 15};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !89];
[MOV] 26:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 16};ElemType:[11 x i8];Src:[11 x i8]* %2;Indices:[i64 0 i64 %15];Typ:i8*;InBounds:true;Metadata:[!dbg !91];
[MOV] 27:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 17};ElemType:i8;Src:i8* %16;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !91];
[MOV] 28:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 18};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !92];
[MOV] 29:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 19};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !93];
[MOV] 30:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 20};ElemType:i8;Src:i8* %18;Indices:[i64 %19];Typ:i8*;InBounds:true;Metadata:[!dbg !92];
[MOV] 31:ir.InstStore; ;|Src:i8 %17;Dst:i8* %20;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !94];
[MOV] 32:ir.TermBr; |Target:label %21;Successors:[label %21];Metadata:[!dbg !95];
[MOV] 33:ir.Block; label %21|
[MOV] 34:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 22};ElemType:i64;Src:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !96];
[MOV] 35:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 23};X:i64 %22;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !96];
[MOV] 36:ir.InstStore; ;|Src:i64 %23;Dst:i64* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !96];
[MOV] 37:ir.TermBr; label %9|Target:label %9;Successors:[label %9];Metadata:[!dbg !97 !llvm.loop !98];
[MOV] 38:ir.Block; label %24|
[MOV] 39:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 25};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !100];
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %25];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !101];
[MOV] 41:ir.TermRet; |X:<nil>;Metadata:[!dbg !102];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstCall
4:ir.InstAlloca,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstLoad
5:ir.InstCall,3,6:ir.InstLoad
0:ir.Block,4,7:ir.InstStore
6:ir.InstLoad,3,7:ir.InstStore
0:ir.Block,4,8:ir.InstCall
7:ir.InstStore,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstBitCast
8:ir.InstCall,3,9:ir.InstBitCast
0:ir.Block,4,10:ir.InstCall
9:ir.InstBitCast,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstCall
10:ir.InstCall,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstCall
11:ir.InstCall,3,12:ir.InstCall
0:ir.Block,4,13:ir.InstGetElementPtr
12:ir.InstCall,3,13:ir.InstGetElementPtr
0:ir.Block,4,14:ir.InstCall
13:ir.InstGetElementPtr,3,14:ir.InstCall
0:ir.Block,4,15:ir.InstStore
14:ir.InstCall,3,15:ir.InstStore
0:ir.Block,4,16:ir.InstStore
15:ir.InstStore,3,16:ir.InstStore
16:ir.InstStore,3,17:ir.TermBr
17:ir.TermBr,5,18:ir.Block
17:ir.TermBr,3,18:ir.Block
18:ir.Block,4,19:ir.InstLoad
18:ir.Block,3,19:ir.InstLoad
18:ir.Block,4,20:ir.InstLoad
19:ir.InstLoad,3,20:ir.InstLoad
18:ir.Block,4,21:ir.InstAdd
20:ir.InstLoad,3,21:ir.InstAdd
18:ir.Block,4,22:ir.InstICmp
21:ir.InstAdd,3,22:ir.InstICmp
22:ir.InstICmp,3,23:ir.TermCondBr
23:ir.TermCondBr,5,24:ir.Block
23:ir.TermCondBr,3,24:ir.Block
23:ir.TermCondBr,5,38:ir.Block
23:ir.TermCondBr,3,38:ir.Block
24:ir.Block,4,25:ir.InstLoad
24:ir.Block,3,25:ir.InstLoad
24:ir.Block,4,26:ir.InstGetElementPtr
25:ir.InstLoad,3,26:ir.InstGetElementPtr
24:ir.Block,4,27:ir.InstLoad
26:ir.InstGetElementPtr,3,27:ir.InstLoad
24:ir.Block,4,28:ir.InstLoad
27:ir.InstLoad,3,28:ir.InstLoad
24:ir.Block,4,29:ir.InstLoad
28:ir.InstLoad,3,29:ir.InstLoad
24:ir.Block,4,30:ir.InstGetElementPtr
29:ir.InstLoad,3,30:ir.InstGetElementPtr
24:ir.Block,4,31:ir.InstStore
30:ir.InstGetElementPtr,3,31:ir.InstStore
31:ir.InstStore,3,32:ir.TermBr
32:ir.TermBr,5,33:ir.Block
32:ir.TermBr,3,33:ir.Block
33:ir.Block,4,34:ir.InstLoad
33:ir.Block,3,34:ir.InstLoad
33:ir.Block,4,35:ir.InstAdd
34:ir.InstLoad,3,35:ir.InstAdd
33:ir.Block,4,36:ir.InstStore
35:ir.InstAdd,3,36:ir.InstStore
36:ir.InstStore,3,37:ir.TermBr
37:ir.TermBr,5,18:ir.Block
37:ir.TermBr,3,18:ir.Block
38:ir.Block,4,39:ir.InstLoad
38:ir.Block,3,39:ir.InstLoad
38:ir.Block,4,40:ir.InstCall
39:ir.InstLoad,3,40:ir.InstCall
40:ir.InstCall,3,41:ir.TermRet
4:ir.InstAlloca,1,15:ir.InstStore
15:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,4:ir.InstAlloca
20:ir.InstLoad,1,21:ir.InstAdd
21:ir.InstAdd,2,20:ir.InstLoad
1:ir.InstAlloca,1,7:ir.InstStore
7:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,39:ir.InstLoad
39:ir.InstLoad,2,1:ir.InstAlloca
13:ir.InstGetElementPtr,1,14:ir.InstCall
14:ir.InstCall,2,13:ir.InstGetElementPtr
35:ir.InstAdd,1,36:ir.InstStore
36:ir.InstStore,2,35:ir.InstAdd
39:ir.InstLoad,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstLoad
3:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,34:ir.InstLoad
34:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,36:ir.InstStore
36:ir.InstStore,2,3:ir.InstAlloca
19:ir.InstLoad,1,22:ir.InstICmp
22:ir.InstICmp,2,19:ir.InstLoad
21:ir.InstAdd,1,22:ir.InstICmp
22:ir.InstICmp,2,21:ir.InstAdd
26:ir.InstGetElementPtr,1,27:ir.InstLoad
27:ir.InstLoad,2,26:ir.InstGetElementPtr
28:ir.InstLoad,1,30:ir.InstGetElementPtr
30:ir.InstGetElementPtr,2,28:ir.InstLoad
27:ir.InstLoad,1,31:ir.InstStore
31:ir.InstStore,2,27:ir.InstLoad
2:ir.InstAlloca,1,9:ir.InstBitCast
9:ir.InstBitCast,2,2:ir.InstAlloca
2:ir.InstAlloca,1,13:ir.InstGetElementPtr
13:ir.InstGetElementPtr,2,2:ir.InstAlloca
2:ir.InstAlloca,1,26:ir.InstGetElementPtr
26:ir.InstGetElementPtr,2,2:ir.InstAlloca
9:ir.InstBitCast,1,10:ir.InstCall
10:ir.InstCall,2,9:ir.InstBitCast
34:ir.InstLoad,1,35:ir.InstAdd
35:ir.InstAdd,2,34:ir.InstLoad
30:ir.InstGetElementPtr,1,31:ir.InstStore
31:ir.InstStore,2,30:ir.InstGetElementPtr
6:ir.InstLoad,1,7:ir.InstStore
7:ir.InstStore,2,6:ir.InstLoad
14:ir.InstCall,1,15:ir.InstStore
15:ir.InstStore,2,14:ir.InstCall
23:ir.TermCondBr,2,22:ir.InstICmp
22:ir.InstICmp,1,23:ir.TermCondBr
