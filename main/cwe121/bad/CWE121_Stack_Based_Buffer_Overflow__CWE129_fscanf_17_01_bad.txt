? 77
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[DEL] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstCall ir.InstLoad ir.InstLoad |LocalIdent:{ 3};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !13 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !16 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !17];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %3 metadata !18 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !19];
[MOV] 9:ir.InstStore; ;|Src:i32 -1;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !20];
[MOV] 10:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !21];
[MOV] 11:ir.TermBr; |Target:label %6;Successors:[label %6];Metadata:[!dbg !23];
[MOV] 12:ir.Block; label %6|
[MOV] 13:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 7};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !24];
[MOV] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 8};Pred:slt;X:i32 %7;Y:i32 1;Typ:i1;Metadata:[!dbg !26];
[MOV] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %8;TargetTrue:label %9;TargetFalse:label %15;Successors:[label %9 label %15];Metadata:[!dbg !27];
[MOV] 16:ir.Block; label %9|
[MOV] 17:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 10};ElemType:%struct.__sFILE*;Src:%struct.__sFILE** @__stdinp;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !28];
[MOV] 18:ir.InstCall; ir.InstCall ;|LocalIdent:{ 11};Callee:i32 (%struct.__sFILE*, i8*, ...)* @fscanf;Args:[%struct.__sFILE* %10 i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0) i32* %3];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !30];
[MOV] 19:ir.TermBr; |Target:label %12;Successors:[label %12];Metadata:[!dbg !31];
[MOV] 20:ir.Block; label %12|
[MOV] 21:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 13};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !32];
[MOV] 22:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 14};X:i32 %13;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !32];
[MOV] 23:ir.InstStore; ;|Src:i32 %14;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !32];
[MOV] 24:ir.TermBr; label %6|Target:label %6;Successors:[label %6];Metadata:[!dbg !33 !llvm.loop !34];
[MOV] 25:ir.Block; label %15|
[DEL] 26:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !36];
[MOV] 27:ir.TermBr; |Target:label %16;Successors:[label %16];Metadata:[!dbg !38];
[MOV] 28:ir.Block; label %16|
[DEL] 29:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 17};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !39];
[DEL] 30:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 18};Pred:slt;X:i32 %17;Y:i32 1;Typ:i1;Metadata:[!dbg !41];
[DEL] 31:ir.TermCondBr; ir.InstICmp|Cond:i1 %18;TargetTrue:label %19;TargetFalse:label %44;Successors:[label %19 label %44];Metadata:[!dbg !42];
[MOV] 32:ir.Block; label %19|
[MOV] 33:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !43 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !46];
[MOV] 34:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %5 metadata !47 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !51];
[MOV] 35:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 20};From:[10 x i32]* %5;To:i8*;Metadata:[!dbg !51];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %20 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !51];
[MOV] 37:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 21};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !52];
[MOV] 38:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 22};Pred:sge;X:i32 %21;Y:i32 0;Typ:i1;Metadata:[!dbg !54];
[DEL] 39:ir.TermCondBr; ir.InstICmp|Cond:i1 %22;TargetTrue:label %23;TargetFalse:label %39;Successors:[label %23 label %39];Metadata:[!dbg !55];
[MOV] 40:ir.Block; label %23|
[MOV] 41:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 24};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !56];
[MOV] 42:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 25};From:i32 %24;To:i64;Metadata:[!dbg !58];
[MOV] 43:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 26};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %25];Typ:i32*;InBounds:true;Metadata:[!dbg !58];
[MOV] 44:ir.InstStore; ;|Src:i32 1;Dst:i32* %26;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !59];
[MOV] 45:ir.InstStore; ;|Src:i32 0;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !60];
[MOV] 46:ir.TermBr; |Target:label %27;Successors:[label %27];Metadata:[!dbg !62];
[MOV] 47:ir.Block; label %27|
[MOV] 48:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 28};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !63];
[MOV] 49:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 29};Pred:slt;X:i32 %28;Y:i32 10;Typ:i1;Metadata:[!dbg !65];
[MOV] 50:ir.TermCondBr; ir.InstICmp|Cond:i1 %29;TargetTrue:label %30;TargetFalse:label %38;Successors:[label %30 label %38];Metadata:[!dbg !66];
[MOV] 51:ir.Block; label %30|
[MOV] 52:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 31};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !67];
[MOV] 53:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 32};From:i32 %31;To:i64;Metadata:[!dbg !69];
[MOV] 54:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 33};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %32];Typ:i32*;InBounds:true;Metadata:[!dbg !69];
[MOV] 55:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 34};ElemType:i32;Src:i32* %33;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !69];
[MOV] 56:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %34];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !70];
[MOV] 57:ir.TermBr; |Target:label %35;Successors:[label %35];Metadata:[!dbg !71];
[MOV] 58:ir.Block; label %35|
[MOV] 59:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 36};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !72];
[MOV] 60:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 37};X:i32 %36;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !72];
[MOV] 61:ir.InstStore; ;|Src:i32 %37;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !72];
[MOV] 62:ir.TermBr; label %27|Target:label %27;Successors:[label %27];Metadata:[!dbg !73 !llvm.loop !74];
[MOV] 63:ir.Block; label %38|
[MOV] 64:ir.TermBr; |Target:label %40;Successors:[label %40];Metadata:[!dbg !76];
[MOV] 65:ir.Block; label %39|
[MOV] 66:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !77];
[MOV] 67:ir.TermBr; |Target:label %40;Successors:[label %40];Metadata:[];
[MOV] 68:ir.Block; label %40|
[MOV] 69:ir.TermBr; |Target:label %41;Successors:[label %41];Metadata:[!dbg !79];
[MOV] 70:ir.Block; label %41|
[DEL] 71:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 42};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !80];
[DEL] 72:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 43};X:i32 %42;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !80];
[DEL] 73:ir.InstStore; ;|Src:i32 %43;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !80];
[MOV] 74:ir.TermBr; label %16|Target:label %16;Successors:[label %16];Metadata:[!dbg !81 !llvm.loop !82];
[MOV] 75:ir.Block; label %44|
[MOV] 76:ir.TermRet; |X:<nil>;Metadata:[!dbg !84];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstStore
8:ir.InstCall,3,9:ir.InstStore
0:ir.Block,4,10:ir.InstStore
9:ir.InstStore,3,10:ir.InstStore
10:ir.InstStore,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstLoad
12:ir.Block,3,13:ir.InstLoad
12:ir.Block,4,14:ir.InstICmp
13:ir.InstLoad,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,25:ir.Block
15:ir.TermCondBr,3,25:ir.Block
16:ir.Block,4,17:ir.InstLoad
16:ir.Block,3,17:ir.InstLoad
16:ir.Block,4,18:ir.InstCall
17:ir.InstLoad,3,18:ir.InstCall
18:ir.InstCall,3,19:ir.TermBr
19:ir.TermBr,5,20:ir.Block
19:ir.TermBr,3,20:ir.Block
20:ir.Block,4,21:ir.InstLoad
20:ir.Block,3,21:ir.InstLoad
20:ir.Block,4,22:ir.InstAdd
21:ir.InstLoad,3,22:ir.InstAdd
20:ir.Block,4,23:ir.InstStore
22:ir.InstAdd,3,23:ir.InstStore
23:ir.InstStore,3,24:ir.TermBr
24:ir.TermBr,5,12:ir.Block
24:ir.TermBr,3,12:ir.Block
25:ir.Block,4,26:ir.InstStore
25:ir.Block,3,26:ir.InstStore
26:ir.InstStore,3,27:ir.TermBr
27:ir.TermBr,5,28:ir.Block
27:ir.TermBr,3,28:ir.Block
28:ir.Block,4,29:ir.InstLoad
28:ir.Block,3,29:ir.InstLoad
28:ir.Block,4,30:ir.InstICmp
29:ir.InstLoad,3,30:ir.InstICmp
30:ir.InstICmp,3,31:ir.TermCondBr
31:ir.TermCondBr,5,32:ir.Block
31:ir.TermCondBr,3,32:ir.Block
31:ir.TermCondBr,5,75:ir.Block
31:ir.TermCondBr,3,75:ir.Block
32:ir.Block,4,33:ir.InstCall
32:ir.Block,3,33:ir.InstCall
32:ir.Block,4,34:ir.InstCall
33:ir.InstCall,3,34:ir.InstCall
32:ir.Block,4,35:ir.InstBitCast
34:ir.InstCall,3,35:ir.InstBitCast
32:ir.Block,4,36:ir.InstCall
35:ir.InstBitCast,3,36:ir.InstCall
32:ir.Block,4,37:ir.InstLoad
36:ir.InstCall,3,37:ir.InstLoad
32:ir.Block,4,38:ir.InstICmp
37:ir.InstLoad,3,38:ir.InstICmp
38:ir.InstICmp,3,39:ir.TermCondBr
39:ir.TermCondBr,5,40:ir.Block
39:ir.TermCondBr,3,40:ir.Block
39:ir.TermCondBr,5,65:ir.Block
39:ir.TermCondBr,3,65:ir.Block
40:ir.Block,4,41:ir.InstLoad
40:ir.Block,3,41:ir.InstLoad
40:ir.Block,4,42:ir.InstSExt
41:ir.InstLoad,3,42:ir.InstSExt
40:ir.Block,4,43:ir.InstGetElementPtr
42:ir.InstSExt,3,43:ir.InstGetElementPtr
40:ir.Block,4,44:ir.InstStore
43:ir.InstGetElementPtr,3,44:ir.InstStore
40:ir.Block,4,45:ir.InstStore
44:ir.InstStore,3,45:ir.InstStore
45:ir.InstStore,3,46:ir.TermBr
46:ir.TermBr,5,47:ir.Block
46:ir.TermBr,3,47:ir.Block
47:ir.Block,4,48:ir.InstLoad
47:ir.Block,3,48:ir.InstLoad
47:ir.Block,4,49:ir.InstICmp
48:ir.InstLoad,3,49:ir.InstICmp
49:ir.InstICmp,3,50:ir.TermCondBr
50:ir.TermCondBr,5,51:ir.Block
50:ir.TermCondBr,3,51:ir.Block
50:ir.TermCondBr,5,63:ir.Block
50:ir.TermCondBr,3,63:ir.Block
51:ir.Block,4,52:ir.InstLoad
51:ir.Block,3,52:ir.InstLoad
51:ir.Block,4,53:ir.InstSExt
52:ir.InstLoad,3,53:ir.InstSExt
51:ir.Block,4,54:ir.InstGetElementPtr
53:ir.InstSExt,3,54:ir.InstGetElementPtr
51:ir.Block,4,55:ir.InstLoad
54:ir.InstGetElementPtr,3,55:ir.InstLoad
51:ir.Block,4,56:ir.InstCall
55:ir.InstLoad,3,56:ir.InstCall
56:ir.InstCall,3,57:ir.TermBr
57:ir.TermBr,5,58:ir.Block
57:ir.TermBr,3,58:ir.Block
58:ir.Block,4,59:ir.InstLoad
58:ir.Block,3,59:ir.InstLoad
58:ir.Block,4,60:ir.InstAdd
59:ir.InstLoad,3,60:ir.InstAdd
58:ir.Block,4,61:ir.InstStore
60:ir.InstAdd,3,61:ir.InstStore
61:ir.InstStore,3,62:ir.TermBr
62:ir.TermBr,5,47:ir.Block
62:ir.TermBr,3,47:ir.Block
63:ir.Block,3,64:ir.TermBr
64:ir.TermBr,5,68:ir.Block
64:ir.TermBr,3,68:ir.Block
65:ir.Block,4,66:ir.InstCall
65:ir.Block,3,66:ir.InstCall
66:ir.InstCall,3,67:ir.TermBr
67:ir.TermBr,5,68:ir.Block
67:ir.TermBr,3,68:ir.Block
68:ir.Block,3,69:ir.TermBr
69:ir.TermBr,5,70:ir.Block
69:ir.TermBr,3,70:ir.Block
70:ir.Block,4,71:ir.InstLoad
70:ir.Block,3,71:ir.InstLoad
70:ir.Block,4,72:ir.InstAdd
71:ir.InstLoad,3,72:ir.InstAdd
70:ir.Block,4,73:ir.InstStore
72:ir.InstAdd,3,73:ir.InstStore
73:ir.InstStore,3,74:ir.TermBr
74:ir.TermBr,5,28:ir.Block
74:ir.TermBr,3,28:ir.Block
75:ir.Block,3,76:ir.TermRet
29:ir.InstLoad,1,30:ir.InstICmp
30:ir.InstICmp,2,29:ir.InstLoad
41:ir.InstLoad,1,42:ir.InstSExt
42:ir.InstSExt,2,41:ir.InstLoad
43:ir.InstGetElementPtr,1,44:ir.InstStore
44:ir.InstStore,2,43:ir.InstGetElementPtr
4:ir.InstAlloca,1,45:ir.InstStore
45:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,48:ir.InstLoad
48:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,52:ir.InstLoad
52:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,59:ir.InstLoad
59:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,61:ir.InstStore
61:ir.InstStore,2,4:ir.InstAlloca
48:ir.InstLoad,1,49:ir.InstICmp
49:ir.InstICmp,2,48:ir.InstLoad
59:ir.InstLoad,1,60:ir.InstAdd
60:ir.InstAdd,2,59:ir.InstLoad
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstLoad
13:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,23:ir.InstStore
23:ir.InstStore,2,1:ir.InstAlloca
13:ir.InstLoad,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstLoad
21:ir.InstLoad,1,22:ir.InstAdd
22:ir.InstAdd,2,21:ir.InstLoad
37:ir.InstLoad,1,38:ir.InstICmp
38:ir.InstICmp,2,37:ir.InstLoad
52:ir.InstLoad,1,53:ir.InstSExt
53:ir.InstSExt,2,52:ir.InstLoad
72:ir.InstAdd,1,73:ir.InstStore
73:ir.InstStore,2,72:ir.InstAdd
3:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,18:ir.InstCall
18:ir.InstCall,2,3:ir.InstAlloca
3:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,3:ir.InstAlloca
3:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,3:ir.InstAlloca
35:ir.InstBitCast,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstBitCast
54:ir.InstGetElementPtr,1,55:ir.InstLoad
55:ir.InstLoad,2,54:ir.InstGetElementPtr
60:ir.InstAdd,1,61:ir.InstStore
61:ir.InstStore,2,60:ir.InstAdd
71:ir.InstLoad,1,72:ir.InstAdd
72:ir.InstAdd,2,71:ir.InstLoad
22:ir.InstAdd,1,23:ir.InstStore
23:ir.InstStore,2,22:ir.InstAdd
2:ir.InstAlloca,1,26:ir.InstStore
26:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,29:ir.InstLoad
29:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,71:ir.InstLoad
71:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,73:ir.InstStore
73:ir.InstStore,2,2:ir.InstAlloca
5:ir.InstAlloca,1,35:ir.InstBitCast
35:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,43:ir.InstGetElementPtr
43:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,54:ir.InstGetElementPtr
54:ir.InstGetElementPtr,2,5:ir.InstAlloca
55:ir.InstLoad,1,56:ir.InstCall
56:ir.InstCall,2,55:ir.InstLoad
17:ir.InstLoad,1,18:ir.InstCall
18:ir.InstCall,2,17:ir.InstLoad
39:ir.TermCondBr,2,38:ir.InstICmp
38:ir.InstICmp,1,39:ir.TermCondBr
50:ir.TermCondBr,2,49:ir.InstICmp
49:ir.InstICmp,1,50:ir.TermCondBr
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
31:ir.TermCondBr,2,30:ir.InstICmp
30:ir.InstICmp,1,31:ir.TermCondBr
