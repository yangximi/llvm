? 77
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstCall ;ir.InstStore ir.InstStore ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstTrunc ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ir.InstGetElementPtr ir.InstStore ir.InstBitCast ir.InstCall ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr ir.InstGetElementPtr ir.InstBitCast |LocalIdent:{ 3};ElemType:%struct.sockaddr_in;NElems:<nil>;Typ:%struct.sockaddr_in*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstCall ;ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ir.InstCall ;ir.InstGetElementPtr ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[14 x i8];NElems:<nil>;Typ:[14 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !39 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !40];
[MOV] 7:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !41];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !42 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !44];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %struct.sockaddr_in* %3 metadata !45 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !65];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !66 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !67];
[MOV] 11:ir.InstStore; ;|Src:i32 -1;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !67];
[MOV] 12:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [14 x i8]* %5 metadata !68 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !69];
[MOV] 13:ir.TermBr; |Target:label %6;Successors:[label %6];Metadata:[!dbg !70];
[MOV] 14:ir.Block; label %6|
[MOV] 15:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 7};Callee:i32 (i32, i32, i32)* @socket;Args:[i32 2 i32 1 i32 6];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !71];
[MOV] 16:ir.InstStore; ;|Src:i32 %7;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !73];
[MOV] 17:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 8};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !74];
[MOV] 18:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:eq;X:i32 %8;Y:i32 -1;Typ:i1;Metadata:[!dbg !76];
[MOV] 19:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %11;Successors:[label %10 label %11];Metadata:[!dbg !77];
[MOV] 20:ir.Block; label %10|
[MOV] 21:ir.TermBr; |Target:label %40;Successors:[label %40];Metadata:[!dbg !78];
[MOV] 22:ir.Block; label %11|
[MOV] 23:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 12};From:%struct.sockaddr_in* %3;To:i8*;Metadata:[!dbg !80];
[MOV] 24:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 4 %12 i8 0 i64 16 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !80];
[MOV] 25:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 13};ElemType:%struct.sockaddr_in;Src:%struct.sockaddr_in* %3;Indices:[i32 0 i32 1];Typ:i8*;InBounds:true;Metadata:[!dbg !81];
[MOV] 26:ir.InstStore; ;|Src:i8 2;Dst:i8* %13;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !82];
[MOV] 27:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 14};Callee:i32 (i8*)* @inet_addr;Args:[i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !83];
[MOV] 28:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 15};ElemType:%struct.sockaddr_in;Src:%struct.sockaddr_in* %3;Indices:[i32 0 i32 3];Typ:%struct.in_addr*;InBounds:true;Metadata:[!dbg !84];
[MOV] 29:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstCall ;ir.InstStore |LocalIdent:{ 16};ElemType:%struct.in_addr;Src:%struct.in_addr* %15;Indices:[i32 0 i32 0];Typ:i32*;InBounds:true;Metadata:[!dbg !85];
[MOV] 30:ir.InstStore; ;|Src:i32 %14;Dst:i32* %16;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !86];
[MOV] 31:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 17};ElemType:%struct.sockaddr_in;Src:%struct.sockaddr_in* %3;Indices:[i32 0 i32 2];Typ:i16*;InBounds:true;Metadata:[!dbg !87];
[MOV] 32:ir.InstStore; ;|Src:i16 -30871;Dst:i16* %17;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 2;Metadata:[!dbg !88];
[MOV] 33:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 18};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !89];
[MOV] 34:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 19};From:%struct.sockaddr_in* %3;To:%struct.sockaddr*;Metadata:[!dbg !91];
[MOV] 35:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 20};Callee:i32 (i32, %struct.sockaddr*, i32)* @"\01_connect";Args:[i32 %18 %struct.sockaddr* %19 i32 16];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !92];
[MOV] 36:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 21};Pred:eq;X:i32 %20;Y:i32 -1;Typ:i1;Metadata:[!dbg !93];
[MOV] 37:ir.TermCondBr; ir.InstICmp|Cond:i1 %21;TargetTrue:label %22;TargetFalse:label %23;Successors:[label %22 label %23];Metadata:[!dbg !94];
[MOV] 38:ir.Block; label %22|
[MOV] 39:ir.TermBr; |Target:label %40;Successors:[label %40];Metadata:[!dbg !95];
[MOV] 40:ir.Block; label %23|
[MOV] 41:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 24};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !97];
[MOV] 42:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 25};ElemType:[14 x i8];Src:[14 x i8]* %5;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !98];
[MOV] 43:ir.InstCall; ir.InstCall ;ir.InstTrunc |LocalIdent:{ 26};Callee:i64 (i32, i8*, i64, i32)* @"\01_recv";Args:[i32 %24 i8* %25 i64 13 i32 0];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !99];
[MOV] 44:ir.InstTrunc; ir.InstTrunc ;ir.InstStore |LocalIdent:{ 27};From:i64 %26;To:i32;Metadata:[!dbg !99];
[MOV] 45:ir.InstStore; ;|Src:i32 %27;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !100];
[MOV] 46:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 28};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !101];
[MOV] 47:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 29};Pred:eq;X:i32 %28;Y:i32 -1;Typ:i1;Metadata:[!dbg !103];
[MOV] 48:ir.TermCondBr; ir.InstICmp|Cond:i1 %29;TargetTrue:label %33;TargetFalse:label %30;Successors:[label %33 label %30];Metadata:[!dbg !104];
[MOV] 49:ir.Block; label %30|
[MOV] 50:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 31};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !105];
[MOV] 51:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 32};Pred:eq;X:i32 %31;Y:i32 0;Typ:i1;Metadata:[!dbg !106];
[MOV] 52:ir.TermCondBr; ir.InstICmp|Cond:i1 %32;TargetTrue:label %33;TargetFalse:label %34;Successors:[label %33 label %34];Metadata:[!dbg !107];
[MOV] 53:ir.Block; label %33|
[MOV] 54:ir.TermBr; |Target:label %40;Successors:[label %40];Metadata:[!dbg !108];
[MOV] 55:ir.Block; label %34|
[MOV] 56:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 35};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !110];
[MOV] 57:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 36};From:i32 %35;To:i64;Metadata:[!dbg !111];
[MOV] 58:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 37};ElemType:[14 x i8];Src:[14 x i8]* %5;Indices:[i64 0 i64 %36];Typ:i8*;InBounds:true;Metadata:[!dbg !111];
[MOV] 59:ir.InstStore; ;|Src:i8 0;Dst:i8* %37;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !112];
[MOV] 60:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 38};ElemType:[14 x i8];Src:[14 x i8]* %5;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !113];
[MOV] 61:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 39};Callee:i32 (i8*)* @atoi;Args:[i8* %38];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !114];
[MOV] 62:ir.InstStore; ;|Src:i32 %39;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !115];
[MOV] 63:ir.TermBr; |Target:label %40;Successors:[label %40];Metadata:[!dbg !116];
[MOV] 64:ir.Block; label %40|
[MOV] 65:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 41};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !117];
[MOV] 66:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 42};Pred:ne;X:i32 %41;Y:i32 -1;Typ:i1;Metadata:[!dbg !119];
[MOV] 67:ir.TermCondBr; ir.InstICmp|Cond:i1 %42;TargetTrue:label %43;TargetFalse:label %46;Successors:[label %43 label %46];Metadata:[!dbg !120];
[MOV] 68:ir.Block; label %43|
[MOV] 69:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 44};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !121];
[MOV] 70:ir.InstCall; ir.InstCall ;|LocalIdent:{ 45};Callee:i32 (i32)* @"\01_close";Args:[i32 %44];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !123];
[MOV] 71:ir.TermBr; |Target:label %46;Successors:[label %46];Metadata:[!dbg !124];
[MOV] 72:ir.Block; label %46|
[MOV] 73:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 47};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !125];
[MOV] 74:ir.InstStore; ;|Src:i32 %47;Dst:i32* @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !126];
[DEL] 75:ir.InstCall; ;|LocalIdent:{ 0};Callee:void ()* @badSink;Args:[];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !127];
[MOV] 76:ir.TermRet; |X:<nil>;Metadata:[!dbg !128];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstStore
6:ir.InstCall,3,7:ir.InstStore
0:ir.Block,4,8:ir.InstCall
7:ir.InstStore,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstCall
9:ir.InstCall,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstStore
10:ir.InstCall,3,11:ir.InstStore
0:ir.Block,4,12:ir.InstCall
11:ir.InstStore,3,12:ir.InstCall
12:ir.InstCall,3,13:ir.TermBr
13:ir.TermBr,5,14:ir.Block
13:ir.TermBr,3,14:ir.Block
14:ir.Block,4,15:ir.InstCall
14:ir.Block,3,15:ir.InstCall
14:ir.Block,4,16:ir.InstStore
15:ir.InstCall,3,16:ir.InstStore
14:ir.Block,4,17:ir.InstLoad
16:ir.InstStore,3,17:ir.InstLoad
14:ir.Block,4,18:ir.InstICmp
17:ir.InstLoad,3,18:ir.InstICmp
18:ir.InstICmp,3,19:ir.TermCondBr
19:ir.TermCondBr,5,20:ir.Block
19:ir.TermCondBr,3,20:ir.Block
19:ir.TermCondBr,5,22:ir.Block
19:ir.TermCondBr,3,22:ir.Block
20:ir.Block,3,21:ir.TermBr
21:ir.TermBr,5,64:ir.Block
21:ir.TermBr,3,64:ir.Block
22:ir.Block,4,23:ir.InstBitCast
22:ir.Block,3,23:ir.InstBitCast
22:ir.Block,4,24:ir.InstCall
23:ir.InstBitCast,3,24:ir.InstCall
22:ir.Block,4,25:ir.InstGetElementPtr
24:ir.InstCall,3,25:ir.InstGetElementPtr
22:ir.Block,4,26:ir.InstStore
25:ir.InstGetElementPtr,3,26:ir.InstStore
22:ir.Block,4,27:ir.InstCall
26:ir.InstStore,3,27:ir.InstCall
22:ir.Block,4,28:ir.InstGetElementPtr
27:ir.InstCall,3,28:ir.InstGetElementPtr
22:ir.Block,4,29:ir.InstGetElementPtr
28:ir.InstGetElementPtr,3,29:ir.InstGetElementPtr
22:ir.Block,4,30:ir.InstStore
29:ir.InstGetElementPtr,3,30:ir.InstStore
22:ir.Block,4,31:ir.InstGetElementPtr
30:ir.InstStore,3,31:ir.InstGetElementPtr
22:ir.Block,4,32:ir.InstStore
31:ir.InstGetElementPtr,3,32:ir.InstStore
22:ir.Block,4,33:ir.InstLoad
32:ir.InstStore,3,33:ir.InstLoad
22:ir.Block,4,34:ir.InstBitCast
33:ir.InstLoad,3,34:ir.InstBitCast
22:ir.Block,4,35:ir.InstCall
34:ir.InstBitCast,3,35:ir.InstCall
22:ir.Block,4,36:ir.InstICmp
35:ir.InstCall,3,36:ir.InstICmp
36:ir.InstICmp,3,37:ir.TermCondBr
37:ir.TermCondBr,5,38:ir.Block
37:ir.TermCondBr,3,38:ir.Block
37:ir.TermCondBr,5,40:ir.Block
37:ir.TermCondBr,3,40:ir.Block
38:ir.Block,3,39:ir.TermBr
39:ir.TermBr,5,64:ir.Block
39:ir.TermBr,3,64:ir.Block
40:ir.Block,4,41:ir.InstLoad
40:ir.Block,3,41:ir.InstLoad
40:ir.Block,4,42:ir.InstGetElementPtr
41:ir.InstLoad,3,42:ir.InstGetElementPtr
40:ir.Block,4,43:ir.InstCall
42:ir.InstGetElementPtr,3,43:ir.InstCall
40:ir.Block,4,44:ir.InstTrunc
43:ir.InstCall,3,44:ir.InstTrunc
40:ir.Block,4,45:ir.InstStore
44:ir.InstTrunc,3,45:ir.InstStore
40:ir.Block,4,46:ir.InstLoad
45:ir.InstStore,3,46:ir.InstLoad
40:ir.Block,4,47:ir.InstICmp
46:ir.InstLoad,3,47:ir.InstICmp
47:ir.InstICmp,3,48:ir.TermCondBr
48:ir.TermCondBr,5,53:ir.Block
48:ir.TermCondBr,3,53:ir.Block
48:ir.TermCondBr,5,49:ir.Block
48:ir.TermCondBr,3,49:ir.Block
49:ir.Block,4,50:ir.InstLoad
49:ir.Block,3,50:ir.InstLoad
49:ir.Block,4,51:ir.InstICmp
50:ir.InstLoad,3,51:ir.InstICmp
51:ir.InstICmp,3,52:ir.TermCondBr
52:ir.TermCondBr,5,53:ir.Block
52:ir.TermCondBr,3,53:ir.Block
52:ir.TermCondBr,5,55:ir.Block
52:ir.TermCondBr,3,55:ir.Block
53:ir.Block,3,54:ir.TermBr
54:ir.TermBr,5,64:ir.Block
54:ir.TermBr,3,64:ir.Block
55:ir.Block,4,56:ir.InstLoad
55:ir.Block,3,56:ir.InstLoad
55:ir.Block,4,57:ir.InstSExt
56:ir.InstLoad,3,57:ir.InstSExt
55:ir.Block,4,58:ir.InstGetElementPtr
57:ir.InstSExt,3,58:ir.InstGetElementPtr
55:ir.Block,4,59:ir.InstStore
58:ir.InstGetElementPtr,3,59:ir.InstStore
55:ir.Block,4,60:ir.InstGetElementPtr
59:ir.InstStore,3,60:ir.InstGetElementPtr
55:ir.Block,4,61:ir.InstCall
60:ir.InstGetElementPtr,3,61:ir.InstCall
55:ir.Block,4,62:ir.InstStore
61:ir.InstCall,3,62:ir.InstStore
62:ir.InstStore,3,63:ir.TermBr
63:ir.TermBr,5,64:ir.Block
63:ir.TermBr,3,64:ir.Block
64:ir.Block,4,65:ir.InstLoad
64:ir.Block,3,65:ir.InstLoad
64:ir.Block,4,66:ir.InstICmp
65:ir.InstLoad,3,66:ir.InstICmp
66:ir.InstICmp,3,67:ir.TermCondBr
67:ir.TermCondBr,5,68:ir.Block
67:ir.TermCondBr,3,68:ir.Block
67:ir.TermCondBr,5,72:ir.Block
67:ir.TermCondBr,3,72:ir.Block
68:ir.Block,4,69:ir.InstLoad
68:ir.Block,3,69:ir.InstLoad
68:ir.Block,4,70:ir.InstCall
69:ir.InstLoad,3,70:ir.InstCall
70:ir.InstCall,3,71:ir.TermBr
71:ir.TermBr,5,72:ir.Block
71:ir.TermBr,3,72:ir.Block
72:ir.Block,4,73:ir.InstLoad
72:ir.Block,3,73:ir.InstLoad
72:ir.Block,4,74:ir.InstStore
73:ir.InstLoad,3,74:ir.InstStore
72:ir.Block,4,75:ir.InstCall
74:ir.InstStore,3,75:ir.InstCall
75:ir.InstCall,3,76:ir.TermRet
29:ir.InstGetElementPtr,1,30:ir.InstStore
30:ir.InstStore,2,29:ir.InstGetElementPtr
17:ir.InstLoad,1,18:ir.InstICmp
18:ir.InstICmp,2,17:ir.InstLoad
31:ir.InstGetElementPtr,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstGetElementPtr
33:ir.InstLoad,1,35:ir.InstCall
35:ir.InstCall,2,33:ir.InstLoad
42:ir.InstGetElementPtr,1,43:ir.InstCall
43:ir.InstCall,2,42:ir.InstGetElementPtr
44:ir.InstTrunc,1,45:ir.InstStore
45:ir.InstStore,2,44:ir.InstTrunc
61:ir.InstCall,1,62:ir.InstStore
62:ir.InstStore,2,61:ir.InstCall
73:ir.InstLoad,1,74:ir.InstStore
74:ir.InstStore,2,73:ir.InstLoad
27:ir.InstCall,1,30:ir.InstStore
30:ir.InstStore,2,27:ir.InstCall
69:ir.InstLoad,1,70:ir.InstCall
70:ir.InstCall,2,69:ir.InstLoad
34:ir.InstBitCast,1,35:ir.InstCall
35:ir.InstCall,2,34:ir.InstBitCast
41:ir.InstLoad,1,43:ir.InstCall
43:ir.InstCall,2,41:ir.InstLoad
56:ir.InstLoad,1,57:ir.InstSExt
57:ir.InstSExt,2,56:ir.InstLoad
65:ir.InstLoad,1,66:ir.InstICmp
66:ir.InstICmp,2,65:ir.InstLoad
28:ir.InstGetElementPtr,1,29:ir.InstGetElementPtr
29:ir.InstGetElementPtr,2,28:ir.InstGetElementPtr
25:ir.InstGetElementPtr,1,26:ir.InstStore
26:ir.InstStore,2,25:ir.InstGetElementPtr
46:ir.InstLoad,1,47:ir.InstICmp
47:ir.InstICmp,2,46:ir.InstLoad
60:ir.InstGetElementPtr,1,61:ir.InstCall
61:ir.InstCall,2,60:ir.InstGetElementPtr
15:ir.InstCall,1,16:ir.InstStore
16:ir.InstStore,2,15:ir.InstCall
50:ir.InstLoad,1,51:ir.InstICmp
51:ir.InstICmp,2,50:ir.InstLoad
58:ir.InstGetElementPtr,1,59:ir.InstStore
59:ir.InstStore,2,58:ir.InstGetElementPtr
35:ir.InstCall,1,36:ir.InstICmp
36:ir.InstICmp,2,35:ir.InstCall
2:ir.InstAlloca,1,45:ir.InstStore
45:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,46:ir.InstLoad
46:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,50:ir.InstLoad
50:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,56:ir.InstLoad
56:ir.InstLoad,2,2:ir.InstAlloca
3:ir.InstAlloca,1,23:ir.InstBitCast
23:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,25:ir.InstGetElementPtr
25:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,28:ir.InstGetElementPtr
28:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,31:ir.InstGetElementPtr
31:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,34:ir.InstBitCast
34:ir.InstBitCast,2,3:ir.InstAlloca
4:ir.InstAlloca,1,11:ir.InstStore
11:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,16:ir.InstStore
16:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,17:ir.InstLoad
17:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,65:ir.InstLoad
65:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,69:ir.InstLoad
69:ir.InstLoad,2,4:ir.InstAlloca
23:ir.InstBitCast,1,24:ir.InstCall
24:ir.InstCall,2,23:ir.InstBitCast
5:ir.InstAlloca,1,42:ir.InstGetElementPtr
42:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,58:ir.InstGetElementPtr
58:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,60:ir.InstGetElementPtr
60:ir.InstGetElementPtr,2,5:ir.InstAlloca
43:ir.InstCall,1,44:ir.InstTrunc
44:ir.InstTrunc,2,43:ir.InstCall
1:ir.InstAlloca,1,7:ir.InstStore
7:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,62:ir.InstStore
62:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,73:ir.InstLoad
73:ir.InstLoad,2,1:ir.InstAlloca
19:ir.TermCondBr,2,18:ir.InstICmp
18:ir.InstICmp,1,19:ir.TermCondBr
37:ir.TermCondBr,2,36:ir.InstICmp
36:ir.InstICmp,1,37:ir.TermCondBr
48:ir.TermCondBr,2,47:ir.InstICmp
47:ir.InstICmp,1,48:ir.TermCondBr
52:ir.TermCondBr,2,51:ir.InstICmp
51:ir.InstICmp,1,52:ir.TermCondBr
67:ir.TermCondBr,2,66:ir.InstICmp
66:ir.InstICmp,1,67:ir.TermCondBr
