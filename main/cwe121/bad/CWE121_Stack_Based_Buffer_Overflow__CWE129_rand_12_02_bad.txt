? 129
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstStore ir.InstPhi ;ir.InstStore ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 5};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !14 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 7:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !16];
[MOV] 8:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 6};Callee:i32 (...)* @globalReturnsTrueOrFalse;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !17];
[MOV] 9:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 7};Pred:ne;X:i32 %6;Y:i32 0;Typ:i1;Metadata:[!dbg !17];
[DEL] 10:ir.TermCondBr; ir.InstICmp|Cond:i1 %7;TargetTrue:label %8;TargetFalse:label %32;Successors:[label %8 label %32];Metadata:[!dbg !19];
[DEL] 11:ir.Block; label %8|
[DEL] 12:ir.InstCall; ir.InstCall ;ir.InstAnd |LocalIdent:{ 9};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 13:ir.InstAnd; ir.InstAnd ;ir.InstICmp |LocalIdent:{ 10};X:i32 %9;Y:i32 1;Typ:i32;Metadata:[!dbg !20];
[DEL] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 11};Pred:ne;X:i32 %10;Y:i32 0;Typ:i1;Metadata:[!dbg !20];
[DEL] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %11;TargetTrue:label %12;TargetFalse:label %20;Successors:[label %12 label %20];Metadata:[!dbg !20];
[DEL] 16:ir.Block; label %12|
[DEL] 17:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 13};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 18:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 14};X:i32 %13;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 19:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 15};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 20:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 16};X:i32 %15;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 21:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 17};X:i32 %14;Y:i32 %16;Typ:i32;Metadata:[!dbg !20];
[DEL] 22:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 18};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 23:ir.InstXor; ir.InstXor ;ir.InstPhi |LocalIdent:{ 19};X:i32 %17;Y:i32 %18;Typ:i32;Metadata:[!dbg !20];
[DEL] 24:ir.TermBr; |Target:label %30;Successors:[label %30];Metadata:[!dbg !20];
[DEL] 25:ir.Block; label %20|
[DEL] 26:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 21};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 27:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 22};X:i32 %21;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 28:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 23};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 29:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 24};X:i32 %23;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 30:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 25};X:i32 %22;Y:i32 %24;Typ:i32;Metadata:[!dbg !20];
[DEL] 31:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 26};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[DEL] 32:ir.InstXor; ir.InstXor ;ir.InstSub |LocalIdent:{ 27};X:i32 %25;Y:i32 %26;Typ:i32;Metadata:[!dbg !20];
[DEL] 33:ir.InstSub; ir.InstSub ;ir.InstSub |LocalIdent:{ 28};X:i32 0;Y:i32 %27;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 34:ir.InstSub; ir.InstSub ;ir.InstPhi |LocalIdent:{ 29};X:i32 %28;Y:i32 1;Typ:i32;OverflowFlags:[];Metadata:[!dbg !20];
[DEL] 35:ir.TermBr; |Target:label %30;Successors:[label %30];Metadata:[!dbg !20];
[DEL] 36:ir.Block; label %30|
[DEL] 37:ir.InstPhi; ir.InstPhi ;ir.InstStore |LocalIdent:{ 31};Incs:[[ %19, %12 ] [ %29, %20 ]];Typ:i32;FastMathFlags:[];Metadata:[!dbg !20];
[DEL] 38:ir.InstStore; ;|Src:i32 %31;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !22];
[DEL] 39:ir.TermBr; |Target:label %33;Successors:[label %33];Metadata:[!dbg !23];
[MOV] 40:ir.Block; label %32|
[MOV] 41:ir.InstStore; ;|Src:i32 7;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !24];
[MOV] 42:ir.TermBr; |Target:label %33;Successors:[label %33];Metadata:[];
[MOV] 43:ir.Block; label %33|
[MOV] 44:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 34};Callee:i32 (...)* @globalReturnsTrueOrFalse;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !26];
[MOV] 45:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 35};Pred:ne;X:i32 %34;Y:i32 0;Typ:i1;Metadata:[!dbg !26];
[MOV] 46:ir.TermCondBr; ir.InstICmp|Cond:i1 %35;TargetTrue:label %36;TargetFalse:label %58;Successors:[label %36 label %58];Metadata:[!dbg !28];
[MOV] 47:ir.Block; label %36|
[MOV] 48:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !29 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !32];
[MOV] 49:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !33 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !37];
[MOV] 50:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 37};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !37];
[MOV] 51:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %37 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !37];
[MOV] 52:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 38};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !38];
[MOV] 53:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 39};Pred:sge;X:i32 %38;Y:i32 0;Typ:i1;Metadata:[!dbg !40];
[DEL] 54:ir.TermCondBr; ir.InstICmp|Cond:i1 %39;TargetTrue:label %40;TargetFalse:label %56;Successors:[label %40 label %56];Metadata:[!dbg !41];
[MOV] 55:ir.Block; label %40|
[MOV] 56:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 41};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !42];
[MOV] 57:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 42};From:i32 %41;To:i64;Metadata:[!dbg !44];
[MOV] 58:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 43};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %42];Typ:i32*;InBounds:true;Metadata:[!dbg !44];
[MOV] 59:ir.InstStore; ;|Src:i32 1;Dst:i32* %43;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !45];
[MOV] 60:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !46];
[MOV] 61:ir.TermBr; |Target:label %44;Successors:[label %44];Metadata:[!dbg !48];
[MOV] 62:ir.Block; label %44|
[MOV] 63:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 45};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !49];
[MOV] 64:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 46};Pred:slt;X:i32 %45;Y:i32 10;Typ:i1;Metadata:[!dbg !51];
[MOV] 65:ir.TermCondBr; ir.InstICmp|Cond:i1 %46;TargetTrue:label %47;TargetFalse:label %55;Successors:[label %47 label %55];Metadata:[!dbg !52];
[MOV] 66:ir.Block; label %47|
[MOV] 67:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 48};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !53];
[MOV] 68:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 49};From:i32 %48;To:i64;Metadata:[!dbg !55];
[MOV] 69:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 50};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %49];Typ:i32*;InBounds:true;Metadata:[!dbg !55];
[MOV] 70:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 51};ElemType:i32;Src:i32* %50;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !55];
[MOV] 71:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %51];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !56];
[MOV] 72:ir.TermBr; |Target:label %52;Successors:[label %52];Metadata:[!dbg !57];
[MOV] 73:ir.Block; label %52|
[MOV] 74:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 53};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !58];
[MOV] 75:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 54};X:i32 %53;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !58];
[MOV] 76:ir.InstStore; ;|Src:i32 %54;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !58];
[MOV] 77:ir.TermBr; label %44|Target:label %44;Successors:[label %44];Metadata:[!dbg !59 !llvm.loop !60];
[MOV] 78:ir.Block; label %55|
[MOV] 79:ir.TermBr; |Target:label %57;Successors:[label %57];Metadata:[!dbg !62];
[DEL] 80:ir.Block; label %56|
[DEL] 81:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !63];
[DEL] 82:ir.TermBr; |Target:label %57;Successors:[label %57];Metadata:[];
[MOV] 83:ir.Block; label %57|
[MOV] 84:ir.TermBr; |Target:label %83;Successors:[label %83];Metadata:[!dbg !65];
[MOV] 85:ir.Block; label %58|
[MOV] 86:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !66 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !69];
[MOV] 87:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %5 metadata !70 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !71];
[MOV] 88:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 59};From:[10 x i32]* %5;To:i8*;Metadata:[!dbg !71];
[MOV] 89:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %59 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !71];
[MOV] 90:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 60};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !72];
[MOV] 91:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 61};Pred:sge;X:i32 %60;Y:i32 0;Typ:i1;Metadata:[!dbg !74];
[DEL] 92:ir.TermCondBr; ir.InstICmp|Cond:i1 %61;TargetTrue:label %62;TargetFalse:label %81;Successors:[label %62 label %81];Metadata:[!dbg !75];
[DEL] 93:ir.Block; label %62|
[DEL] 94:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 63};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !76];
[DEL] 95:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 64};Pred:slt;X:i32 %63;Y:i32 10;Typ:i1;Metadata:[!dbg !77];
[DEL] 96:ir.TermCondBr; ir.InstICmp|Cond:i1 %64;TargetTrue:label %65;TargetFalse:label %81;Successors:[label %65 label %81];Metadata:[!dbg !78];
[MOV] 97:ir.Block; label %65|
[MOV] 98:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 66};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !79];
[MOV] 99:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 67};From:i32 %66;To:i64;Metadata:[!dbg !81];
[MOV] 100:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 68};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %67];Typ:i32*;InBounds:true;Metadata:[!dbg !81];
[MOV] 101:ir.InstStore; ;|Src:i32 1;Dst:i32* %68;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !82];
[MOV] 102:ir.InstStore; ;|Src:i32 0;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !83];
[MOV] 103:ir.TermBr; |Target:label %69;Successors:[label %69];Metadata:[!dbg !85];
[MOV] 104:ir.Block; label %69|
[MOV] 105:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 70};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !86];
[MOV] 106:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 71};Pred:slt;X:i32 %70;Y:i32 10;Typ:i1;Metadata:[!dbg !88];
[MOV] 107:ir.TermCondBr; ir.InstICmp|Cond:i1 %71;TargetTrue:label %72;TargetFalse:label %80;Successors:[label %72 label %80];Metadata:[!dbg !89];
[MOV] 108:ir.Block; label %72|
[MOV] 109:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 73};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !90];
[MOV] 110:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 74};From:i32 %73;To:i64;Metadata:[!dbg !92];
[MOV] 111:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 75};ElemType:[10 x i32];Src:[10 x i32]* %5;Indices:[i64 0 i64 %74];Typ:i32*;InBounds:true;Metadata:[!dbg !92];
[MOV] 112:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 76};ElemType:i32;Src:i32* %75;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !92];
[MOV] 113:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %76];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !93];
[MOV] 114:ir.TermBr; |Target:label %77;Successors:[label %77];Metadata:[!dbg !94];
[MOV] 115:ir.Block; label %77|
[MOV] 116:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 78};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !95];
[MOV] 117:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 79};X:i32 %78;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !95];
[MOV] 118:ir.InstStore; ;|Src:i32 %79;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !95];
[MOV] 119:ir.TermBr; label %69|Target:label %69;Successors:[label %69];Metadata:[!dbg !96 !llvm.loop !97];
[MOV] 120:ir.Block; label %80|
[MOV] 121:ir.TermBr; |Target:label %82;Successors:[label %82];Metadata:[!dbg !99];
[DEL] 122:ir.Block; label %81|
[DEL] 123:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !100];
[DEL] 124:ir.TermBr; |Target:label %82;Successors:[label %82];Metadata:[];
[MOV] 125:ir.Block; label %82|
[MOV] 126:ir.TermBr; |Target:label %83;Successors:[label %83];Metadata:[];
[MOV] 127:ir.Block; label %83|
[MOV] 128:ir.TermRet; |X:<nil>;Metadata:[!dbg !102];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstStore
6:ir.InstCall,3,7:ir.InstStore
0:ir.Block,4,8:ir.InstCall
7:ir.InstStore,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstICmp
8:ir.InstCall,3,9:ir.InstICmp
9:ir.InstICmp,3,10:ir.TermCondBr
10:ir.TermCondBr,5,11:ir.Block
10:ir.TermCondBr,3,11:ir.Block
10:ir.TermCondBr,5,40:ir.Block
10:ir.TermCondBr,3,40:ir.Block
11:ir.Block,4,12:ir.InstCall
11:ir.Block,3,12:ir.InstCall
11:ir.Block,4,13:ir.InstAnd
12:ir.InstCall,3,13:ir.InstAnd
11:ir.Block,4,14:ir.InstICmp
13:ir.InstAnd,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,25:ir.Block
15:ir.TermCondBr,3,25:ir.Block
16:ir.Block,4,17:ir.InstCall
16:ir.Block,3,17:ir.InstCall
16:ir.Block,4,18:ir.InstShl
17:ir.InstCall,3,18:ir.InstShl
16:ir.Block,4,19:ir.InstCall
18:ir.InstShl,3,19:ir.InstCall
16:ir.Block,4,20:ir.InstShl
19:ir.InstCall,3,20:ir.InstShl
16:ir.Block,4,21:ir.InstXor
20:ir.InstShl,3,21:ir.InstXor
16:ir.Block,4,22:ir.InstCall
21:ir.InstXor,3,22:ir.InstCall
16:ir.Block,4,23:ir.InstXor
22:ir.InstCall,3,23:ir.InstXor
23:ir.InstXor,3,24:ir.TermBr
24:ir.TermBr,5,36:ir.Block
24:ir.TermBr,3,36:ir.Block
25:ir.Block,4,26:ir.InstCall
25:ir.Block,3,26:ir.InstCall
25:ir.Block,4,27:ir.InstShl
26:ir.InstCall,3,27:ir.InstShl
25:ir.Block,4,28:ir.InstCall
27:ir.InstShl,3,28:ir.InstCall
25:ir.Block,4,29:ir.InstShl
28:ir.InstCall,3,29:ir.InstShl
25:ir.Block,4,30:ir.InstXor
29:ir.InstShl,3,30:ir.InstXor
25:ir.Block,4,31:ir.InstCall
30:ir.InstXor,3,31:ir.InstCall
25:ir.Block,4,32:ir.InstXor
31:ir.InstCall,3,32:ir.InstXor
25:ir.Block,4,33:ir.InstSub
32:ir.InstXor,3,33:ir.InstSub
25:ir.Block,4,34:ir.InstSub
33:ir.InstSub,3,34:ir.InstSub
34:ir.InstSub,3,35:ir.TermBr
35:ir.TermBr,5,36:ir.Block
35:ir.TermBr,3,36:ir.Block
36:ir.Block,4,37:ir.InstPhi
36:ir.Block,3,37:ir.InstPhi
36:ir.Block,4,38:ir.InstStore
37:ir.InstPhi,3,38:ir.InstStore
38:ir.InstStore,3,39:ir.TermBr
39:ir.TermBr,5,43:ir.Block
39:ir.TermBr,3,43:ir.Block
40:ir.Block,4,41:ir.InstStore
40:ir.Block,3,41:ir.InstStore
41:ir.InstStore,3,42:ir.TermBr
42:ir.TermBr,5,43:ir.Block
42:ir.TermBr,3,43:ir.Block
43:ir.Block,4,44:ir.InstCall
43:ir.Block,3,44:ir.InstCall
43:ir.Block,4,45:ir.InstICmp
44:ir.InstCall,3,45:ir.InstICmp
45:ir.InstICmp,3,46:ir.TermCondBr
46:ir.TermCondBr,5,47:ir.Block
46:ir.TermCondBr,3,47:ir.Block
46:ir.TermCondBr,5,85:ir.Block
46:ir.TermCondBr,3,85:ir.Block
47:ir.Block,4,48:ir.InstCall
47:ir.Block,3,48:ir.InstCall
47:ir.Block,4,49:ir.InstCall
48:ir.InstCall,3,49:ir.InstCall
47:ir.Block,4,50:ir.InstBitCast
49:ir.InstCall,3,50:ir.InstBitCast
47:ir.Block,4,51:ir.InstCall
50:ir.InstBitCast,3,51:ir.InstCall
47:ir.Block,4,52:ir.InstLoad
51:ir.InstCall,3,52:ir.InstLoad
47:ir.Block,4,53:ir.InstICmp
52:ir.InstLoad,3,53:ir.InstICmp
53:ir.InstICmp,3,54:ir.TermCondBr
54:ir.TermCondBr,5,55:ir.Block
54:ir.TermCondBr,3,55:ir.Block
54:ir.TermCondBr,5,80:ir.Block
54:ir.TermCondBr,3,80:ir.Block
55:ir.Block,4,56:ir.InstLoad
55:ir.Block,3,56:ir.InstLoad
55:ir.Block,4,57:ir.InstSExt
56:ir.InstLoad,3,57:ir.InstSExt
55:ir.Block,4,58:ir.InstGetElementPtr
57:ir.InstSExt,3,58:ir.InstGetElementPtr
55:ir.Block,4,59:ir.InstStore
58:ir.InstGetElementPtr,3,59:ir.InstStore
55:ir.Block,4,60:ir.InstStore
59:ir.InstStore,3,60:ir.InstStore
60:ir.InstStore,3,61:ir.TermBr
61:ir.TermBr,5,62:ir.Block
61:ir.TermBr,3,62:ir.Block
62:ir.Block,4,63:ir.InstLoad
62:ir.Block,3,63:ir.InstLoad
62:ir.Block,4,64:ir.InstICmp
63:ir.InstLoad,3,64:ir.InstICmp
64:ir.InstICmp,3,65:ir.TermCondBr
65:ir.TermCondBr,5,66:ir.Block
65:ir.TermCondBr,3,66:ir.Block
65:ir.TermCondBr,5,78:ir.Block
65:ir.TermCondBr,3,78:ir.Block
66:ir.Block,4,67:ir.InstLoad
66:ir.Block,3,67:ir.InstLoad
66:ir.Block,4,68:ir.InstSExt
67:ir.InstLoad,3,68:ir.InstSExt
66:ir.Block,4,69:ir.InstGetElementPtr
68:ir.InstSExt,3,69:ir.InstGetElementPtr
66:ir.Block,4,70:ir.InstLoad
69:ir.InstGetElementPtr,3,70:ir.InstLoad
66:ir.Block,4,71:ir.InstCall
70:ir.InstLoad,3,71:ir.InstCall
71:ir.InstCall,3,72:ir.TermBr
72:ir.TermBr,5,73:ir.Block
72:ir.TermBr,3,73:ir.Block
73:ir.Block,4,74:ir.InstLoad
73:ir.Block,3,74:ir.InstLoad
73:ir.Block,4,75:ir.InstAdd
74:ir.InstLoad,3,75:ir.InstAdd
73:ir.Block,4,76:ir.InstStore
75:ir.InstAdd,3,76:ir.InstStore
76:ir.InstStore,3,77:ir.TermBr
77:ir.TermBr,5,62:ir.Block
77:ir.TermBr,3,62:ir.Block
78:ir.Block,3,79:ir.TermBr
79:ir.TermBr,5,83:ir.Block
79:ir.TermBr,3,83:ir.Block
80:ir.Block,4,81:ir.InstCall
80:ir.Block,3,81:ir.InstCall
81:ir.InstCall,3,82:ir.TermBr
82:ir.TermBr,5,83:ir.Block
82:ir.TermBr,3,83:ir.Block
83:ir.Block,3,84:ir.TermBr
84:ir.TermBr,5,127:ir.Block
84:ir.TermBr,3,127:ir.Block
85:ir.Block,4,86:ir.InstCall
85:ir.Block,3,86:ir.InstCall
85:ir.Block,4,87:ir.InstCall
86:ir.InstCall,3,87:ir.InstCall
85:ir.Block,4,88:ir.InstBitCast
87:ir.InstCall,3,88:ir.InstBitCast
85:ir.Block,4,89:ir.InstCall
88:ir.InstBitCast,3,89:ir.InstCall
85:ir.Block,4,90:ir.InstLoad
89:ir.InstCall,3,90:ir.InstLoad
85:ir.Block,4,91:ir.InstICmp
90:ir.InstLoad,3,91:ir.InstICmp
91:ir.InstICmp,3,92:ir.TermCondBr
92:ir.TermCondBr,5,93:ir.Block
92:ir.TermCondBr,3,93:ir.Block
92:ir.TermCondBr,5,122:ir.Block
92:ir.TermCondBr,3,122:ir.Block
93:ir.Block,4,94:ir.InstLoad
93:ir.Block,3,94:ir.InstLoad
93:ir.Block,4,95:ir.InstICmp
94:ir.InstLoad,3,95:ir.InstICmp
95:ir.InstICmp,3,96:ir.TermCondBr
96:ir.TermCondBr,5,97:ir.Block
96:ir.TermCondBr,3,97:ir.Block
96:ir.TermCondBr,5,122:ir.Block
96:ir.TermCondBr,3,122:ir.Block
97:ir.Block,4,98:ir.InstLoad
97:ir.Block,3,98:ir.InstLoad
97:ir.Block,4,99:ir.InstSExt
98:ir.InstLoad,3,99:ir.InstSExt
97:ir.Block,4,100:ir.InstGetElementPtr
99:ir.InstSExt,3,100:ir.InstGetElementPtr
97:ir.Block,4,101:ir.InstStore
100:ir.InstGetElementPtr,3,101:ir.InstStore
97:ir.Block,4,102:ir.InstStore
101:ir.InstStore,3,102:ir.InstStore
102:ir.InstStore,3,103:ir.TermBr
103:ir.TermBr,5,104:ir.Block
103:ir.TermBr,3,104:ir.Block
104:ir.Block,4,105:ir.InstLoad
104:ir.Block,3,105:ir.InstLoad
104:ir.Block,4,106:ir.InstICmp
105:ir.InstLoad,3,106:ir.InstICmp
106:ir.InstICmp,3,107:ir.TermCondBr
107:ir.TermCondBr,5,108:ir.Block
107:ir.TermCondBr,3,108:ir.Block
107:ir.TermCondBr,5,120:ir.Block
107:ir.TermCondBr,3,120:ir.Block
108:ir.Block,4,109:ir.InstLoad
108:ir.Block,3,109:ir.InstLoad
108:ir.Block,4,110:ir.InstSExt
109:ir.InstLoad,3,110:ir.InstSExt
108:ir.Block,4,111:ir.InstGetElementPtr
110:ir.InstSExt,3,111:ir.InstGetElementPtr
108:ir.Block,4,112:ir.InstLoad
111:ir.InstGetElementPtr,3,112:ir.InstLoad
108:ir.Block,4,113:ir.InstCall
112:ir.InstLoad,3,113:ir.InstCall
113:ir.InstCall,3,114:ir.TermBr
114:ir.TermBr,5,115:ir.Block
114:ir.TermBr,3,115:ir.Block
115:ir.Block,4,116:ir.InstLoad
115:ir.Block,3,116:ir.InstLoad
115:ir.Block,4,117:ir.InstAdd
116:ir.InstLoad,3,117:ir.InstAdd
115:ir.Block,4,118:ir.InstStore
117:ir.InstAdd,3,118:ir.InstStore
118:ir.InstStore,3,119:ir.TermBr
119:ir.TermBr,5,104:ir.Block
119:ir.TermBr,3,104:ir.Block
120:ir.Block,3,121:ir.TermBr
121:ir.TermBr,5,125:ir.Block
121:ir.TermBr,3,125:ir.Block
122:ir.Block,4,123:ir.InstCall
122:ir.Block,3,123:ir.InstCall
123:ir.InstCall,3,124:ir.TermBr
124:ir.TermBr,5,125:ir.Block
124:ir.TermBr,3,125:ir.Block
125:ir.Block,3,126:ir.TermBr
126:ir.TermBr,5,127:ir.Block
126:ir.TermBr,3,127:ir.Block
127:ir.Block,3,128:ir.TermRet
12:ir.InstCall,1,13:ir.InstAnd
13:ir.InstAnd,2,12:ir.InstCall
44:ir.InstCall,1,45:ir.InstICmp
45:ir.InstICmp,2,44:ir.InstCall
90:ir.InstLoad,1,91:ir.InstICmp
91:ir.InstICmp,2,90:ir.InstLoad
116:ir.InstLoad,1,117:ir.InstAdd
117:ir.InstAdd,2,116:ir.InstLoad
27:ir.InstShl,1,30:ir.InstXor
30:ir.InstXor,2,27:ir.InstShl
31:ir.InstCall,1,32:ir.InstXor
32:ir.InstXor,2,31:ir.InstCall
52:ir.InstLoad,1,53:ir.InstICmp
53:ir.InstICmp,2,52:ir.InstLoad
69:ir.InstGetElementPtr,1,70:ir.InstLoad
70:ir.InstLoad,2,69:ir.InstGetElementPtr
98:ir.InstLoad,1,99:ir.InstSExt
99:ir.InstSExt,2,98:ir.InstLoad
28:ir.InstCall,1,29:ir.InstShl
29:ir.InstShl,2,28:ir.InstCall
50:ir.InstBitCast,1,51:ir.InstCall
51:ir.InstCall,2,50:ir.InstBitCast
94:ir.InstLoad,1,95:ir.InstICmp
95:ir.InstICmp,2,94:ir.InstLoad
100:ir.InstGetElementPtr,1,101:ir.InstStore
101:ir.InstStore,2,100:ir.InstGetElementPtr
4:ir.InstAlloca,1,102:ir.InstStore
102:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,105:ir.InstLoad
105:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,109:ir.InstLoad
109:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,116:ir.InstLoad
116:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,118:ir.InstStore
118:ir.InstStore,2,4:ir.InstAlloca
111:ir.InstGetElementPtr,1,112:ir.InstLoad
112:ir.InstLoad,2,111:ir.InstGetElementPtr
117:ir.InstAdd,1,118:ir.InstStore
118:ir.InstStore,2,117:ir.InstAdd
19:ir.InstCall,1,20:ir.InstShl
20:ir.InstShl,2,19:ir.InstCall
18:ir.InstShl,1,21:ir.InstXor
21:ir.InstXor,2,18:ir.InstShl
70:ir.InstLoad,1,71:ir.InstCall
71:ir.InstCall,2,70:ir.InstLoad
5:ir.InstAlloca,1,88:ir.InstBitCast
88:ir.InstBitCast,2,5:ir.InstAlloca
5:ir.InstAlloca,1,100:ir.InstGetElementPtr
100:ir.InstGetElementPtr,2,5:ir.InstAlloca
5:ir.InstAlloca,1,111:ir.InstGetElementPtr
111:ir.InstGetElementPtr,2,5:ir.InstAlloca
88:ir.InstBitCast,1,89:ir.InstCall
89:ir.InstCall,2,88:ir.InstBitCast
109:ir.InstLoad,1,110:ir.InstSExt
110:ir.InstSExt,2,109:ir.InstLoad
112:ir.InstLoad,1,113:ir.InstCall
113:ir.InstCall,2,112:ir.InstLoad
13:ir.InstAnd,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstAnd
21:ir.InstXor,1,23:ir.InstXor
23:ir.InstXor,2,21:ir.InstXor
32:ir.InstXor,1,33:ir.InstSub
33:ir.InstSub,2,32:ir.InstXor
37:ir.InstPhi,1,38:ir.InstStore
38:ir.InstStore,2,37:ir.InstPhi
3:ir.InstAlloca,1,50:ir.InstBitCast
50:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,58:ir.InstGetElementPtr
58:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,69:ir.InstGetElementPtr
69:ir.InstGetElementPtr,2,3:ir.InstAlloca
75:ir.InstAdd,1,76:ir.InstStore
76:ir.InstStore,2,75:ir.InstAdd
105:ir.InstLoad,1,106:ir.InstICmp
106:ir.InstICmp,2,105:ir.InstLoad
1:ir.InstAlloca,1,7:ir.InstStore
7:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,38:ir.InstStore
38:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,41:ir.InstStore
41:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,52:ir.InstLoad
52:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,56:ir.InstLoad
56:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,90:ir.InstLoad
90:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,94:ir.InstLoad
94:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,98:ir.InstLoad
98:ir.InstLoad,2,1:ir.InstAlloca
33:ir.InstSub,1,34:ir.InstSub
34:ir.InstSub,2,33:ir.InstSub
34:ir.InstSub,1,37:ir.InstPhi
37:ir.InstPhi,2,34:ir.InstSub
56:ir.InstLoad,1,57:ir.InstSExt
57:ir.InstSExt,2,56:ir.InstLoad
58:ir.InstGetElementPtr,1,59:ir.InstStore
59:ir.InstStore,2,58:ir.InstGetElementPtr
2:ir.InstAlloca,1,60:ir.InstStore
60:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,63:ir.InstLoad
63:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,67:ir.InstLoad
67:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,74:ir.InstLoad
74:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,76:ir.InstStore
76:ir.InstStore,2,2:ir.InstAlloca
67:ir.InstLoad,1,68:ir.InstSExt
68:ir.InstSExt,2,67:ir.InstLoad
17:ir.InstCall,1,18:ir.InstShl
18:ir.InstShl,2,17:ir.InstCall
22:ir.InstCall,1,23:ir.InstXor
23:ir.InstXor,2,22:ir.InstCall
26:ir.InstCall,1,27:ir.InstShl
27:ir.InstShl,2,26:ir.InstCall
29:ir.InstShl,1,30:ir.InstXor
30:ir.InstXor,2,29:ir.InstShl
30:ir.InstXor,1,32:ir.InstXor
32:ir.InstXor,2,30:ir.InstXor
8:ir.InstCall,1,9:ir.InstICmp
9:ir.InstICmp,2,8:ir.InstCall
20:ir.InstShl,1,21:ir.InstXor
21:ir.InstXor,2,20:ir.InstShl
23:ir.InstXor,1,37:ir.InstPhi
37:ir.InstPhi,2,23:ir.InstXor
63:ir.InstLoad,1,64:ir.InstICmp
64:ir.InstICmp,2,63:ir.InstLoad
74:ir.InstLoad,1,75:ir.InstAdd
75:ir.InstAdd,2,74:ir.InstLoad
107:ir.TermCondBr,2,106:ir.InstICmp
106:ir.InstICmp,1,107:ir.TermCondBr
10:ir.TermCondBr,2,9:ir.InstICmp
9:ir.InstICmp,1,10:ir.TermCondBr
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
46:ir.TermCondBr,2,45:ir.InstICmp
45:ir.InstICmp,1,46:ir.TermCondBr
54:ir.TermCondBr,2,53:ir.InstICmp
53:ir.InstICmp,1,54:ir.TermCondBr
65:ir.TermCondBr,2,64:ir.InstICmp
64:ir.InstICmp,1,65:ir.TermCondBr
92:ir.TermCondBr,2,91:ir.InstICmp
91:ir.InstICmp,1,92:ir.TermCondBr
96:ir.TermCondBr,2,95:ir.InstICmp
95:ir.InstICmp,1,96:ir.TermCondBr
