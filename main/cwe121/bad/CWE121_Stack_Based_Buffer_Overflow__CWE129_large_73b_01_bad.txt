? 46
[MOV] 0:ir.Block; label %1|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 3};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata %"class.std::__1::list"* %0 metadata !1006 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1007];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !1008 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1009];
[MOV] 6:ir.InstCall; ir.InstCall ;ir.InstLoad |LocalIdent:{ 5};Callee:i32* (%"class.std::__1::list"*)* @_ZNSt3__14listIiNS_9allocatorIiEEE4backEv;Args:[%"class.std::__1::list"* %0];Typ:i32*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[dereferenceable(4)];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1010];
[MOV] 7:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 6};ElemType:i32;Src:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1010];
[MOV] 8:ir.InstStore; ;|Src:i32 %6;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1009];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %3 metadata !1011 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1013];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %4 metadata !1014 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1018];
[MOV] 11:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 7};From:[10 x i32]* %4;To:i8*;Metadata:[!dbg !1018];
[MOV] 12:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %7 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1018];
[MOV] 13:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 8};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1019];
[MOV] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:sge;X:i32 %8;Y:i32 0;Typ:i1;Metadata:[!dbg !1021];
[DEL] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %26;Successors:[label %10 label %26];Metadata:[!dbg !1022];
[MOV] 16:ir.Block; label %10|
[MOV] 17:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 11};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1023];
[MOV] 18:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 12};From:i32 %11;To:i64;Metadata:[!dbg !1025];
[MOV] 19:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 13};ElemType:[10 x i32];Src:[10 x i32]* %4;Indices:[i64 0 i64 %12];Typ:i32*;InBounds:true;Metadata:[!dbg !1025];
[MOV] 20:ir.InstStore; ;|Src:i32 1;Dst:i32* %13;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1026];
[MOV] 21:ir.InstStore; ;|Src:i32 0;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1027];
[MOV] 22:ir.TermBr; |Target:label %14;Successors:[label %14];Metadata:[!dbg !1029];
[MOV] 23:ir.Block; label %14|
[MOV] 24:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 15};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1030];
[MOV] 25:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 16};Pred:slt;X:i32 %15;Y:i32 10;Typ:i1;Metadata:[!dbg !1032];
[MOV] 26:ir.TermCondBr; ir.InstICmp|Cond:i1 %16;TargetTrue:label %17;TargetFalse:label %25;Successors:[label %17 label %25];Metadata:[!dbg !1033];
[MOV] 27:ir.Block; label %17|
[MOV] 28:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 18};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1034];
[MOV] 29:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 19};From:i32 %18;To:i64;Metadata:[!dbg !1036];
[MOV] 30:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 20};ElemType:[10 x i32];Src:[10 x i32]* %4;Indices:[i64 0 i64 %19];Typ:i32*;InBounds:true;Metadata:[!dbg !1036];
[MOV] 31:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 21};ElemType:i32;Src:i32* %20;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1036];
[MOV] 32:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %21];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1037];
[MOV] 33:ir.TermBr; |Target:label %22;Successors:[label %22];Metadata:[!dbg !1038];
[MOV] 34:ir.Block; label %22|
[MOV] 35:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 23};ElemType:i32;Src:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1039];
[MOV] 36:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 24};X:i32 %23;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !1039];
[MOV] 37:ir.InstStore; ;|Src:i32 %24;Dst:i32* %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !1039];
[MOV] 38:ir.TermBr; label %14|Target:label %14;Successors:[label %14];Metadata:[!dbg !1040 !llvm.loop !1041];
[MOV] 39:ir.Block; label %25|
[MOV] 40:ir.TermBr; |Target:label %27;Successors:[label %27];Metadata:[!dbg !1043];
[MOV] 41:ir.Block; label %26|
[MOV] 42:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !1044];
[MOV] 43:ir.TermBr; |Target:label %27;Successors:[label %27];Metadata:[];
[MOV] 44:ir.Block; label %27|
[MOV] 45:ir.TermRet; |X:<nil>;Metadata:[!dbg !1046];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstCall
4:ir.InstCall,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstCall
5:ir.InstCall,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstLoad
6:ir.InstCall,3,7:ir.InstLoad
0:ir.Block,4,8:ir.InstStore
7:ir.InstLoad,3,8:ir.InstStore
0:ir.Block,4,9:ir.InstCall
8:ir.InstStore,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstCall
9:ir.InstCall,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstBitCast
10:ir.InstCall,3,11:ir.InstBitCast
0:ir.Block,4,12:ir.InstCall
11:ir.InstBitCast,3,12:ir.InstCall
0:ir.Block,4,13:ir.InstLoad
12:ir.InstCall,3,13:ir.InstLoad
0:ir.Block,4,14:ir.InstICmp
13:ir.InstLoad,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,41:ir.Block
15:ir.TermCondBr,3,41:ir.Block
16:ir.Block,4,17:ir.InstLoad
16:ir.Block,3,17:ir.InstLoad
16:ir.Block,4,18:ir.InstSExt
17:ir.InstLoad,3,18:ir.InstSExt
16:ir.Block,4,19:ir.InstGetElementPtr
18:ir.InstSExt,3,19:ir.InstGetElementPtr
16:ir.Block,4,20:ir.InstStore
19:ir.InstGetElementPtr,3,20:ir.InstStore
16:ir.Block,4,21:ir.InstStore
20:ir.InstStore,3,21:ir.InstStore
21:ir.InstStore,3,22:ir.TermBr
22:ir.TermBr,5,23:ir.Block
22:ir.TermBr,3,23:ir.Block
23:ir.Block,4,24:ir.InstLoad
23:ir.Block,3,24:ir.InstLoad
23:ir.Block,4,25:ir.InstICmp
24:ir.InstLoad,3,25:ir.InstICmp
25:ir.InstICmp,3,26:ir.TermCondBr
26:ir.TermCondBr,5,27:ir.Block
26:ir.TermCondBr,3,27:ir.Block
26:ir.TermCondBr,5,39:ir.Block
26:ir.TermCondBr,3,39:ir.Block
27:ir.Block,4,28:ir.InstLoad
27:ir.Block,3,28:ir.InstLoad
27:ir.Block,4,29:ir.InstSExt
28:ir.InstLoad,3,29:ir.InstSExt
27:ir.Block,4,30:ir.InstGetElementPtr
29:ir.InstSExt,3,30:ir.InstGetElementPtr
27:ir.Block,4,31:ir.InstLoad
30:ir.InstGetElementPtr,3,31:ir.InstLoad
27:ir.Block,4,32:ir.InstCall
31:ir.InstLoad,3,32:ir.InstCall
32:ir.InstCall,3,33:ir.TermBr
33:ir.TermBr,5,34:ir.Block
33:ir.TermBr,3,34:ir.Block
34:ir.Block,4,35:ir.InstLoad
34:ir.Block,3,35:ir.InstLoad
34:ir.Block,4,36:ir.InstAdd
35:ir.InstLoad,3,36:ir.InstAdd
34:ir.Block,4,37:ir.InstStore
36:ir.InstAdd,3,37:ir.InstStore
37:ir.InstStore,3,38:ir.TermBr
38:ir.TermBr,5,23:ir.Block
38:ir.TermBr,3,23:ir.Block
39:ir.Block,3,40:ir.TermBr
40:ir.TermBr,5,44:ir.Block
40:ir.TermBr,3,44:ir.Block
41:ir.Block,4,42:ir.InstCall
41:ir.Block,3,42:ir.InstCall
42:ir.InstCall,3,43:ir.TermBr
43:ir.TermBr,5,44:ir.Block
43:ir.TermBr,3,44:ir.Block
44:ir.Block,3,45:ir.TermRet
1:ir.InstAlloca,1,8:ir.InstStore
8:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstLoad
13:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,17:ir.InstLoad
17:ir.InstLoad,2,1:ir.InstAlloca
13:ir.InstLoad,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstLoad
19:ir.InstGetElementPtr,1,20:ir.InstStore
20:ir.InstStore,2,19:ir.InstGetElementPtr
24:ir.InstLoad,1,25:ir.InstICmp
25:ir.InstICmp,2,24:ir.InstLoad
28:ir.InstLoad,1,29:ir.InstSExt
29:ir.InstSExt,2,28:ir.InstLoad
6:ir.InstCall,1,7:ir.InstLoad
7:ir.InstLoad,2,6:ir.InstCall
7:ir.InstLoad,1,8:ir.InstStore
8:ir.InstStore,2,7:ir.InstLoad
35:ir.InstLoad,1,36:ir.InstAdd
36:ir.InstAdd,2,35:ir.InstLoad
36:ir.InstAdd,1,37:ir.InstStore
37:ir.InstStore,2,36:ir.InstAdd
3:ir.InstAlloca,1,11:ir.InstBitCast
11:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,19:ir.InstGetElementPtr
19:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,30:ir.InstGetElementPtr
30:ir.InstGetElementPtr,2,3:ir.InstAlloca
11:ir.InstBitCast,1,12:ir.InstCall
12:ir.InstCall,2,11:ir.InstBitCast
17:ir.InstLoad,1,18:ir.InstSExt
18:ir.InstSExt,2,17:ir.InstLoad
2:ir.InstAlloca,1,21:ir.InstStore
21:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,24:ir.InstLoad
24:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,37:ir.InstStore
37:ir.InstStore,2,2:ir.InstAlloca
30:ir.InstGetElementPtr,1,31:ir.InstLoad
31:ir.InstLoad,2,30:ir.InstGetElementPtr
31:ir.InstLoad,1,32:ir.InstCall
32:ir.InstCall,2,31:ir.InstLoad
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
26:ir.TermCondBr,2,25:ir.InstICmp
25:ir.InstICmp,1,26:ir.TermCondBr
