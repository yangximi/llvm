? 89
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ;ir.InstStore ir.InstStore ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstLoad ir.InstPhi ;ir.InstStore ir.InstStore ir.InstLoad |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 5};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 6};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 7};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !14 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %2 metadata !16 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !18];
[MOV] 10:ir.InstStore; ;|Src:i32* %1;Dst:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !18];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %3 metadata !19 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[MOV] 12:ir.InstStore; ;|Src:i32* %1;Dst:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !20];
[MOV] 13:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !21];
[MOV] 14:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !22 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !24];
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstLoad |LocalIdent:{ 8};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !25];
[MOV] 16:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 9};ElemType:i32;Src:i32* %8;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !26];
[MOV] 17:ir.InstStore; ;|Src:i32 %9;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !24];
[DEL] 18:ir.InstCall; ir.InstCall ;ir.InstAnd |LocalIdent:{ 10};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[DEL] 19:ir.InstAnd; ir.InstAnd ;ir.InstICmp |LocalIdent:{ 11};X:i32 %10;Y:i32 1;Typ:i32;Metadata:[!dbg !27];
[DEL] 20:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 12};Pred:ne;X:i32 %11;Y:i32 0;Typ:i1;Metadata:[!dbg !27];
[DEL] 21:ir.TermCondBr; ir.InstICmp|Cond:i1 %12;TargetTrue:label %13;TargetFalse:label %21;Successors:[label %13 label %21];Metadata:[!dbg !27];
[DEL] 22:ir.Block; label %13|
[DEL] 23:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 14};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[DEL] 24:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 15};X:i32 %14;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !27];
[DEL] 25:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 16};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[DEL] 26:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 17};X:i32 %16;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !27];
[DEL] 27:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 18};X:i32 %15;Y:i32 %17;Typ:i32;Metadata:[!dbg !27];
[DEL] 28:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 19};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[DEL] 29:ir.InstXor; ir.InstXor ;ir.InstPhi |LocalIdent:{ 20};X:i32 %18;Y:i32 %19;Typ:i32;Metadata:[!dbg !27];
[DEL] 30:ir.TermBr; |Target:label %31;Successors:[label %31];Metadata:[!dbg !27];
[DEL] 31:ir.Block; label %21|
[DEL] 32:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 22};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[DEL] 33:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 23};X:i32 %22;Y:i32 30;Typ:i32;OverflowFlags:[];Metadata:[!dbg !27];
[DEL] 34:ir.InstCall; ir.InstCall ;ir.InstShl |LocalIdent:{ 24};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[DEL] 35:ir.InstShl; ir.InstShl ;ir.InstXor |LocalIdent:{ 25};X:i32 %24;Y:i32 15;Typ:i32;OverflowFlags:[];Metadata:[!dbg !27];
[DEL] 36:ir.InstXor; ir.InstXor ;ir.InstXor |LocalIdent:{ 26};X:i32 %23;Y:i32 %25;Typ:i32;Metadata:[!dbg !27];
[DEL] 37:ir.InstCall; ir.InstCall ;ir.InstXor |LocalIdent:{ 27};Callee:i32 ()* @rand;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !27];
[DEL] 38:ir.InstXor; ir.InstXor ;ir.InstSub |LocalIdent:{ 28};X:i32 %26;Y:i32 %27;Typ:i32;Metadata:[!dbg !27];
[DEL] 39:ir.InstSub; ir.InstSub ;ir.InstSub |LocalIdent:{ 29};X:i32 0;Y:i32 %28;Typ:i32;OverflowFlags:[];Metadata:[!dbg !27];
[DEL] 40:ir.InstSub; ir.InstSub ;ir.InstPhi |LocalIdent:{ 30};X:i32 %29;Y:i32 1;Typ:i32;OverflowFlags:[];Metadata:[!dbg !27];
[DEL] 41:ir.TermBr; |Target:label %31;Successors:[label %31];Metadata:[!dbg !27];
[DEL] 42:ir.Block; label %31|
[DEL] 43:ir.InstPhi; ir.InstPhi ;ir.InstStore |LocalIdent:{ 32};Incs:[[ %20, %13 ] [ %30, %21 ]];Typ:i32;FastMathFlags:[];Metadata:[!dbg !27];
[DEL] 44:ir.InstStore; ;|Src:i32 %32;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !28];
[DEL] 45:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 33};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !29];
[DEL] 46:ir.InstLoad; ir.InstLoad ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 34};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !30];
[DEL] 47:ir.InstStore; ;|Src:i32 %33;Dst:i32* %34;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !31];
[DEL] 48:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %5 metadata !32 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !34];
[DEL] 49:ir.InstLoad; ir.InstLoad ;ir.InstLoad |LocalIdent:{ 35};ElemType:i32*;Src:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !35];
[DEL] 50:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 36};ElemType:i32;Src:i32* %35;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !36];
[DEL] 51:ir.InstStore; ;|Src:i32 %36;Dst:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !34];
[DEL] 52:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %6 metadata !37 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !39];
[DEL] 53:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %7 metadata !40 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !44];
[DEL] 54:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 37};From:[10 x i32]* %7;To:i8*;Metadata:[!dbg !44];
[DEL] 55:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %37 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !44];
[DEL] 56:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 38};ElemType:i32;Src:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !45];
[DEL] 57:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 39};Pred:sge;X:i32 %38;Y:i32 0;Typ:i1;Metadata:[!dbg !47];
[DEL] 58:ir.TermCondBr; ir.InstICmp|Cond:i1 %39;TargetTrue:label %40;TargetFalse:label %56;Successors:[label %40 label %56];Metadata:[!dbg !48];
[MOV] 59:ir.Block; label %40|
[MOV] 60:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 41};ElemType:i32;Src:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !49];
[MOV] 61:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 42};From:i32 %41;To:i64;Metadata:[!dbg !51];
[MOV] 62:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 43};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %42];Typ:i32*;InBounds:true;Metadata:[!dbg !51];
[MOV] 63:ir.InstStore; ;|Src:i32 1;Dst:i32* %43;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !52];
[MOV] 64:ir.InstStore; ;|Src:i32 0;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !53];
[MOV] 65:ir.TermBr; |Target:label %44;Successors:[label %44];Metadata:[!dbg !55];
[MOV] 66:ir.Block; label %44|
[MOV] 67:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 45};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !56];
[MOV] 68:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 46};Pred:slt;X:i32 %45;Y:i32 10;Typ:i1;Metadata:[!dbg !58];
[MOV] 69:ir.TermCondBr; ir.InstICmp|Cond:i1 %46;TargetTrue:label %47;TargetFalse:label %55;Successors:[label %47 label %55];Metadata:[!dbg !59];
[MOV] 70:ir.Block; label %47|
[MOV] 71:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 48};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !60];
[MOV] 72:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 49};From:i32 %48;To:i64;Metadata:[!dbg !62];
[MOV] 73:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 50};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %49];Typ:i32*;InBounds:true;Metadata:[!dbg !62];
[MOV] 74:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 51};ElemType:i32;Src:i32* %50;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !62];
[MOV] 75:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %51];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !63];
[MOV] 76:ir.TermBr; |Target:label %52;Successors:[label %52];Metadata:[!dbg !64];
[MOV] 77:ir.Block; label %52|
[MOV] 78:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 53};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !65];
[MOV] 79:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 54};X:i32 %53;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !65];
[MOV] 80:ir.InstStore; ;|Src:i32 %54;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !65];
[MOV] 81:ir.TermBr; label %44|Target:label %44;Successors:[label %44];Metadata:[!dbg !66 !llvm.loop !67];
[MOV] 82:ir.Block; label %55|
[MOV] 83:ir.TermBr; |Target:label %57;Successors:[label %57];Metadata:[!dbg !69];
[MOV] 84:ir.Block; label %56|
[MOV] 85:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !70];
[MOV] 86:ir.TermBr; |Target:label %57;Successors:[label %57];Metadata:[];
[MOV] 87:ir.Block; label %57|
[MOV] 88:ir.TermRet; |X:<nil>;Metadata:[!dbg !72];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstAlloca
6:ir.InstAlloca,3,7:ir.InstAlloca
0:ir.Block,4,8:ir.InstCall
7:ir.InstAlloca,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstStore
9:ir.InstCall,3,10:ir.InstStore
0:ir.Block,4,11:ir.InstCall
10:ir.InstStore,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstStore
11:ir.InstCall,3,12:ir.InstStore
0:ir.Block,4,13:ir.InstStore
12:ir.InstStore,3,13:ir.InstStore
0:ir.Block,4,14:ir.InstCall
13:ir.InstStore,3,14:ir.InstCall
0:ir.Block,4,15:ir.InstLoad
14:ir.InstCall,3,15:ir.InstLoad
0:ir.Block,4,16:ir.InstLoad
15:ir.InstLoad,3,16:ir.InstLoad
0:ir.Block,4,17:ir.InstStore
16:ir.InstLoad,3,17:ir.InstStore
0:ir.Block,4,18:ir.InstCall
17:ir.InstStore,3,18:ir.InstCall
0:ir.Block,4,19:ir.InstAnd
18:ir.InstCall,3,19:ir.InstAnd
0:ir.Block,4,20:ir.InstICmp
19:ir.InstAnd,3,20:ir.InstICmp
20:ir.InstICmp,3,21:ir.TermCondBr
21:ir.TermCondBr,5,22:ir.Block
21:ir.TermCondBr,3,22:ir.Block
21:ir.TermCondBr,5,31:ir.Block
21:ir.TermCondBr,3,31:ir.Block
22:ir.Block,4,23:ir.InstCall
22:ir.Block,3,23:ir.InstCall
22:ir.Block,4,24:ir.InstShl
23:ir.InstCall,3,24:ir.InstShl
22:ir.Block,4,25:ir.InstCall
24:ir.InstShl,3,25:ir.InstCall
22:ir.Block,4,26:ir.InstShl
25:ir.InstCall,3,26:ir.InstShl
22:ir.Block,4,27:ir.InstXor
26:ir.InstShl,3,27:ir.InstXor
22:ir.Block,4,28:ir.InstCall
27:ir.InstXor,3,28:ir.InstCall
22:ir.Block,4,29:ir.InstXor
28:ir.InstCall,3,29:ir.InstXor
29:ir.InstXor,3,30:ir.TermBr
30:ir.TermBr,5,42:ir.Block
30:ir.TermBr,3,42:ir.Block
31:ir.Block,4,32:ir.InstCall
31:ir.Block,3,32:ir.InstCall
31:ir.Block,4,33:ir.InstShl
32:ir.InstCall,3,33:ir.InstShl
31:ir.Block,4,34:ir.InstCall
33:ir.InstShl,3,34:ir.InstCall
31:ir.Block,4,35:ir.InstShl
34:ir.InstCall,3,35:ir.InstShl
31:ir.Block,4,36:ir.InstXor
35:ir.InstShl,3,36:ir.InstXor
31:ir.Block,4,37:ir.InstCall
36:ir.InstXor,3,37:ir.InstCall
31:ir.Block,4,38:ir.InstXor
37:ir.InstCall,3,38:ir.InstXor
31:ir.Block,4,39:ir.InstSub
38:ir.InstXor,3,39:ir.InstSub
31:ir.Block,4,40:ir.InstSub
39:ir.InstSub,3,40:ir.InstSub
40:ir.InstSub,3,41:ir.TermBr
41:ir.TermBr,5,42:ir.Block
41:ir.TermBr,3,42:ir.Block
42:ir.Block,4,43:ir.InstPhi
42:ir.Block,3,43:ir.InstPhi
42:ir.Block,4,44:ir.InstStore
43:ir.InstPhi,3,44:ir.InstStore
42:ir.Block,4,45:ir.InstLoad
44:ir.InstStore,3,45:ir.InstLoad
42:ir.Block,4,46:ir.InstLoad
45:ir.InstLoad,3,46:ir.InstLoad
42:ir.Block,4,47:ir.InstStore
46:ir.InstLoad,3,47:ir.InstStore
42:ir.Block,4,48:ir.InstCall
47:ir.InstStore,3,48:ir.InstCall
42:ir.Block,4,49:ir.InstLoad
48:ir.InstCall,3,49:ir.InstLoad
42:ir.Block,4,50:ir.InstLoad
49:ir.InstLoad,3,50:ir.InstLoad
42:ir.Block,4,51:ir.InstStore
50:ir.InstLoad,3,51:ir.InstStore
42:ir.Block,4,52:ir.InstCall
51:ir.InstStore,3,52:ir.InstCall
42:ir.Block,4,53:ir.InstCall
52:ir.InstCall,3,53:ir.InstCall
42:ir.Block,4,54:ir.InstBitCast
53:ir.InstCall,3,54:ir.InstBitCast
42:ir.Block,4,55:ir.InstCall
54:ir.InstBitCast,3,55:ir.InstCall
42:ir.Block,4,56:ir.InstLoad
55:ir.InstCall,3,56:ir.InstLoad
42:ir.Block,4,57:ir.InstICmp
56:ir.InstLoad,3,57:ir.InstICmp
57:ir.InstICmp,3,58:ir.TermCondBr
58:ir.TermCondBr,5,59:ir.Block
58:ir.TermCondBr,3,59:ir.Block
58:ir.TermCondBr,5,84:ir.Block
58:ir.TermCondBr,3,84:ir.Block
59:ir.Block,4,60:ir.InstLoad
59:ir.Block,3,60:ir.InstLoad
59:ir.Block,4,61:ir.InstSExt
60:ir.InstLoad,3,61:ir.InstSExt
59:ir.Block,4,62:ir.InstGetElementPtr
61:ir.InstSExt,3,62:ir.InstGetElementPtr
59:ir.Block,4,63:ir.InstStore
62:ir.InstGetElementPtr,3,63:ir.InstStore
59:ir.Block,4,64:ir.InstStore
63:ir.InstStore,3,64:ir.InstStore
64:ir.InstStore,3,65:ir.TermBr
65:ir.TermBr,5,66:ir.Block
65:ir.TermBr,3,66:ir.Block
66:ir.Block,4,67:ir.InstLoad
66:ir.Block,3,67:ir.InstLoad
66:ir.Block,4,68:ir.InstICmp
67:ir.InstLoad,3,68:ir.InstICmp
68:ir.InstICmp,3,69:ir.TermCondBr
69:ir.TermCondBr,5,70:ir.Block
69:ir.TermCondBr,3,70:ir.Block
69:ir.TermCondBr,5,82:ir.Block
69:ir.TermCondBr,3,82:ir.Block
70:ir.Block,4,71:ir.InstLoad
70:ir.Block,3,71:ir.InstLoad
70:ir.Block,4,72:ir.InstSExt
71:ir.InstLoad,3,72:ir.InstSExt
70:ir.Block,4,73:ir.InstGetElementPtr
72:ir.InstSExt,3,73:ir.InstGetElementPtr
70:ir.Block,4,74:ir.InstLoad
73:ir.InstGetElementPtr,3,74:ir.InstLoad
70:ir.Block,4,75:ir.InstCall
74:ir.InstLoad,3,75:ir.InstCall
75:ir.InstCall,3,76:ir.TermBr
76:ir.TermBr,5,77:ir.Block
76:ir.TermBr,3,77:ir.Block
77:ir.Block,4,78:ir.InstLoad
77:ir.Block,3,78:ir.InstLoad
77:ir.Block,4,79:ir.InstAdd
78:ir.InstLoad,3,79:ir.InstAdd
77:ir.Block,4,80:ir.InstStore
79:ir.InstAdd,3,80:ir.InstStore
80:ir.InstStore,3,81:ir.TermBr
81:ir.TermBr,5,66:ir.Block
81:ir.TermBr,3,66:ir.Block
82:ir.Block,3,83:ir.TermBr
83:ir.TermBr,5,87:ir.Block
83:ir.TermBr,3,87:ir.Block
84:ir.Block,4,85:ir.InstCall
84:ir.Block,3,85:ir.InstCall
85:ir.InstCall,3,86:ir.TermBr
86:ir.TermBr,5,87:ir.Block
86:ir.TermBr,3,87:ir.Block
87:ir.Block,3,88:ir.TermRet
38:ir.InstXor,1,39:ir.InstSub
39:ir.InstSub,2,38:ir.InstXor
29:ir.InstXor,1,43:ir.InstPhi
43:ir.InstPhi,2,29:ir.InstXor
40:ir.InstSub,1,43:ir.InstPhi
43:ir.InstPhi,2,40:ir.InstSub
73:ir.InstGetElementPtr,1,74:ir.InstLoad
74:ir.InstLoad,2,73:ir.InstGetElementPtr
27:ir.InstXor,1,29:ir.InstXor
29:ir.InstXor,2,27:ir.InstXor
15:ir.InstLoad,1,16:ir.InstLoad
16:ir.InstLoad,2,15:ir.InstLoad
25:ir.InstCall,1,26:ir.InstShl
26:ir.InstShl,2,25:ir.InstCall
26:ir.InstShl,1,27:ir.InstXor
27:ir.InstXor,2,26:ir.InstShl
28:ir.InstCall,1,29:ir.InstXor
29:ir.InstXor,2,28:ir.InstCall
33:ir.InstShl,1,36:ir.InstXor
36:ir.InstXor,2,33:ir.InstShl
78:ir.InstLoad,1,79:ir.InstAdd
79:ir.InstAdd,2,78:ir.InstLoad
3:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,49:ir.InstLoad
49:ir.InstLoad,2,3:ir.InstAlloca
24:ir.InstShl,1,27:ir.InstXor
27:ir.InstXor,2,24:ir.InstShl
54:ir.InstBitCast,1,55:ir.InstCall
55:ir.InstCall,2,54:ir.InstBitCast
62:ir.InstGetElementPtr,1,63:ir.InstStore
63:ir.InstStore,2,62:ir.InstGetElementPtr
74:ir.InstLoad,1,75:ir.InstCall
75:ir.InstCall,2,74:ir.InstLoad
4:ir.InstAlloca,1,17:ir.InstStore
17:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,44:ir.InstStore
44:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,45:ir.InstLoad
45:ir.InstLoad,2,4:ir.InstAlloca
45:ir.InstLoad,1,47:ir.InstStore
47:ir.InstStore,2,45:ir.InstLoad
18:ir.InstCall,1,19:ir.InstAnd
19:ir.InstAnd,2,18:ir.InstCall
2:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,46:ir.InstLoad
46:ir.InstLoad,2,2:ir.InstAlloca
16:ir.InstLoad,1,17:ir.InstStore
17:ir.InstStore,2,16:ir.InstLoad
34:ir.InstCall,1,35:ir.InstShl
35:ir.InstShl,2,34:ir.InstCall
37:ir.InstCall,1,38:ir.InstXor
38:ir.InstXor,2,37:ir.InstCall
7:ir.InstAlloca,1,54:ir.InstBitCast
54:ir.InstBitCast,2,7:ir.InstAlloca
7:ir.InstAlloca,1,62:ir.InstGetElementPtr
62:ir.InstGetElementPtr,2,7:ir.InstAlloca
7:ir.InstAlloca,1,73:ir.InstGetElementPtr
73:ir.InstGetElementPtr,2,7:ir.InstAlloca
79:ir.InstAdd,1,80:ir.InstStore
80:ir.InstStore,2,79:ir.InstAdd
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstStore
13:ir.InstStore,2,1:ir.InstAlloca
46:ir.InstLoad,1,47:ir.InstStore
47:ir.InstStore,2,46:ir.InstLoad
5:ir.InstAlloca,1,51:ir.InstStore
51:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,56:ir.InstLoad
56:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,60:ir.InstLoad
60:ir.InstLoad,2,5:ir.InstAlloca
6:ir.InstAlloca,1,64:ir.InstStore
64:ir.InstStore,2,6:ir.InstAlloca
6:ir.InstAlloca,1,67:ir.InstLoad
67:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,71:ir.InstLoad
71:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,78:ir.InstLoad
78:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,80:ir.InstStore
80:ir.InstStore,2,6:ir.InstAlloca
67:ir.InstLoad,1,68:ir.InstICmp
68:ir.InstICmp,2,67:ir.InstLoad
71:ir.InstLoad,1,72:ir.InstSExt
72:ir.InstSExt,2,71:ir.InstLoad
39:ir.InstSub,1,40:ir.InstSub
40:ir.InstSub,2,39:ir.InstSub
32:ir.InstCall,1,33:ir.InstShl
33:ir.InstShl,2,32:ir.InstCall
35:ir.InstShl,1,36:ir.InstXor
36:ir.InstXor,2,35:ir.InstShl
36:ir.InstXor,1,38:ir.InstXor
38:ir.InstXor,2,36:ir.InstXor
56:ir.InstLoad,1,57:ir.InstICmp
57:ir.InstICmp,2,56:ir.InstLoad
60:ir.InstLoad,1,61:ir.InstSExt
61:ir.InstSExt,2,60:ir.InstLoad
19:ir.InstAnd,1,20:ir.InstICmp
20:ir.InstICmp,2,19:ir.InstAnd
43:ir.InstPhi,1,44:ir.InstStore
44:ir.InstStore,2,43:ir.InstPhi
49:ir.InstLoad,1,50:ir.InstLoad
50:ir.InstLoad,2,49:ir.InstLoad
50:ir.InstLoad,1,51:ir.InstStore
51:ir.InstStore,2,50:ir.InstLoad
23:ir.InstCall,1,24:ir.InstShl
24:ir.InstShl,2,23:ir.InstCall
58:ir.TermCondBr,2,57:ir.InstICmp
57:ir.InstICmp,1,58:ir.TermCondBr
69:ir.TermCondBr,2,68:ir.InstICmp
68:ir.InstICmp,1,69:ir.TermCondBr
21:ir.TermCondBr,2,20:ir.InstICmp
20:ir.InstICmp,1,21:ir.TermCondBr
