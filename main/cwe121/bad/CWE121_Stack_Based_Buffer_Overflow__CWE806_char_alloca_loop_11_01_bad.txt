? 60
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ir.InstStore ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[50 x i8];NElems:<nil>;Typ:[50 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 4};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 5};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !15 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !16];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !17 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !18];
[MOV] 8:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 6};ElemType:i8;NElems:i64 100;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !19];
[MOV] 9:ir.InstStore; ;|Src:i8* %6;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !18];
[MOV] 10:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 7};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !20];
[MOV] 11:ir.InstStore; ;|Src:i8* %7;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !21];
[MOV] 12:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 8};Callee:i32 (...)* @globalReturnsTrue;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !22];
[MOV] 13:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 9};Pred:ne;X:i32 %8;Y:i32 0;Typ:i1;Metadata:[!dbg !22];
[DEL] 14:ir.TermCondBr; ir.InstICmp|Cond:i1 %9;TargetTrue:label %10;TargetFalse:label %17;Successors:[label %10 label %17];Metadata:[!dbg !24];
[MOV] 15:ir.Block; label %10|
[MOV] 16:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 11};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !25];
[MOV] 17:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 12};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !25];
[MOV] 18:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 13};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %12 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !25];
[MOV] 19:ir.InstCall; ir.InstCall ;|LocalIdent:{ 14};Callee:i8* (i8*, i32, i64, i64)* @__memset_chk;Args:[i8* %11 i32 65 i64 99 i64 %13];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !25];
[MOV] 20:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 15};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !27];
[MOV] 21:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 16};ElemType:i8;Src:i8* %15;Indices:[i64 99];Typ:i8*;InBounds:true;Metadata:[!dbg !27];
[MOV] 22:ir.InstStore; ;|Src:i8 0;Dst:i8* %16;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !28];
[MOV] 23:ir.TermBr; |Target:label %17;Successors:[label %17];Metadata:[!dbg !29];
[MOV] 24:ir.Block; label %17|
[MOV] 25:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [50 x i8]* %3 metadata !30 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !35];
[MOV] 26:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 18};From:[50 x i8]* %3;To:i8*;Metadata:[!dbg !35];
[MOV] 27:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %18 i8 0 i64 50 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !35];
[MOV] 28:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %4 metadata !36 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !42];
[MOV] 29:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %5 metadata !43 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !44];
[MOV] 30:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 19};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !45];
[MOV] 31:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 20};Callee:i64 (i8*)* @strlen;Args:[i8* %19];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !46];
[MOV] 32:ir.InstStore; ;|Src:i64 %20;Dst:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !47];
[MOV] 33:ir.InstStore; ;|Src:i64 0;Dst:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !48];
[MOV] 34:ir.TermBr; |Target:label %21;Successors:[label %21];Metadata:[!dbg !50];
[MOV] 35:ir.Block; label %21|
[MOV] 36:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 22};ElemType:i64;Src:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !51];
[MOV] 37:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 23};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !53];
[MOV] 38:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 24};Pred:ult;X:i64 %22;Y:i64 %23;Typ:i1;Metadata:[!dbg !54];
[MOV] 39:ir.TermCondBr; ir.InstICmp|Cond:i1 %24;TargetTrue:label %25;TargetFalse:label %35;Successors:[label %25 label %35];Metadata:[!dbg !55];
[MOV] 40:ir.Block; label %25|
[MOV] 41:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 26};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !56];
[MOV] 42:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 27};ElemType:i64;Src:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !58];
[MOV] 43:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 28};ElemType:i8;Src:i8* %26;Indices:[i64 %27];Typ:i8*;InBounds:true;Metadata:[!dbg !56];
[MOV] 44:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 29};ElemType:i8;Src:i8* %28;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !56];
[MOV] 45:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 30};ElemType:i64;Src:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !59];
[MOV] 46:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 31};ElemType:[50 x i8];Src:[50 x i8]* %3;Indices:[i64 0 i64 %30];Typ:i8*;InBounds:true;Metadata:[!dbg !60];
[MOV] 47:ir.InstStore; ;|Src:i8 %29;Dst:i8* %31;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !61];
[MOV] 48:ir.TermBr; |Target:label %32;Successors:[label %32];Metadata:[!dbg !62];
[MOV] 49:ir.Block; label %32|
[MOV] 50:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 33};ElemType:i64;Src:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !63];
[MOV] 51:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 34};X:i64 %33;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !63];
[MOV] 52:ir.InstStore; ;|Src:i64 %34;Dst:i64* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !63];
[MOV] 53:ir.TermBr; label %21|Target:label %21;Successors:[label %21];Metadata:[!dbg !64 !llvm.loop !65];
[MOV] 54:ir.Block; label %35|
[MOV] 55:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 36};ElemType:[50 x i8];Src:[50 x i8]* %3;Indices:[i64 0 i64 49];Typ:i8*;InBounds:true;Metadata:[!dbg !67];
[MOV] 56:ir.InstStore; ;|Src:i8 0;Dst:i8* %36;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !68];
[MOV] 57:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 37};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !69];
[MOV] 58:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %37];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !70];
[MOV] 59:ir.TermRet; |X:<nil>;Metadata:[!dbg !71];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstCall
5:ir.InstAlloca,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstAlloca
7:ir.InstCall,3,8:ir.InstAlloca
0:ir.Block,4,9:ir.InstStore
8:ir.InstAlloca,3,9:ir.InstStore
0:ir.Block,4,10:ir.InstLoad
9:ir.InstStore,3,10:ir.InstLoad
0:ir.Block,4,11:ir.InstStore
10:ir.InstLoad,3,11:ir.InstStore
0:ir.Block,4,12:ir.InstCall
11:ir.InstStore,3,12:ir.InstCall
0:ir.Block,4,13:ir.InstICmp
12:ir.InstCall,3,13:ir.InstICmp
13:ir.InstICmp,3,14:ir.TermCondBr
14:ir.TermCondBr,5,15:ir.Block
14:ir.TermCondBr,3,15:ir.Block
14:ir.TermCondBr,5,24:ir.Block
14:ir.TermCondBr,3,24:ir.Block
15:ir.Block,4,16:ir.InstLoad
15:ir.Block,3,16:ir.InstLoad
15:ir.Block,4,17:ir.InstLoad
16:ir.InstLoad,3,17:ir.InstLoad
15:ir.Block,4,18:ir.InstCall
17:ir.InstLoad,3,18:ir.InstCall
15:ir.Block,4,19:ir.InstCall
18:ir.InstCall,3,19:ir.InstCall
15:ir.Block,4,20:ir.InstLoad
19:ir.InstCall,3,20:ir.InstLoad
15:ir.Block,4,21:ir.InstGetElementPtr
20:ir.InstLoad,3,21:ir.InstGetElementPtr
15:ir.Block,4,22:ir.InstStore
21:ir.InstGetElementPtr,3,22:ir.InstStore
22:ir.InstStore,3,23:ir.TermBr
23:ir.TermBr,5,24:ir.Block
23:ir.TermBr,3,24:ir.Block
24:ir.Block,4,25:ir.InstCall
24:ir.Block,3,25:ir.InstCall
24:ir.Block,4,26:ir.InstBitCast
25:ir.InstCall,3,26:ir.InstBitCast
24:ir.Block,4,27:ir.InstCall
26:ir.InstBitCast,3,27:ir.InstCall
24:ir.Block,4,28:ir.InstCall
27:ir.InstCall,3,28:ir.InstCall
24:ir.Block,4,29:ir.InstCall
28:ir.InstCall,3,29:ir.InstCall
24:ir.Block,4,30:ir.InstLoad
29:ir.InstCall,3,30:ir.InstLoad
24:ir.Block,4,31:ir.InstCall
30:ir.InstLoad,3,31:ir.InstCall
24:ir.Block,4,32:ir.InstStore
31:ir.InstCall,3,32:ir.InstStore
24:ir.Block,4,33:ir.InstStore
32:ir.InstStore,3,33:ir.InstStore
33:ir.InstStore,3,34:ir.TermBr
34:ir.TermBr,5,35:ir.Block
34:ir.TermBr,3,35:ir.Block
35:ir.Block,4,36:ir.InstLoad
35:ir.Block,3,36:ir.InstLoad
35:ir.Block,4,37:ir.InstLoad
36:ir.InstLoad,3,37:ir.InstLoad
35:ir.Block,4,38:ir.InstICmp
37:ir.InstLoad,3,38:ir.InstICmp
38:ir.InstICmp,3,39:ir.TermCondBr
39:ir.TermCondBr,5,40:ir.Block
39:ir.TermCondBr,3,40:ir.Block
39:ir.TermCondBr,5,54:ir.Block
39:ir.TermCondBr,3,54:ir.Block
40:ir.Block,4,41:ir.InstLoad
40:ir.Block,3,41:ir.InstLoad
40:ir.Block,4,42:ir.InstLoad
41:ir.InstLoad,3,42:ir.InstLoad
40:ir.Block,4,43:ir.InstGetElementPtr
42:ir.InstLoad,3,43:ir.InstGetElementPtr
40:ir.Block,4,44:ir.InstLoad
43:ir.InstGetElementPtr,3,44:ir.InstLoad
40:ir.Block,4,45:ir.InstLoad
44:ir.InstLoad,3,45:ir.InstLoad
40:ir.Block,4,46:ir.InstGetElementPtr
45:ir.InstLoad,3,46:ir.InstGetElementPtr
40:ir.Block,4,47:ir.InstStore
46:ir.InstGetElementPtr,3,47:ir.InstStore
47:ir.InstStore,3,48:ir.TermBr
48:ir.TermBr,5,49:ir.Block
48:ir.TermBr,3,49:ir.Block
49:ir.Block,4,50:ir.InstLoad
49:ir.Block,3,50:ir.InstLoad
49:ir.Block,4,51:ir.InstAdd
50:ir.InstLoad,3,51:ir.InstAdd
49:ir.Block,4,52:ir.InstStore
51:ir.InstAdd,3,52:ir.InstStore
52:ir.InstStore,3,53:ir.TermBr
53:ir.TermBr,5,35:ir.Block
53:ir.TermBr,3,35:ir.Block
54:ir.Block,4,55:ir.InstGetElementPtr
54:ir.Block,3,55:ir.InstGetElementPtr
54:ir.Block,4,56:ir.InstStore
55:ir.InstGetElementPtr,3,56:ir.InstStore
54:ir.Block,4,57:ir.InstLoad
56:ir.InstStore,3,57:ir.InstLoad
54:ir.Block,4,58:ir.InstCall
57:ir.InstLoad,3,58:ir.InstCall
58:ir.InstCall,3,59:ir.TermRet
1:ir.InstAlloca,1,11:ir.InstStore
11:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,16:ir.InstLoad
16:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,17:ir.InstLoad
17:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,30:ir.InstLoad
30:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,41:ir.InstLoad
41:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,57:ir.InstLoad
57:ir.InstLoad,2,1:ir.InstAlloca
12:ir.InstCall,1,13:ir.InstICmp
13:ir.InstICmp,2,12:ir.InstCall
17:ir.InstLoad,1,18:ir.InstCall
18:ir.InstCall,2,17:ir.InstLoad
20:ir.InstLoad,1,21:ir.InstGetElementPtr
21:ir.InstGetElementPtr,2,20:ir.InstLoad
30:ir.InstLoad,1,31:ir.InstCall
31:ir.InstCall,2,30:ir.InstLoad
8:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,8:ir.InstAlloca
2:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,10:ir.InstLoad
10:ir.InstLoad,2,2:ir.InstAlloca
10:ir.InstLoad,1,11:ir.InstStore
11:ir.InstStore,2,10:ir.InstLoad
51:ir.InstAdd,1,52:ir.InstStore
52:ir.InstStore,2,51:ir.InstAdd
36:ir.InstLoad,1,38:ir.InstICmp
38:ir.InstICmp,2,36:ir.InstLoad
44:ir.InstLoad,1,47:ir.InstStore
47:ir.InstStore,2,44:ir.InstLoad
50:ir.InstLoad,1,51:ir.InstAdd
51:ir.InstAdd,2,50:ir.InstLoad
43:ir.InstGetElementPtr,1,44:ir.InstLoad
44:ir.InstLoad,2,43:ir.InstGetElementPtr
46:ir.InstGetElementPtr,1,47:ir.InstStore
47:ir.InstStore,2,46:ir.InstGetElementPtr
55:ir.InstGetElementPtr,1,56:ir.InstStore
56:ir.InstStore,2,55:ir.InstGetElementPtr
21:ir.InstGetElementPtr,1,22:ir.InstStore
22:ir.InstStore,2,21:ir.InstGetElementPtr
5:ir.InstAlloca,1,32:ir.InstStore
32:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,5:ir.InstAlloca
37:ir.InstLoad,1,38:ir.InstICmp
38:ir.InstICmp,2,37:ir.InstLoad
41:ir.InstLoad,1,43:ir.InstGetElementPtr
43:ir.InstGetElementPtr,2,41:ir.InstLoad
3:ir.InstAlloca,1,26:ir.InstBitCast
26:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,46:ir.InstGetElementPtr
46:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,55:ir.InstGetElementPtr
55:ir.InstGetElementPtr,2,3:ir.InstAlloca
31:ir.InstCall,1,32:ir.InstStore
32:ir.InstStore,2,31:ir.InstCall
4:ir.InstAlloca,1,33:ir.InstStore
33:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,36:ir.InstLoad
36:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,42:ir.InstLoad
42:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,45:ir.InstLoad
45:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,50:ir.InstLoad
50:ir.InstLoad,2,4:ir.InstAlloca
4:ir.InstAlloca,1,52:ir.InstStore
52:ir.InstStore,2,4:ir.InstAlloca
57:ir.InstLoad,1,58:ir.InstCall
58:ir.InstCall,2,57:ir.InstLoad
16:ir.InstLoad,1,19:ir.InstCall
19:ir.InstCall,2,16:ir.InstLoad
18:ir.InstCall,1,19:ir.InstCall
19:ir.InstCall,2,18:ir.InstCall
26:ir.InstBitCast,1,27:ir.InstCall
27:ir.InstCall,2,26:ir.InstBitCast
39:ir.TermCondBr,2,38:ir.InstICmp
38:ir.InstICmp,1,39:ir.TermCondBr
14:ir.TermCondBr,2,13:ir.InstICmp
13:ir.InstICmp,1,14:ir.TermCondBr
