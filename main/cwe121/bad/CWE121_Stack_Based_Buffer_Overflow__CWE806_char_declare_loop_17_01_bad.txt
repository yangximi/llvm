? 68
[MOV] 0:ir.Block; label %0|
[DEL] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstGetElementPtr ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[100 x i8];NElems:<nil>;Typ:[100 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ir.InstStore ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[50 x i8];NElems:<nil>;Typ:[50 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 5};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 6};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !13 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !16 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !19];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i8]* %3 metadata !20 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !24];
[MOV] 10:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstStore |LocalIdent:{ 7};ElemType:[100 x i8];Src:[100 x i8]* %3;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !25];
[MOV] 11:ir.InstStore; ;|Src:i8* %7;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !26];
[DEL] 12:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !27];
[MOV] 13:ir.TermBr; |Target:label %8;Successors:[label %8];Metadata:[!dbg !29];
[MOV] 14:ir.Block; label %8|
[DEL] 15:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 9};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !30];
[DEL] 16:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 10};Pred:slt;X:i32 %9;Y:i32 1;Typ:i1;Metadata:[!dbg !32];
[DEL] 17:ir.TermCondBr; ir.InstICmp|Cond:i1 %10;TargetTrue:label %11;TargetFalse:label %21;Successors:[label %11 label %21];Metadata:[!dbg !33];
[MOV] 18:ir.Block; label %11|
[MOV] 19:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 12};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !34];
[MOV] 20:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 13};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !34];
[MOV] 21:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 14};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %13 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !34];
[MOV] 22:ir.InstCall; ir.InstCall ;|LocalIdent:{ 15};Callee:i8* (i8*, i32, i64, i64)* @__memset_chk;Args:[i8* %12 i32 65 i64 99 i64 %14];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !34];
[MOV] 23:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 16};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !36];
[MOV] 24:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 17};ElemType:i8;Src:i8* %16;Indices:[i64 99];Typ:i8*;InBounds:true;Metadata:[!dbg !36];
[MOV] 25:ir.InstStore; ;|Src:i8 0;Dst:i8* %17;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !37];
[MOV] 26:ir.TermBr; |Target:label %18;Successors:[label %18];Metadata:[!dbg !38];
[MOV] 27:ir.Block; label %18|
[DEL] 28:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 19};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !39];
[DEL] 29:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 20};X:i32 %19;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !39];
[DEL] 30:ir.InstStore; ;|Src:i32 %20;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !39];
[MOV] 31:ir.TermBr; label %8|Target:label %8;Successors:[label %8];Metadata:[!dbg !40 !llvm.loop !41];
[MOV] 32:ir.Block; label %21|
[MOV] 33:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [50 x i8]* %4 metadata !43 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !48];
[MOV] 34:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 22};From:[50 x i8]* %4;To:i8*;Metadata:[!dbg !48];
[MOV] 35:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %22 i8 0 i64 50 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !48];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %5 metadata !49 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !55];
[MOV] 37:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %6 metadata !56 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !57];
[MOV] 38:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 23};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !58];
[MOV] 39:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 24};Callee:i64 (i8*)* @strlen;Args:[i8* %23];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !59];
[MOV] 40:ir.InstStore; ;|Src:i64 %24;Dst:i64* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !60];
[MOV] 41:ir.InstStore; ;|Src:i64 0;Dst:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !61];
[MOV] 42:ir.TermBr; |Target:label %25;Successors:[label %25];Metadata:[!dbg !63];
[MOV] 43:ir.Block; label %25|
[MOV] 44:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 26};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !64];
[MOV] 45:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 27};ElemType:i64;Src:i64* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !66];
[MOV] 46:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 28};Pred:ult;X:i64 %26;Y:i64 %27;Typ:i1;Metadata:[!dbg !67];
[MOV] 47:ir.TermCondBr; ir.InstICmp|Cond:i1 %28;TargetTrue:label %29;TargetFalse:label %39;Successors:[label %29 label %39];Metadata:[!dbg !68];
[MOV] 48:ir.Block; label %29|
[MOV] 49:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 30};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !69];
[MOV] 50:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 31};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !71];
[MOV] 51:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 32};ElemType:i8;Src:i8* %30;Indices:[i64 %31];Typ:i8*;InBounds:true;Metadata:[!dbg !69];
[MOV] 52:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 33};ElemType:i8;Src:i8* %32;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !69];
[MOV] 53:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 34};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !72];
[MOV] 54:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 35};ElemType:[50 x i8];Src:[50 x i8]* %4;Indices:[i64 0 i64 %34];Typ:i8*;InBounds:true;Metadata:[!dbg !73];
[MOV] 55:ir.InstStore; ;|Src:i8 %33;Dst:i8* %35;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !74];
[MOV] 56:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[!dbg !75];
[MOV] 57:ir.Block; label %36|
[MOV] 58:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 37};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !76];
[MOV] 59:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 38};X:i64 %37;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !76];
[MOV] 60:ir.InstStore; ;|Src:i64 %38;Dst:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !76];
[MOV] 61:ir.TermBr; label %25|Target:label %25;Successors:[label %25];Metadata:[!dbg !77 !llvm.loop !78];
[MOV] 62:ir.Block; label %39|
[MOV] 63:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 40};ElemType:[50 x i8];Src:[50 x i8]* %4;Indices:[i64 0 i64 49];Typ:i8*;InBounds:true;Metadata:[!dbg !80];
[MOV] 64:ir.InstStore; ;|Src:i8 0;Dst:i8* %40;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !81];
[MOV] 65:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 41};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !82];
[MOV] 66:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %41];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !83];
[MOV] 67:ir.TermRet; |X:<nil>;Metadata:[!dbg !84];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstCall
6:ir.InstAlloca,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstGetElementPtr
9:ir.InstCall,3,10:ir.InstGetElementPtr
0:ir.Block,4,11:ir.InstStore
10:ir.InstGetElementPtr,3,11:ir.InstStore
0:ir.Block,4,12:ir.InstStore
11:ir.InstStore,3,12:ir.InstStore
12:ir.InstStore,3,13:ir.TermBr
13:ir.TermBr,5,14:ir.Block
13:ir.TermBr,3,14:ir.Block
14:ir.Block,4,15:ir.InstLoad
14:ir.Block,3,15:ir.InstLoad
14:ir.Block,4,16:ir.InstICmp
15:ir.InstLoad,3,16:ir.InstICmp
16:ir.InstICmp,3,17:ir.TermCondBr
17:ir.TermCondBr,5,18:ir.Block
17:ir.TermCondBr,3,18:ir.Block
17:ir.TermCondBr,5,32:ir.Block
17:ir.TermCondBr,3,32:ir.Block
18:ir.Block,4,19:ir.InstLoad
18:ir.Block,3,19:ir.InstLoad
18:ir.Block,4,20:ir.InstLoad
19:ir.InstLoad,3,20:ir.InstLoad
18:ir.Block,4,21:ir.InstCall
20:ir.InstLoad,3,21:ir.InstCall
18:ir.Block,4,22:ir.InstCall
21:ir.InstCall,3,22:ir.InstCall
18:ir.Block,4,23:ir.InstLoad
22:ir.InstCall,3,23:ir.InstLoad
18:ir.Block,4,24:ir.InstGetElementPtr
23:ir.InstLoad,3,24:ir.InstGetElementPtr
18:ir.Block,4,25:ir.InstStore
24:ir.InstGetElementPtr,3,25:ir.InstStore
25:ir.InstStore,3,26:ir.TermBr
26:ir.TermBr,5,27:ir.Block
26:ir.TermBr,3,27:ir.Block
27:ir.Block,4,28:ir.InstLoad
27:ir.Block,3,28:ir.InstLoad
27:ir.Block,4,29:ir.InstAdd
28:ir.InstLoad,3,29:ir.InstAdd
27:ir.Block,4,30:ir.InstStore
29:ir.InstAdd,3,30:ir.InstStore
30:ir.InstStore,3,31:ir.TermBr
31:ir.TermBr,5,14:ir.Block
31:ir.TermBr,3,14:ir.Block
32:ir.Block,4,33:ir.InstCall
32:ir.Block,3,33:ir.InstCall
32:ir.Block,4,34:ir.InstBitCast
33:ir.InstCall,3,34:ir.InstBitCast
32:ir.Block,4,35:ir.InstCall
34:ir.InstBitCast,3,35:ir.InstCall
32:ir.Block,4,36:ir.InstCall
35:ir.InstCall,3,36:ir.InstCall
32:ir.Block,4,37:ir.InstCall
36:ir.InstCall,3,37:ir.InstCall
32:ir.Block,4,38:ir.InstLoad
37:ir.InstCall,3,38:ir.InstLoad
32:ir.Block,4,39:ir.InstCall
38:ir.InstLoad,3,39:ir.InstCall
32:ir.Block,4,40:ir.InstStore
39:ir.InstCall,3,40:ir.InstStore
32:ir.Block,4,41:ir.InstStore
40:ir.InstStore,3,41:ir.InstStore
41:ir.InstStore,3,42:ir.TermBr
42:ir.TermBr,5,43:ir.Block
42:ir.TermBr,3,43:ir.Block
43:ir.Block,4,44:ir.InstLoad
43:ir.Block,3,44:ir.InstLoad
43:ir.Block,4,45:ir.InstLoad
44:ir.InstLoad,3,45:ir.InstLoad
43:ir.Block,4,46:ir.InstICmp
45:ir.InstLoad,3,46:ir.InstICmp
46:ir.InstICmp,3,47:ir.TermCondBr
47:ir.TermCondBr,5,48:ir.Block
47:ir.TermCondBr,3,48:ir.Block
47:ir.TermCondBr,5,62:ir.Block
47:ir.TermCondBr,3,62:ir.Block
48:ir.Block,4,49:ir.InstLoad
48:ir.Block,3,49:ir.InstLoad
48:ir.Block,4,50:ir.InstLoad
49:ir.InstLoad,3,50:ir.InstLoad
48:ir.Block,4,51:ir.InstGetElementPtr
50:ir.InstLoad,3,51:ir.InstGetElementPtr
48:ir.Block,4,52:ir.InstLoad
51:ir.InstGetElementPtr,3,52:ir.InstLoad
48:ir.Block,4,53:ir.InstLoad
52:ir.InstLoad,3,53:ir.InstLoad
48:ir.Block,4,54:ir.InstGetElementPtr
53:ir.InstLoad,3,54:ir.InstGetElementPtr
48:ir.Block,4,55:ir.InstStore
54:ir.InstGetElementPtr,3,55:ir.InstStore
55:ir.InstStore,3,56:ir.TermBr
56:ir.TermBr,5,57:ir.Block
56:ir.TermBr,3,57:ir.Block
57:ir.Block,4,58:ir.InstLoad
57:ir.Block,3,58:ir.InstLoad
57:ir.Block,4,59:ir.InstAdd
58:ir.InstLoad,3,59:ir.InstAdd
57:ir.Block,4,60:ir.InstStore
59:ir.InstAdd,3,60:ir.InstStore
60:ir.InstStore,3,61:ir.TermBr
61:ir.TermBr,5,43:ir.Block
61:ir.TermBr,3,43:ir.Block
62:ir.Block,4,63:ir.InstGetElementPtr
62:ir.Block,3,63:ir.InstGetElementPtr
62:ir.Block,4,64:ir.InstStore
63:ir.InstGetElementPtr,3,64:ir.InstStore
62:ir.Block,4,65:ir.InstLoad
64:ir.InstStore,3,65:ir.InstLoad
62:ir.Block,4,66:ir.InstCall
65:ir.InstLoad,3,66:ir.InstCall
66:ir.InstCall,3,67:ir.TermRet
19:ir.InstLoad,1,22:ir.InstCall
22:ir.InstCall,2,19:ir.InstLoad
24:ir.InstGetElementPtr,1,25:ir.InstStore
25:ir.InstStore,2,24:ir.InstGetElementPtr
52:ir.InstLoad,1,55:ir.InstStore
55:ir.InstStore,2,52:ir.InstLoad
54:ir.InstGetElementPtr,1,55:ir.InstStore
55:ir.InstStore,2,54:ir.InstGetElementPtr
63:ir.InstGetElementPtr,1,64:ir.InstStore
64:ir.InstStore,2,63:ir.InstGetElementPtr
15:ir.InstLoad,1,16:ir.InstICmp
16:ir.InstICmp,2,15:ir.InstLoad
4:ir.InstAlloca,1,34:ir.InstBitCast
34:ir.InstBitCast,2,4:ir.InstAlloca
4:ir.InstAlloca,1,54:ir.InstGetElementPtr
54:ir.InstGetElementPtr,2,4:ir.InstAlloca
4:ir.InstAlloca,1,63:ir.InstGetElementPtr
63:ir.InstGetElementPtr,2,4:ir.InstAlloca
49:ir.InstLoad,1,51:ir.InstGetElementPtr
51:ir.InstGetElementPtr,2,49:ir.InstLoad
3:ir.InstAlloca,1,10:ir.InstGetElementPtr
10:ir.InstGetElementPtr,2,3:ir.InstAlloca
2:ir.InstAlloca,1,11:ir.InstStore
11:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,19:ir.InstLoad
19:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,23:ir.InstLoad
23:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,38:ir.InstLoad
38:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,49:ir.InstLoad
49:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,65:ir.InstLoad
65:ir.InstLoad,2,2:ir.InstAlloca
58:ir.InstLoad,1,59:ir.InstAdd
59:ir.InstAdd,2,58:ir.InstLoad
20:ir.InstLoad,1,21:ir.InstCall
21:ir.InstCall,2,20:ir.InstLoad
34:ir.InstBitCast,1,35:ir.InstCall
35:ir.InstCall,2,34:ir.InstBitCast
65:ir.InstLoad,1,66:ir.InstCall
66:ir.InstCall,2,65:ir.InstLoad
45:ir.InstLoad,1,46:ir.InstICmp
46:ir.InstICmp,2,45:ir.InstLoad
51:ir.InstGetElementPtr,1,52:ir.InstLoad
52:ir.InstLoad,2,51:ir.InstGetElementPtr
10:ir.InstGetElementPtr,1,11:ir.InstStore
11:ir.InstStore,2,10:ir.InstGetElementPtr
1:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstLoad
28:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,30:ir.InstStore
30:ir.InstStore,2,1:ir.InstAlloca
23:ir.InstLoad,1,24:ir.InstGetElementPtr
24:ir.InstGetElementPtr,2,23:ir.InstLoad
29:ir.InstAdd,1,30:ir.InstStore
30:ir.InstStore,2,29:ir.InstAdd
5:ir.InstAlloca,1,41:ir.InstStore
41:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,44:ir.InstLoad
44:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,50:ir.InstLoad
50:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,53:ir.InstLoad
53:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,58:ir.InstLoad
58:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,60:ir.InstStore
60:ir.InstStore,2,5:ir.InstAlloca
44:ir.InstLoad,1,46:ir.InstICmp
46:ir.InstICmp,2,44:ir.InstLoad
28:ir.InstLoad,1,29:ir.InstAdd
29:ir.InstAdd,2,28:ir.InstLoad
38:ir.InstLoad,1,39:ir.InstCall
39:ir.InstCall,2,38:ir.InstLoad
21:ir.InstCall,1,22:ir.InstCall
22:ir.InstCall,2,21:ir.InstCall
39:ir.InstCall,1,40:ir.InstStore
40:ir.InstStore,2,39:ir.InstCall
6:ir.InstAlloca,1,40:ir.InstStore
40:ir.InstStore,2,6:ir.InstAlloca
6:ir.InstAlloca,1,45:ir.InstLoad
45:ir.InstLoad,2,6:ir.InstAlloca
59:ir.InstAdd,1,60:ir.InstStore
60:ir.InstStore,2,59:ir.InstAdd
17:ir.TermCondBr,2,16:ir.InstICmp
16:ir.InstICmp,1,17:ir.TermCondBr
47:ir.TermCondBr,2,46:ir.InstICmp
46:ir.InstICmp,1,47:ir.TermCondBr
