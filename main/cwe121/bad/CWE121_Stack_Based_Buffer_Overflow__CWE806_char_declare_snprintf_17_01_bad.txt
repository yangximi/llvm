? 42
[MOV] 0:ir.Block; label %0|
[DEL] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstGetElementPtr ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstGetElementPtr ;ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[100 x i8];NElems:<nil>;Typ:[100 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ;ir.InstBitCast ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[50 x i8];NElems:<nil>;Typ:[50 x i8]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !13 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 6:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !16 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !19];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [100 x i8]* %3 metadata !20 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !24];
[MOV] 8:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstStore |LocalIdent:{ 5};ElemType:[100 x i8];Src:[100 x i8]* %3;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !25];
[MOV] 9:ir.InstStore; ;|Src:i8* %5;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !26];
[DEL] 10:ir.InstStore; ;|Src:i32 0;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !27];
[MOV] 11:ir.TermBr; |Target:label %6;Successors:[label %6];Metadata:[!dbg !29];
[MOV] 12:ir.Block; label %6|
[DEL] 13:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 7};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !30];
[DEL] 14:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 8};Pred:slt;X:i32 %7;Y:i32 1;Typ:i1;Metadata:[!dbg !32];
[DEL] 15:ir.TermCondBr; ir.InstICmp|Cond:i1 %8;TargetTrue:label %9;TargetFalse:label %19;Successors:[label %9 label %19];Metadata:[!dbg !33];
[MOV] 16:ir.Block; label %9|
[MOV] 17:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 10};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !34];
[MOV] 18:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 11};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !34];
[MOV] 19:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 12};Callee:i64 (i8*, i1, i1, i1)* @llvm.objectsize.i64.p0i8;Args:[i8* %11 i1 false i1 true i1 false];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !34];
[MOV] 20:ir.InstCall; ir.InstCall ;|LocalIdent:{ 13};Callee:i8* (i8*, i32, i64, i64)* @__memset_chk;Args:[i8* %10 i32 65 i64 99 i64 %12];Typ:i8*;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[#5];OperandBundles:[];Metadata:[!dbg !34];
[MOV] 21:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 14};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !36];
[MOV] 22:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 15};ElemType:i8;Src:i8* %14;Indices:[i64 99];Typ:i8*;InBounds:true;Metadata:[!dbg !36];
[MOV] 23:ir.InstStore; ;|Src:i8 0;Dst:i8* %15;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !37];
[MOV] 24:ir.TermBr; |Target:label %16;Successors:[label %16];Metadata:[!dbg !38];
[MOV] 25:ir.Block; label %16|
[DEL] 26:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 17};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !39];
[DEL] 27:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 18};X:i32 %17;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !39];
[DEL] 28:ir.InstStore; ;|Src:i32 %18;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !39];
[MOV] 29:ir.TermBr; label %6|Target:label %6;Successors:[label %6];Metadata:[!dbg !40 !llvm.loop !41];
[MOV] 30:ir.Block; label %19|
[MOV] 31:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [50 x i8]* %4 metadata !43 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !48];
[MOV] 32:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 20};From:[50 x i8]* %4;To:i8*;Metadata:[!dbg !48];
[MOV] 33:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %20 i8 0 i64 50 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !48];
[MOV] 34:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 21};ElemType:[50 x i8];Src:[50 x i8]* %4;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !49];
[MOV] 35:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 22};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !49];
[MOV] 36:ir.InstCall; ir.InstCall ir.InstCall ;ir.InstCall |LocalIdent:{ 23};Callee:i64 (i8*)* @strlen;Args:[i8* %22];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !49];
[MOV] 37:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 24};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !49];
[MOV] 38:ir.InstCall; ir.InstCall ;|LocalIdent:{ 25};Callee:i32 (i8*, i64, i32, i64, i8*, ...)* @__snprintf_chk;Args:[i8* %21 i64 %23 i32 0 i64 50 i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0) i8* %24];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !49];
[MOV] 39:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 26};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !50];
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %26];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !51];
[MOV] 41:ir.TermRet; |X:<nil>;Metadata:[!dbg !52];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstCall
4:ir.InstAlloca,3,5:ir.InstCall
0:ir.Block,4,6:ir.InstCall
5:ir.InstCall,3,6:ir.InstCall
0:ir.Block,4,7:ir.InstCall
6:ir.InstCall,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstGetElementPtr
7:ir.InstCall,3,8:ir.InstGetElementPtr
0:ir.Block,4,9:ir.InstStore
8:ir.InstGetElementPtr,3,9:ir.InstStore
0:ir.Block,4,10:ir.InstStore
9:ir.InstStore,3,10:ir.InstStore
10:ir.InstStore,3,11:ir.TermBr
11:ir.TermBr,5,12:ir.Block
11:ir.TermBr,3,12:ir.Block
12:ir.Block,4,13:ir.InstLoad
12:ir.Block,3,13:ir.InstLoad
12:ir.Block,4,14:ir.InstICmp
13:ir.InstLoad,3,14:ir.InstICmp
14:ir.InstICmp,3,15:ir.TermCondBr
15:ir.TermCondBr,5,16:ir.Block
15:ir.TermCondBr,3,16:ir.Block
15:ir.TermCondBr,5,30:ir.Block
15:ir.TermCondBr,3,30:ir.Block
16:ir.Block,4,17:ir.InstLoad
16:ir.Block,3,17:ir.InstLoad
16:ir.Block,4,18:ir.InstLoad
17:ir.InstLoad,3,18:ir.InstLoad
16:ir.Block,4,19:ir.InstCall
18:ir.InstLoad,3,19:ir.InstCall
16:ir.Block,4,20:ir.InstCall
19:ir.InstCall,3,20:ir.InstCall
16:ir.Block,4,21:ir.InstLoad
20:ir.InstCall,3,21:ir.InstLoad
16:ir.Block,4,22:ir.InstGetElementPtr
21:ir.InstLoad,3,22:ir.InstGetElementPtr
16:ir.Block,4,23:ir.InstStore
22:ir.InstGetElementPtr,3,23:ir.InstStore
23:ir.InstStore,3,24:ir.TermBr
24:ir.TermBr,5,25:ir.Block
24:ir.TermBr,3,25:ir.Block
25:ir.Block,4,26:ir.InstLoad
25:ir.Block,3,26:ir.InstLoad
25:ir.Block,4,27:ir.InstAdd
26:ir.InstLoad,3,27:ir.InstAdd
25:ir.Block,4,28:ir.InstStore
27:ir.InstAdd,3,28:ir.InstStore
28:ir.InstStore,3,29:ir.TermBr
29:ir.TermBr,5,12:ir.Block
29:ir.TermBr,3,12:ir.Block
30:ir.Block,4,31:ir.InstCall
30:ir.Block,3,31:ir.InstCall
30:ir.Block,4,32:ir.InstBitCast
31:ir.InstCall,3,32:ir.InstBitCast
30:ir.Block,4,33:ir.InstCall
32:ir.InstBitCast,3,33:ir.InstCall
30:ir.Block,4,34:ir.InstGetElementPtr
33:ir.InstCall,3,34:ir.InstGetElementPtr
30:ir.Block,4,35:ir.InstLoad
34:ir.InstGetElementPtr,3,35:ir.InstLoad
30:ir.Block,4,36:ir.InstCall
35:ir.InstLoad,3,36:ir.InstCall
30:ir.Block,4,37:ir.InstLoad
36:ir.InstCall,3,37:ir.InstLoad
30:ir.Block,4,38:ir.InstCall
37:ir.InstLoad,3,38:ir.InstCall
30:ir.Block,4,39:ir.InstLoad
38:ir.InstCall,3,39:ir.InstLoad
30:ir.Block,4,40:ir.InstCall
39:ir.InstLoad,3,40:ir.InstCall
40:ir.InstCall,3,41:ir.TermRet
34:ir.InstGetElementPtr,1,38:ir.InstCall
38:ir.InstCall,2,34:ir.InstGetElementPtr
36:ir.InstCall,1,38:ir.InstCall
38:ir.InstCall,2,36:ir.InstCall
37:ir.InstLoad,1,38:ir.InstCall
38:ir.InstCall,2,37:ir.InstLoad
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstLoad
13:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,26:ir.InstLoad
26:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,28:ir.InstStore
28:ir.InstStore,2,1:ir.InstAlloca
21:ir.InstLoad,1,22:ir.InstGetElementPtr
22:ir.InstGetElementPtr,2,21:ir.InstLoad
22:ir.InstGetElementPtr,1,23:ir.InstStore
23:ir.InstStore,2,22:ir.InstGetElementPtr
26:ir.InstLoad,1,27:ir.InstAdd
27:ir.InstAdd,2,26:ir.InstLoad
35:ir.InstLoad,1,36:ir.InstCall
36:ir.InstCall,2,35:ir.InstLoad
18:ir.InstLoad,1,19:ir.InstCall
19:ir.InstCall,2,18:ir.InstLoad
19:ir.InstCall,1,20:ir.InstCall
20:ir.InstCall,2,19:ir.InstCall
4:ir.InstAlloca,1,32:ir.InstBitCast
32:ir.InstBitCast,2,4:ir.InstAlloca
4:ir.InstAlloca,1,34:ir.InstGetElementPtr
34:ir.InstGetElementPtr,2,4:ir.InstAlloca
32:ir.InstBitCast,1,33:ir.InstCall
33:ir.InstCall,2,32:ir.InstBitCast
3:ir.InstAlloca,1,8:ir.InstGetElementPtr
8:ir.InstGetElementPtr,2,3:ir.InstAlloca
39:ir.InstLoad,1,40:ir.InstCall
40:ir.InstCall,2,39:ir.InstLoad
8:ir.InstGetElementPtr,1,9:ir.InstStore
9:ir.InstStore,2,8:ir.InstGetElementPtr
2:ir.InstAlloca,1,9:ir.InstStore
9:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,17:ir.InstLoad
17:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,18:ir.InstLoad
18:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,37:ir.InstLoad
37:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,39:ir.InstLoad
39:ir.InstLoad,2,2:ir.InstAlloca
13:ir.InstLoad,1,14:ir.InstICmp
14:ir.InstICmp,2,13:ir.InstLoad
17:ir.InstLoad,1,20:ir.InstCall
20:ir.InstCall,2,17:ir.InstLoad
27:ir.InstAdd,1,28:ir.InstStore
28:ir.InstStore,2,27:ir.InstAdd
15:ir.TermCondBr,2,14:ir.InstICmp
14:ir.InstICmp,1,15:ir.TermCondBr
