? 66
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstCall ;ir.InstStore ir.InstLoad ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 2};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i8*;NElems:<nil>;Typ:i8**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstCall ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 4};ElemType:[11 x i8];NElems:<nil>;Typ:[11 x i8]*;InAlloca:false;SwiftError:false;Align:align 1;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 5};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ;ir.InstStore ir.InstLoad |LocalIdent:{ 6};ElemType:i64;NElems:<nil>;Typ:i64*;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %1 metadata !15 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !16];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %2 metadata !17 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !18];
[MOV] 9:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 7};ElemType:i8;NElems:i64 10;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !19];
[MOV] 10:ir.InstStore; ;|Src:i8* %7;Dst:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !18];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i8** %3 metadata !20 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !21];
[MOV] 12:ir.InstAlloca; ir.InstAlloca ;ir.InstStore |LocalIdent:{ 8};ElemType:i8;NElems:i64 11;Typ:i8*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[!dbg !22];
[MOV] 13:ir.InstStore; ;|Src:i8* %8;Dst:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !21];
[MOV] 14:ir.InstCall; ir.InstCall ;ir.InstICmp |LocalIdent:{ 9};Callee:i32 (...)* @globalReturnsTrueOrFalse;Args:[];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !23];
[MOV] 15:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 10};Pred:ne;X:i32 %9;Y:i32 0;Typ:i1;Metadata:[!dbg !23];
[DEL] 16:ir.TermCondBr; ir.InstICmp|Cond:i1 %10;TargetTrue:label %11;TargetFalse:label %15;Successors:[label %11 label %15];Metadata:[!dbg !25];
[DEL] 17:ir.Block; label %11|
[DEL] 18:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 12};ElemType:i8*;Src:i8** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !26];
[DEL] 19:ir.InstStore; ;|Src:i8* %12;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !28];
[DEL] 20:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 13};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !29];
[DEL] 21:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 14};ElemType:i8;Src:i8* %13;Indices:[i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !29];
[DEL] 22:ir.InstStore; ;|Src:i8 0;Dst:i8* %14;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !30];
[DEL] 23:ir.TermBr; |Target:label %19;Successors:[label %19];Metadata:[!dbg !31];
[MOV] 24:ir.Block; label %15|
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 16};ElemType:i8*;Src:i8** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !32];
[MOV] 26:ir.InstStore; ;|Src:i8* %16;Dst:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !34];
[MOV] 27:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 17};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !35];
[MOV] 28:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 18};ElemType:i8;Src:i8* %17;Indices:[i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !35];
[MOV] 29:ir.InstStore; ;|Src:i8 0;Dst:i8* %18;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !36];
[MOV] 30:ir.TermBr; |Target:label %19;Successors:[label %19];Metadata:[];
[MOV] 31:ir.Block; label %19|
[MOV] 32:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [11 x i8]* %4 metadata !37 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !42];
[MOV] 33:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 20};From:[11 x i8]* %4;To:i8*;Metadata:[!dbg !42];
[MOV] 34:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8*, i64, i1)* @llvm.memcpy.p0i8.p0i8.i64;Args:[i8* align 1 %20 i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_12_bad.source, i32 0, i32 0) i64 11 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !42];
[MOV] 35:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %5 metadata !43 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !49];
[MOV] 36:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i64* %6 metadata !50 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !51];
[MOV] 37:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstCall ;ir.InstCall |LocalIdent:{ 21};ElemType:[11 x i8];Src:[11 x i8]* %4;Indices:[i64 0 i64 0];Typ:i8*;InBounds:true;Metadata:[!dbg !52];
[MOV] 38:ir.InstCall; ir.InstCall ;ir.InstStore |LocalIdent:{ 22};Callee:i64 (i8*)* @strlen;Args:[i8* %21];Typ:i64;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !53];
[MOV] 39:ir.InstStore; ;|Src:i64 %22;Dst:i64* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !54];
[MOV] 40:ir.InstStore; ;|Src:i64 0;Dst:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !55];
[MOV] 41:ir.TermBr; |Target:label %23;Successors:[label %23];Metadata:[!dbg !57];
[MOV] 42:ir.Block; label %23|
[MOV] 43:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 24};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !58];
[MOV] 44:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 25};ElemType:i64;Src:i64* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !60];
[MOV] 45:ir.InstAdd; ir.InstAdd ;ir.InstICmp |LocalIdent:{ 26};X:i64 %25;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !61];
[MOV] 46:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 27};Pred:ult;X:i64 %24;Y:i64 %26;Typ:i1;Metadata:[!dbg !62];
[MOV] 47:ir.TermCondBr; ir.InstICmp|Cond:i1 %27;TargetTrue:label %28;TargetFalse:label %38;Successors:[label %28 label %38];Metadata:[!dbg !63];
[MOV] 48:ir.Block; label %28|
[MOV] 49:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 29};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !64];
[MOV] 50:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 30};ElemType:[11 x i8];Src:[11 x i8]* %4;Indices:[i64 0 i64 %29];Typ:i8*;InBounds:true;Metadata:[!dbg !66];
[MOV] 51:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 31};ElemType:i8;Src:i8* %30;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !66];
[MOV] 52:ir.InstLoad; ir.InstLoad ir.InstGetElementPtr ir.InstStore ;ir.InstGetElementPtr |LocalIdent:{ 32};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !67];
[MOV] 53:ir.InstLoad; ir.InstLoad ;|LocalIdent:{ 33};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !68];
[MOV] 54:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 34};ElemType:i8;Src:i8* %32;Indices:[i64 %33];Typ:i8*;InBounds:true;Metadata:[!dbg !67];
[MOV] 55:ir.InstStore; ;|Src:i8 %31;Dst:i8* %34;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 1;Metadata:[!dbg !69];
[MOV] 56:ir.TermBr; |Target:label %35;Successors:[label %35];Metadata:[!dbg !70];
[MOV] 57:ir.Block; label %35|
[MOV] 58:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 36};ElemType:i64;Src:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !71];
[MOV] 59:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 37};X:i64 %36;Y:i64 1;Typ:i64;OverflowFlags:[];Metadata:[!dbg !71];
[MOV] 60:ir.InstStore; ;|Src:i64 %37;Dst:i64* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !71];
[MOV] 61:ir.TermBr; label %23|Target:label %23;Successors:[label %23];Metadata:[!dbg !72 !llvm.loop !73];
[MOV] 62:ir.Block; label %38|
[MOV] 63:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 39};ElemType:i8*;Src:i8** %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !75];
[MOV] 64:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* %39];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !76];
[MOV] 65:ir.TermRet; |X:<nil>;Metadata:[!dbg !77];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstCall
6:ir.InstAlloca,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstAlloca
8:ir.InstCall,3,9:ir.InstAlloca
0:ir.Block,4,10:ir.InstStore
9:ir.InstAlloca,3,10:ir.InstStore
0:ir.Block,4,11:ir.InstCall
10:ir.InstStore,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstAlloca
11:ir.InstCall,3,12:ir.InstAlloca
0:ir.Block,4,13:ir.InstStore
12:ir.InstAlloca,3,13:ir.InstStore
0:ir.Block,4,14:ir.InstCall
13:ir.InstStore,3,14:ir.InstCall
0:ir.Block,4,15:ir.InstICmp
14:ir.InstCall,3,15:ir.InstICmp
15:ir.InstICmp,3,16:ir.TermCondBr
16:ir.TermCondBr,5,17:ir.Block
16:ir.TermCondBr,3,17:ir.Block
16:ir.TermCondBr,5,24:ir.Block
16:ir.TermCondBr,3,24:ir.Block
17:ir.Block,4,18:ir.InstLoad
17:ir.Block,3,18:ir.InstLoad
17:ir.Block,4,19:ir.InstStore
18:ir.InstLoad,3,19:ir.InstStore
17:ir.Block,4,20:ir.InstLoad
19:ir.InstStore,3,20:ir.InstLoad
17:ir.Block,4,21:ir.InstGetElementPtr
20:ir.InstLoad,3,21:ir.InstGetElementPtr
17:ir.Block,4,22:ir.InstStore
21:ir.InstGetElementPtr,3,22:ir.InstStore
22:ir.InstStore,3,23:ir.TermBr
23:ir.TermBr,5,31:ir.Block
23:ir.TermBr,3,31:ir.Block
24:ir.Block,4,25:ir.InstLoad
24:ir.Block,3,25:ir.InstLoad
24:ir.Block,4,26:ir.InstStore
25:ir.InstLoad,3,26:ir.InstStore
24:ir.Block,4,27:ir.InstLoad
26:ir.InstStore,3,27:ir.InstLoad
24:ir.Block,4,28:ir.InstGetElementPtr
27:ir.InstLoad,3,28:ir.InstGetElementPtr
24:ir.Block,4,29:ir.InstStore
28:ir.InstGetElementPtr,3,29:ir.InstStore
29:ir.InstStore,3,30:ir.TermBr
30:ir.TermBr,5,31:ir.Block
30:ir.TermBr,3,31:ir.Block
31:ir.Block,4,32:ir.InstCall
31:ir.Block,3,32:ir.InstCall
31:ir.Block,4,33:ir.InstBitCast
32:ir.InstCall,3,33:ir.InstBitCast
31:ir.Block,4,34:ir.InstCall
33:ir.InstBitCast,3,34:ir.InstCall
31:ir.Block,4,35:ir.InstCall
34:ir.InstCall,3,35:ir.InstCall
31:ir.Block,4,36:ir.InstCall
35:ir.InstCall,3,36:ir.InstCall
31:ir.Block,4,37:ir.InstGetElementPtr
36:ir.InstCall,3,37:ir.InstGetElementPtr
31:ir.Block,4,38:ir.InstCall
37:ir.InstGetElementPtr,3,38:ir.InstCall
31:ir.Block,4,39:ir.InstStore
38:ir.InstCall,3,39:ir.InstStore
31:ir.Block,4,40:ir.InstStore
39:ir.InstStore,3,40:ir.InstStore
40:ir.InstStore,3,41:ir.TermBr
41:ir.TermBr,5,42:ir.Block
41:ir.TermBr,3,42:ir.Block
42:ir.Block,4,43:ir.InstLoad
42:ir.Block,3,43:ir.InstLoad
42:ir.Block,4,44:ir.InstLoad
43:ir.InstLoad,3,44:ir.InstLoad
42:ir.Block,4,45:ir.InstAdd
44:ir.InstLoad,3,45:ir.InstAdd
42:ir.Block,4,46:ir.InstICmp
45:ir.InstAdd,3,46:ir.InstICmp
46:ir.InstICmp,3,47:ir.TermCondBr
47:ir.TermCondBr,5,48:ir.Block
47:ir.TermCondBr,3,48:ir.Block
47:ir.TermCondBr,5,62:ir.Block
47:ir.TermCondBr,3,62:ir.Block
48:ir.Block,4,49:ir.InstLoad
48:ir.Block,3,49:ir.InstLoad
48:ir.Block,4,50:ir.InstGetElementPtr
49:ir.InstLoad,3,50:ir.InstGetElementPtr
48:ir.Block,4,51:ir.InstLoad
50:ir.InstGetElementPtr,3,51:ir.InstLoad
48:ir.Block,4,52:ir.InstLoad
51:ir.InstLoad,3,52:ir.InstLoad
48:ir.Block,4,53:ir.InstLoad
52:ir.InstLoad,3,53:ir.InstLoad
48:ir.Block,4,54:ir.InstGetElementPtr
53:ir.InstLoad,3,54:ir.InstGetElementPtr
48:ir.Block,4,55:ir.InstStore
54:ir.InstGetElementPtr,3,55:ir.InstStore
55:ir.InstStore,3,56:ir.TermBr
56:ir.TermBr,5,57:ir.Block
56:ir.TermBr,3,57:ir.Block
57:ir.Block,4,58:ir.InstLoad
57:ir.Block,3,58:ir.InstLoad
57:ir.Block,4,59:ir.InstAdd
58:ir.InstLoad,3,59:ir.InstAdd
57:ir.Block,4,60:ir.InstStore
59:ir.InstAdd,3,60:ir.InstStore
60:ir.InstStore,3,61:ir.TermBr
61:ir.TermBr,5,42:ir.Block
61:ir.TermBr,3,42:ir.Block
62:ir.Block,4,63:ir.InstLoad
62:ir.Block,3,63:ir.InstLoad
62:ir.Block,4,64:ir.InstCall
63:ir.InstLoad,3,64:ir.InstCall
64:ir.InstCall,3,65:ir.TermRet
38:ir.InstCall,1,39:ir.InstStore
39:ir.InstStore,2,38:ir.InstCall
4:ir.InstAlloca,1,33:ir.InstBitCast
33:ir.InstBitCast,2,4:ir.InstAlloca
4:ir.InstAlloca,1,37:ir.InstGetElementPtr
37:ir.InstGetElementPtr,2,4:ir.InstAlloca
4:ir.InstAlloca,1,50:ir.InstGetElementPtr
50:ir.InstGetElementPtr,2,4:ir.InstAlloca
6:ir.InstAlloca,1,39:ir.InstStore
39:ir.InstStore,2,6:ir.InstAlloca
6:ir.InstAlloca,1,44:ir.InstLoad
44:ir.InstLoad,2,6:ir.InstAlloca
45:ir.InstAdd,1,46:ir.InstICmp
46:ir.InstICmp,2,45:ir.InstAdd
3:ir.InstAlloca,1,13:ir.InstStore
13:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,25:ir.InstLoad
25:ir.InstLoad,2,3:ir.InstAlloca
14:ir.InstCall,1,15:ir.InstICmp
15:ir.InstICmp,2,14:ir.InstCall
25:ir.InstLoad,1,26:ir.InstStore
26:ir.InstStore,2,25:ir.InstLoad
12:ir.InstAlloca,1,13:ir.InstStore
13:ir.InstStore,2,12:ir.InstAlloca
18:ir.InstLoad,1,19:ir.InstStore
19:ir.InstStore,2,18:ir.InstLoad
21:ir.InstGetElementPtr,1,22:ir.InstStore
22:ir.InstStore,2,21:ir.InstGetElementPtr
2:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,18:ir.InstLoad
18:ir.InstLoad,2,2:ir.InstAlloca
51:ir.InstLoad,1,55:ir.InstStore
55:ir.InstStore,2,51:ir.InstLoad
59:ir.InstAdd,1,60:ir.InstStore
60:ir.InstStore,2,59:ir.InstAdd
5:ir.InstAlloca,1,40:ir.InstStore
40:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,43:ir.InstLoad
43:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,49:ir.InstLoad
49:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,53:ir.InstLoad
53:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,58:ir.InstLoad
58:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,60:ir.InstStore
60:ir.InstStore,2,5:ir.InstAlloca
50:ir.InstGetElementPtr,1,51:ir.InstLoad
51:ir.InstLoad,2,50:ir.InstGetElementPtr
54:ir.InstGetElementPtr,1,55:ir.InstStore
55:ir.InstStore,2,54:ir.InstGetElementPtr
9:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,9:ir.InstAlloca
33:ir.InstBitCast,1,34:ir.InstCall
34:ir.InstCall,2,33:ir.InstBitCast
37:ir.InstGetElementPtr,1,38:ir.InstCall
38:ir.InstCall,2,37:ir.InstGetElementPtr
1:ir.InstAlloca,1,19:ir.InstStore
19:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,26:ir.InstStore
26:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,27:ir.InstLoad
27:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,52:ir.InstLoad
52:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,63:ir.InstLoad
63:ir.InstLoad,2,1:ir.InstAlloca
27:ir.InstLoad,1,28:ir.InstGetElementPtr
28:ir.InstGetElementPtr,2,27:ir.InstLoad
43:ir.InstLoad,1,46:ir.InstICmp
46:ir.InstICmp,2,43:ir.InstLoad
58:ir.InstLoad,1,59:ir.InstAdd
59:ir.InstAdd,2,58:ir.InstLoad
52:ir.InstLoad,1,54:ir.InstGetElementPtr
54:ir.InstGetElementPtr,2,52:ir.InstLoad
63:ir.InstLoad,1,64:ir.InstCall
64:ir.InstCall,2,63:ir.InstLoad
20:ir.InstLoad,1,21:ir.InstGetElementPtr
21:ir.InstGetElementPtr,2,20:ir.InstLoad
28:ir.InstGetElementPtr,1,29:ir.InstStore
29:ir.InstStore,2,28:ir.InstGetElementPtr
44:ir.InstLoad,1,45:ir.InstAdd
45:ir.InstAdd,2,44:ir.InstLoad
16:ir.TermCondBr,2,15:ir.InstICmp
15:ir.InstICmp,1,16:ir.TermCondBr
47:ir.TermCondBr,2,46:ir.InstICmp
46:ir.InstICmp,1,47:ir.TermCondBr
