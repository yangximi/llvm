? 64
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ;ir.InstStore ir.InstStore ir.InstStore |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstStore ir.InstLoad ir.InstLoad ir.InstStore ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 2};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad |LocalIdent:{ 3};ElemType:i32*;NElems:<nil>;Typ:i32**;InAlloca:false;SwiftError:false;Align:align 8;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstCall ir.InstLoad ;ir.InstStore ir.InstCall ir.InstLoad |LocalIdent:{ 4};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 5:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 5};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 6:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 6};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 7:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 7};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !13 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !15];
[MOV] 9:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %2 metadata !16 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !18];
[MOV] 10:ir.InstStore; ;|Src:i32* %1;Dst:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !18];
[MOV] 11:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32** %3 metadata !19 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !20];
[MOV] 12:ir.InstStore; ;|Src:i32* %1;Dst:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !20];
[MOV] 13:ir.InstStore; ;|Src:i32 -1;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !21];
[MOV] 14:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %4 metadata !22 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !24];
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstLoad |LocalIdent:{ 8};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !25];
[MOV] 16:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 9};ElemType:i32;Src:i32* %8;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !26];
[MOV] 17:ir.InstStore; ;|Src:i32 %9;Dst:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !24];
[DEL] 18:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 10};ElemType:%struct.__sFILE*;Src:%struct.__sFILE** @__stdinp;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !27];
[DEL] 19:ir.InstCall; ir.InstCall ;|LocalIdent:{ 11};Callee:i32 (%struct.__sFILE*, i8*, ...)* @fscanf;Args:[%struct.__sFILE* %10 i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0) i32* %4];Typ:i32;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !28];
[MOV] 20:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 12};ElemType:i32;Src:i32* %4;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !29];
[MOV] 21:ir.InstLoad; ir.InstLoad ir.InstStore ir.InstLoad ;ir.InstStore |LocalIdent:{ 13};ElemType:i32*;Src:i32** %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !30];
[MOV] 22:ir.InstStore; ;|Src:i32 %12;Dst:i32* %13;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !31];
[MOV] 23:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %5 metadata !32 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !34];
[MOV] 24:ir.InstLoad; ir.InstLoad ;ir.InstLoad |LocalIdent:{ 14};ElemType:i32*;Src:i32** %3;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 8;Metadata:[!dbg !35];
[MOV] 25:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 15};ElemType:i32;Src:i32* %14;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !36];
[MOV] 26:ir.InstStore; ;|Src:i32 %15;Dst:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !34];
[MOV] 27:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %6 metadata !37 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !39];
[MOV] 28:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %7 metadata !40 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !44];
[MOV] 29:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 16};From:[10 x i32]* %7;To:i8*;Metadata:[!dbg !44];
[MOV] 30:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %16 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !44];
[MOV] 31:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 17};ElemType:i32;Src:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !45];
[MOV] 32:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 18};Pred:sge;X:i32 %17;Y:i32 0;Typ:i1;Metadata:[!dbg !47];
[MOV] 33:ir.TermCondBr; ir.InstICmp|Cond:i1 %18;TargetTrue:label %19;TargetFalse:label %35;Successors:[label %19 label %35];Metadata:[!dbg !48];
[MOV] 34:ir.Block; label %19|
[MOV] 35:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 20};ElemType:i32;Src:i32* %5;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !49];
[MOV] 36:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 21};From:i32 %20;To:i64;Metadata:[!dbg !51];
[MOV] 37:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 22};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %21];Typ:i32*;InBounds:true;Metadata:[!dbg !51];
[MOV] 38:ir.InstStore; ;|Src:i32 1;Dst:i32* %22;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !52];
[MOV] 39:ir.InstStore; ;|Src:i32 0;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !53];
[MOV] 40:ir.TermBr; |Target:label %23;Successors:[label %23];Metadata:[!dbg !55];
[MOV] 41:ir.Block; label %23|
[MOV] 42:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 24};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !56];
[MOV] 43:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 25};Pred:slt;X:i32 %24;Y:i32 10;Typ:i1;Metadata:[!dbg !58];
[MOV] 44:ir.TermCondBr; ir.InstICmp|Cond:i1 %25;TargetTrue:label %26;TargetFalse:label %34;Successors:[label %26 label %34];Metadata:[!dbg !59];
[MOV] 45:ir.Block; label %26|
[MOV] 46:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 27};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !60];
[MOV] 47:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 28};From:i32 %27;To:i64;Metadata:[!dbg !62];
[MOV] 48:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 29};ElemType:[10 x i32];Src:[10 x i32]* %7;Indices:[i64 0 i64 %28];Typ:i32*;InBounds:true;Metadata:[!dbg !62];
[MOV] 49:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 30};ElemType:i32;Src:i32* %29;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !62];
[MOV] 50:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %30];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !63];
[MOV] 51:ir.TermBr; |Target:label %31;Successors:[label %31];Metadata:[!dbg !64];
[MOV] 52:ir.Block; label %31|
[MOV] 53:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 32};ElemType:i32;Src:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !65];
[MOV] 54:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 33};X:i32 %32;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !65];
[MOV] 55:ir.InstStore; ;|Src:i32 %33;Dst:i32* %6;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !65];
[MOV] 56:ir.TermBr; label %23|Target:label %23;Successors:[label %23];Metadata:[!dbg !66 !llvm.loop !67];
[MOV] 57:ir.Block; label %34|
[MOV] 58:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[!dbg !69];
[MOV] 59:ir.Block; label %35|
[MOV] 60:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !70];
[MOV] 61:ir.TermBr; |Target:label %36;Successors:[label %36];Metadata:[];
[MOV] 62:ir.Block; label %36|
[MOV] 63:ir.TermRet; |X:<nil>;Metadata:[!dbg !72];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstAlloca
3:ir.InstAlloca,3,4:ir.InstAlloca
0:ir.Block,4,5:ir.InstAlloca
4:ir.InstAlloca,3,5:ir.InstAlloca
0:ir.Block,4,6:ir.InstAlloca
5:ir.InstAlloca,3,6:ir.InstAlloca
0:ir.Block,4,7:ir.InstAlloca
6:ir.InstAlloca,3,7:ir.InstAlloca
0:ir.Block,4,8:ir.InstCall
7:ir.InstAlloca,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstCall
8:ir.InstCall,3,9:ir.InstCall
0:ir.Block,4,10:ir.InstStore
9:ir.InstCall,3,10:ir.InstStore
0:ir.Block,4,11:ir.InstCall
10:ir.InstStore,3,11:ir.InstCall
0:ir.Block,4,12:ir.InstStore
11:ir.InstCall,3,12:ir.InstStore
0:ir.Block,4,13:ir.InstStore
12:ir.InstStore,3,13:ir.InstStore
0:ir.Block,4,14:ir.InstCall
13:ir.InstStore,3,14:ir.InstCall
0:ir.Block,4,15:ir.InstLoad
14:ir.InstCall,3,15:ir.InstLoad
0:ir.Block,4,16:ir.InstLoad
15:ir.InstLoad,3,16:ir.InstLoad
0:ir.Block,4,17:ir.InstStore
16:ir.InstLoad,3,17:ir.InstStore
0:ir.Block,4,18:ir.InstLoad
17:ir.InstStore,3,18:ir.InstLoad
0:ir.Block,4,19:ir.InstCall
18:ir.InstLoad,3,19:ir.InstCall
0:ir.Block,4,20:ir.InstLoad
19:ir.InstCall,3,20:ir.InstLoad
0:ir.Block,4,21:ir.InstLoad
20:ir.InstLoad,3,21:ir.InstLoad
0:ir.Block,4,22:ir.InstStore
21:ir.InstLoad,3,22:ir.InstStore
0:ir.Block,4,23:ir.InstCall
22:ir.InstStore,3,23:ir.InstCall
0:ir.Block,4,24:ir.InstLoad
23:ir.InstCall,3,24:ir.InstLoad
0:ir.Block,4,25:ir.InstLoad
24:ir.InstLoad,3,25:ir.InstLoad
0:ir.Block,4,26:ir.InstStore
25:ir.InstLoad,3,26:ir.InstStore
0:ir.Block,4,27:ir.InstCall
26:ir.InstStore,3,27:ir.InstCall
0:ir.Block,4,28:ir.InstCall
27:ir.InstCall,3,28:ir.InstCall
0:ir.Block,4,29:ir.InstBitCast
28:ir.InstCall,3,29:ir.InstBitCast
0:ir.Block,4,30:ir.InstCall
29:ir.InstBitCast,3,30:ir.InstCall
0:ir.Block,4,31:ir.InstLoad
30:ir.InstCall,3,31:ir.InstLoad
0:ir.Block,4,32:ir.InstICmp
31:ir.InstLoad,3,32:ir.InstICmp
32:ir.InstICmp,3,33:ir.TermCondBr
33:ir.TermCondBr,5,34:ir.Block
33:ir.TermCondBr,3,34:ir.Block
33:ir.TermCondBr,5,59:ir.Block
33:ir.TermCondBr,3,59:ir.Block
34:ir.Block,4,35:ir.InstLoad
34:ir.Block,3,35:ir.InstLoad
34:ir.Block,4,36:ir.InstSExt
35:ir.InstLoad,3,36:ir.InstSExt
34:ir.Block,4,37:ir.InstGetElementPtr
36:ir.InstSExt,3,37:ir.InstGetElementPtr
34:ir.Block,4,38:ir.InstStore
37:ir.InstGetElementPtr,3,38:ir.InstStore
34:ir.Block,4,39:ir.InstStore
38:ir.InstStore,3,39:ir.InstStore
39:ir.InstStore,3,40:ir.TermBr
40:ir.TermBr,5,41:ir.Block
40:ir.TermBr,3,41:ir.Block
41:ir.Block,4,42:ir.InstLoad
41:ir.Block,3,42:ir.InstLoad
41:ir.Block,4,43:ir.InstICmp
42:ir.InstLoad,3,43:ir.InstICmp
43:ir.InstICmp,3,44:ir.TermCondBr
44:ir.TermCondBr,5,45:ir.Block
44:ir.TermCondBr,3,45:ir.Block
44:ir.TermCondBr,5,57:ir.Block
44:ir.TermCondBr,3,57:ir.Block
45:ir.Block,4,46:ir.InstLoad
45:ir.Block,3,46:ir.InstLoad
45:ir.Block,4,47:ir.InstSExt
46:ir.InstLoad,3,47:ir.InstSExt
45:ir.Block,4,48:ir.InstGetElementPtr
47:ir.InstSExt,3,48:ir.InstGetElementPtr
45:ir.Block,4,49:ir.InstLoad
48:ir.InstGetElementPtr,3,49:ir.InstLoad
45:ir.Block,4,50:ir.InstCall
49:ir.InstLoad,3,50:ir.InstCall
50:ir.InstCall,3,51:ir.TermBr
51:ir.TermBr,5,52:ir.Block
51:ir.TermBr,3,52:ir.Block
52:ir.Block,4,53:ir.InstLoad
52:ir.Block,3,53:ir.InstLoad
52:ir.Block,4,54:ir.InstAdd
53:ir.InstLoad,3,54:ir.InstAdd
52:ir.Block,4,55:ir.InstStore
54:ir.InstAdd,3,55:ir.InstStore
55:ir.InstStore,3,56:ir.TermBr
56:ir.TermBr,5,41:ir.Block
56:ir.TermBr,3,41:ir.Block
57:ir.Block,3,58:ir.TermBr
58:ir.TermBr,5,62:ir.Block
58:ir.TermBr,3,62:ir.Block
59:ir.Block,4,60:ir.InstCall
59:ir.Block,3,60:ir.InstCall
60:ir.InstCall,3,61:ir.TermBr
61:ir.TermBr,5,62:ir.Block
61:ir.TermBr,3,62:ir.Block
62:ir.Block,3,63:ir.TermRet
31:ir.InstLoad,1,32:ir.InstICmp
32:ir.InstICmp,2,31:ir.InstLoad
6:ir.InstAlloca,1,39:ir.InstStore
39:ir.InstStore,2,6:ir.InstAlloca
6:ir.InstAlloca,1,42:ir.InstLoad
42:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,46:ir.InstLoad
46:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,53:ir.InstLoad
53:ir.InstLoad,2,6:ir.InstAlloca
6:ir.InstAlloca,1,55:ir.InstStore
55:ir.InstStore,2,6:ir.InstAlloca
42:ir.InstLoad,1,43:ir.InstICmp
43:ir.InstICmp,2,42:ir.InstLoad
46:ir.InstLoad,1,47:ir.InstSExt
47:ir.InstSExt,2,46:ir.InstLoad
1:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,13:ir.InstStore
13:ir.InstStore,2,1:ir.InstAlloca
4:ir.InstAlloca,1,17:ir.InstStore
17:ir.InstStore,2,4:ir.InstAlloca
4:ir.InstAlloca,1,19:ir.InstCall
19:ir.InstCall,2,4:ir.InstAlloca
4:ir.InstAlloca,1,20:ir.InstLoad
20:ir.InstLoad,2,4:ir.InstAlloca
25:ir.InstLoad,1,26:ir.InstStore
26:ir.InstStore,2,25:ir.InstLoad
35:ir.InstLoad,1,36:ir.InstSExt
36:ir.InstSExt,2,35:ir.InstLoad
37:ir.InstGetElementPtr,1,38:ir.InstStore
38:ir.InstStore,2,37:ir.InstGetElementPtr
49:ir.InstLoad,1,50:ir.InstCall
50:ir.InstCall,2,49:ir.InstLoad
21:ir.InstLoad,1,22:ir.InstStore
22:ir.InstStore,2,21:ir.InstLoad
24:ir.InstLoad,1,25:ir.InstLoad
25:ir.InstLoad,2,24:ir.InstLoad
29:ir.InstBitCast,1,30:ir.InstCall
30:ir.InstCall,2,29:ir.InstBitCast
7:ir.InstAlloca,1,29:ir.InstBitCast
29:ir.InstBitCast,2,7:ir.InstAlloca
7:ir.InstAlloca,1,37:ir.InstGetElementPtr
37:ir.InstGetElementPtr,2,7:ir.InstAlloca
7:ir.InstAlloca,1,48:ir.InstGetElementPtr
48:ir.InstGetElementPtr,2,7:ir.InstAlloca
48:ir.InstGetElementPtr,1,49:ir.InstLoad
49:ir.InstLoad,2,48:ir.InstGetElementPtr
53:ir.InstLoad,1,54:ir.InstAdd
54:ir.InstAdd,2,53:ir.InstLoad
54:ir.InstAdd,1,55:ir.InstStore
55:ir.InstStore,2,54:ir.InstAdd
2:ir.InstAlloca,1,10:ir.InstStore
10:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,21:ir.InstLoad
21:ir.InstLoad,2,2:ir.InstAlloca
16:ir.InstLoad,1,17:ir.InstStore
17:ir.InstStore,2,16:ir.InstLoad
20:ir.InstLoad,1,22:ir.InstStore
22:ir.InstStore,2,20:ir.InstLoad
5:ir.InstAlloca,1,26:ir.InstStore
26:ir.InstStore,2,5:ir.InstAlloca
5:ir.InstAlloca,1,31:ir.InstLoad
31:ir.InstLoad,2,5:ir.InstAlloca
5:ir.InstAlloca,1,35:ir.InstLoad
35:ir.InstLoad,2,5:ir.InstAlloca
3:ir.InstAlloca,1,12:ir.InstStore
12:ir.InstStore,2,3:ir.InstAlloca
3:ir.InstAlloca,1,24:ir.InstLoad
24:ir.InstLoad,2,3:ir.InstAlloca
15:ir.InstLoad,1,16:ir.InstLoad
16:ir.InstLoad,2,15:ir.InstLoad
18:ir.InstLoad,1,19:ir.InstCall
19:ir.InstCall,2,18:ir.InstLoad
33:ir.TermCondBr,2,32:ir.InstICmp
32:ir.InstICmp,1,33:ir.TermCondBr
44:ir.TermCondBr,2,43:ir.InstICmp
43:ir.InstICmp,1,44:ir.TermCondBr
