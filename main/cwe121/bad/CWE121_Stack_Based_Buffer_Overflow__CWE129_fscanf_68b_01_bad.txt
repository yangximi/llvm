? 44
[MOV] 0:ir.Block; label %0|
[MOV] 1:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstLoad ;ir.InstStore ir.InstLoad ir.InstLoad |LocalIdent:{ 1};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 2:ir.InstAlloca; ir.InstAlloca ir.InstStore ir.InstStore ir.InstAdd ;ir.InstStore ir.InstLoad ir.InstLoad ir.InstLoad ir.InstStore |LocalIdent:{ 2};ElemType:i32;NElems:<nil>;Typ:i32*;InAlloca:false;SwiftError:false;Align:align 4;AddrSpace:addrspace(0);Metadata:[];
[MOV] 3:ir.InstAlloca; ir.InstAlloca ir.InstBitCast ir.InstCall ir.InstGetElementPtr ir.InstStore ir.InstGetElementPtr ;ir.InstBitCast ir.InstGetElementPtr ir.InstGetElementPtr |LocalIdent:{ 3};ElemType:[10 x i32];NElems:<nil>;Typ:[10 x i32]*;InAlloca:false;SwiftError:false;Align:align 16;AddrSpace:addrspace(0);Metadata:[];
[MOV] 4:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %1 metadata !11 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !13];
[MOV] 5:ir.InstLoad; ir.InstLoad ;ir.InstStore |LocalIdent:{ 4};ElemType:i32;Src:i32* @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_68_badData;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !14];
[MOV] 6:ir.InstStore; ;|Src:i32 %4;Dst:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !13];
[MOV] 7:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata i32* %2 metadata !15 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !17];
[MOV] 8:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (metadata, metadata, metadata)* @llvm.dbg.declare;Args:[metadata [10 x i32]* %3 metadata !18 metadata !DIExpression()];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !22];
[MOV] 9:ir.InstBitCast; ir.InstBitCast ir.InstCall ;ir.InstCall |LocalIdent:{ 5};From:[10 x i32]* %3;To:i8*;Metadata:[!dbg !22];
[MOV] 10:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*, i8, i64, i1)* @llvm.memset.p0i8.i64;Args:[i8* align 16 %5 i8 0 i64 40 i1 false];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !22];
[MOV] 11:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 6};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !23];
[MOV] 12:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 7};Pred:sge;X:i32 %6;Y:i32 0;Typ:i1;Metadata:[!dbg !25];
[DEL] 13:ir.TermCondBr; ir.InstICmp|Cond:i1 %7;TargetTrue:label %8;TargetFalse:label %24;Successors:[label %8 label %24];Metadata:[!dbg !26];
[MOV] 14:ir.Block; label %8|
[MOV] 15:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 9};ElemType:i32;Src:i32* %1;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !27];
[MOV] 16:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 10};From:i32 %9;To:i64;Metadata:[!dbg !29];
[MOV] 17:ir.InstGetElementPtr; ir.InstGetElementPtr ir.InstStore ;ir.InstStore |LocalIdent:{ 11};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %10];Typ:i32*;InBounds:true;Metadata:[!dbg !29];
[MOV] 18:ir.InstStore; ;|Src:i32 1;Dst:i32* %11;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !30];
[MOV] 19:ir.InstStore; ;|Src:i32 0;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !31];
[MOV] 20:ir.TermBr; |Target:label %12;Successors:[label %12];Metadata:[!dbg !33];
[MOV] 21:ir.Block; label %12|
[MOV] 22:ir.InstLoad; ir.InstLoad ;ir.InstICmp |LocalIdent:{ 13};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !34];
[MOV] 23:ir.InstICmp; ir.InstICmp ;|LocalIdent:{ 14};Pred:slt;X:i32 %13;Y:i32 10;Typ:i1;Metadata:[!dbg !36];
[MOV] 24:ir.TermCondBr; ir.InstICmp|Cond:i1 %14;TargetTrue:label %15;TargetFalse:label %23;Successors:[label %15 label %23];Metadata:[!dbg !37];
[MOV] 25:ir.Block; label %15|
[MOV] 26:ir.InstLoad; ir.InstLoad ;ir.InstSExt |LocalIdent:{ 16};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !38];
[MOV] 27:ir.InstSExt; ir.InstSExt ;|LocalIdent:{ 17};From:i32 %16;To:i64;Metadata:[!dbg !40];
[MOV] 28:ir.InstGetElementPtr; ir.InstGetElementPtr ;ir.InstLoad |LocalIdent:{ 18};ElemType:[10 x i32];Src:[10 x i32]* %3;Indices:[i64 0 i64 %17];Typ:i32*;InBounds:true;Metadata:[!dbg !40];
[MOV] 29:ir.InstLoad; ir.InstLoad ir.InstCall ;ir.InstCall |LocalIdent:{ 19};ElemType:i32;Src:i32* %18;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !40];
[MOV] 30:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i32)* @printIntLine;Args:[i32 %19];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !41];
[MOV] 31:ir.TermBr; |Target:label %20;Successors:[label %20];Metadata:[!dbg !42];
[MOV] 32:ir.Block; label %20|
[MOV] 33:ir.InstLoad; ir.InstLoad ;ir.InstAdd |LocalIdent:{ 21};ElemType:i32;Src:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !43];
[MOV] 34:ir.InstAdd; ir.InstAdd ;ir.InstStore |LocalIdent:{ 22};X:i32 %21;Y:i32 1;Typ:i32;OverflowFlags:[nsw];Metadata:[!dbg !43];
[MOV] 35:ir.InstStore; ;|Src:i32 %22;Dst:i32* %2;Atomic:false;Volatile:false;SyncScope:;Ordering:none;Align:align 4;Metadata:[!dbg !43];
[MOV] 36:ir.TermBr; label %12|Target:label %12;Successors:[label %12];Metadata:[!dbg !44 !llvm.loop !45];
[MOV] 37:ir.Block; label %23|
[MOV] 38:ir.TermBr; |Target:label %25;Successors:[label %25];Metadata:[!dbg !47];
[MOV] 39:ir.Block; label %24|
[MOV] 40:ir.InstCall; ;|LocalIdent:{ 0};Callee:void (i8*)* @printLine;Args:[i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)];Typ:void;Tail:none;FastMathFlags:[];CallingConv:none;ReturnAttrs:[];AddrSpace:addrspace(0);FuncAttrs:[];OperandBundles:[];Metadata:[!dbg !48];
[MOV] 41:ir.TermBr; |Target:label %25;Successors:[label %25];Metadata:[];
[MOV] 42:ir.Block; label %25|
[MOV] 43:ir.TermRet; |X:<nil>;Metadata:[!dbg !50];
0:ir.Block,4,1:ir.InstAlloca
0:ir.Block,3,1:ir.InstAlloca
0:ir.Block,4,2:ir.InstAlloca
1:ir.InstAlloca,3,2:ir.InstAlloca
0:ir.Block,4,3:ir.InstAlloca
2:ir.InstAlloca,3,3:ir.InstAlloca
0:ir.Block,4,4:ir.InstCall
3:ir.InstAlloca,3,4:ir.InstCall
0:ir.Block,4,5:ir.InstLoad
4:ir.InstCall,3,5:ir.InstLoad
0:ir.Block,4,6:ir.InstStore
5:ir.InstLoad,3,6:ir.InstStore
0:ir.Block,4,7:ir.InstCall
6:ir.InstStore,3,7:ir.InstCall
0:ir.Block,4,8:ir.InstCall
7:ir.InstCall,3,8:ir.InstCall
0:ir.Block,4,9:ir.InstBitCast
8:ir.InstCall,3,9:ir.InstBitCast
0:ir.Block,4,10:ir.InstCall
9:ir.InstBitCast,3,10:ir.InstCall
0:ir.Block,4,11:ir.InstLoad
10:ir.InstCall,3,11:ir.InstLoad
0:ir.Block,4,12:ir.InstICmp
11:ir.InstLoad,3,12:ir.InstICmp
12:ir.InstICmp,3,13:ir.TermCondBr
13:ir.TermCondBr,5,14:ir.Block
13:ir.TermCondBr,3,14:ir.Block
13:ir.TermCondBr,5,39:ir.Block
13:ir.TermCondBr,3,39:ir.Block
14:ir.Block,4,15:ir.InstLoad
14:ir.Block,3,15:ir.InstLoad
14:ir.Block,4,16:ir.InstSExt
15:ir.InstLoad,3,16:ir.InstSExt
14:ir.Block,4,17:ir.InstGetElementPtr
16:ir.InstSExt,3,17:ir.InstGetElementPtr
14:ir.Block,4,18:ir.InstStore
17:ir.InstGetElementPtr,3,18:ir.InstStore
14:ir.Block,4,19:ir.InstStore
18:ir.InstStore,3,19:ir.InstStore
19:ir.InstStore,3,20:ir.TermBr
20:ir.TermBr,5,21:ir.Block
20:ir.TermBr,3,21:ir.Block
21:ir.Block,4,22:ir.InstLoad
21:ir.Block,3,22:ir.InstLoad
21:ir.Block,4,23:ir.InstICmp
22:ir.InstLoad,3,23:ir.InstICmp
23:ir.InstICmp,3,24:ir.TermCondBr
24:ir.TermCondBr,5,25:ir.Block
24:ir.TermCondBr,3,25:ir.Block
24:ir.TermCondBr,5,37:ir.Block
24:ir.TermCondBr,3,37:ir.Block
25:ir.Block,4,26:ir.InstLoad
25:ir.Block,3,26:ir.InstLoad
25:ir.Block,4,27:ir.InstSExt
26:ir.InstLoad,3,27:ir.InstSExt
25:ir.Block,4,28:ir.InstGetElementPtr
27:ir.InstSExt,3,28:ir.InstGetElementPtr
25:ir.Block,4,29:ir.InstLoad
28:ir.InstGetElementPtr,3,29:ir.InstLoad
25:ir.Block,4,30:ir.InstCall
29:ir.InstLoad,3,30:ir.InstCall
30:ir.InstCall,3,31:ir.TermBr
31:ir.TermBr,5,32:ir.Block
31:ir.TermBr,3,32:ir.Block
32:ir.Block,4,33:ir.InstLoad
32:ir.Block,3,33:ir.InstLoad
32:ir.Block,4,34:ir.InstAdd
33:ir.InstLoad,3,34:ir.InstAdd
32:ir.Block,4,35:ir.InstStore
34:ir.InstAdd,3,35:ir.InstStore
35:ir.InstStore,3,36:ir.TermBr
36:ir.TermBr,5,21:ir.Block
36:ir.TermBr,3,21:ir.Block
37:ir.Block,3,38:ir.TermBr
38:ir.TermBr,5,42:ir.Block
38:ir.TermBr,3,42:ir.Block
39:ir.Block,4,40:ir.InstCall
39:ir.Block,3,40:ir.InstCall
40:ir.InstCall,3,41:ir.TermBr
41:ir.TermBr,5,42:ir.Block
41:ir.TermBr,3,42:ir.Block
42:ir.Block,3,43:ir.TermRet
2:ir.InstAlloca,1,19:ir.InstStore
19:ir.InstStore,2,2:ir.InstAlloca
2:ir.InstAlloca,1,22:ir.InstLoad
22:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,26:ir.InstLoad
26:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,33:ir.InstLoad
33:ir.InstLoad,2,2:ir.InstAlloca
2:ir.InstAlloca,1,35:ir.InstStore
35:ir.InstStore,2,2:ir.InstAlloca
29:ir.InstLoad,1,30:ir.InstCall
30:ir.InstCall,2,29:ir.InstLoad
33:ir.InstLoad,1,34:ir.InstAdd
34:ir.InstAdd,2,33:ir.InstLoad
5:ir.InstLoad,1,6:ir.InstStore
6:ir.InstStore,2,5:ir.InstLoad
1:ir.InstAlloca,1,6:ir.InstStore
6:ir.InstStore,2,1:ir.InstAlloca
1:ir.InstAlloca,1,11:ir.InstLoad
11:ir.InstLoad,2,1:ir.InstAlloca
1:ir.InstAlloca,1,15:ir.InstLoad
15:ir.InstLoad,2,1:ir.InstAlloca
11:ir.InstLoad,1,12:ir.InstICmp
12:ir.InstICmp,2,11:ir.InstLoad
15:ir.InstLoad,1,16:ir.InstSExt
16:ir.InstSExt,2,15:ir.InstLoad
34:ir.InstAdd,1,35:ir.InstStore
35:ir.InstStore,2,34:ir.InstAdd
17:ir.InstGetElementPtr,1,18:ir.InstStore
18:ir.InstStore,2,17:ir.InstGetElementPtr
22:ir.InstLoad,1,23:ir.InstICmp
23:ir.InstICmp,2,22:ir.InstLoad
26:ir.InstLoad,1,27:ir.InstSExt
27:ir.InstSExt,2,26:ir.InstLoad
28:ir.InstGetElementPtr,1,29:ir.InstLoad
29:ir.InstLoad,2,28:ir.InstGetElementPtr
3:ir.InstAlloca,1,9:ir.InstBitCast
9:ir.InstBitCast,2,3:ir.InstAlloca
3:ir.InstAlloca,1,17:ir.InstGetElementPtr
17:ir.InstGetElementPtr,2,3:ir.InstAlloca
3:ir.InstAlloca,1,28:ir.InstGetElementPtr
28:ir.InstGetElementPtr,2,3:ir.InstAlloca
9:ir.InstBitCast,1,10:ir.InstCall
10:ir.InstCall,2,9:ir.InstBitCast
13:ir.TermCondBr,2,12:ir.InstICmp
12:ir.InstICmp,1,13:ir.TermCondBr
24:ir.TermCondBr,2,23:ir.InstICmp
23:ir.InstICmp,1,24:ir.TermCondBr
